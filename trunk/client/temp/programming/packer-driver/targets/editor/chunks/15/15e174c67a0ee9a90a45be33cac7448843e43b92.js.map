{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/assets/resources/libs/utils/audio_manager.ts"],"names":["GameAudioManager","director","error","Node","AudioClip","AudioSource","Singleton","resLoader","constructor","_audioSource","_loop","_volume","_bgmAudioID","_musicPlayCallback","Map","_effectPlayCallback","audioMgr","name","addPersistRootNode","addComponent","audioSource","setVolume","volume","setLoop","loop","playMusic","sound","bundleName","stop","play","bundle","playAudio","playOneShot","clip","err","asyncLoad","volume_","undefined","options","stopOther","pause","resume","onEnable","node","on","EventType","STARTED","onAudioStarted","ENDED","onAudioEnded","onDisable","off"],"mappings":"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","sourcesContent":["import {director, error, Node, AudioClip, AudioSource} from \"cc\";\r\nimport {Singleton} from \"./singleton\";\r\nimport {resLoader} from \"./res/res_loader\";\r\n\r\ninterface IAudioCallbackOptions {\r\n    onError?: Function;\r\n    onComplete?: Function;\r\n    onStop?: Function;\r\n    onPause?: Function;\r\n    onResume?: Function;\r\n    onEnd?: Function; // onComplete || onError || onStop\r\n}\r\n\r\ntype AudioCallbackMap = Map<number, IAudioCallbackOptions>\r\n\r\ninterface IAudioPlayOptions extends IAudioCallbackOptions {\r\n    loop?: boolean;\r\n    volume?: number;\r\n    bundle?: string;\r\n}\r\n\r\ntype AudioRes = string | AudioClip;\r\n\r\nexport class GameAudioManager extends Singleton<GameAudioManager>() {\r\n    private readonly _audioSource: AudioSource = null;\r\n\r\n    protected constructor() {\r\n        super();\r\n\r\n        let audioMgr = new Node();\r\n        audioMgr.name = '__audioMgr__';\r\n\r\n        // director.getScene().addChild(audioMgr);\r\n\r\n        director.addPersistRootNode(audioMgr);\r\n\r\n        this._audioSource = audioMgr.addComponent(AudioSource);\r\n    }\r\n\r\n    private _loop: boolean = true;\r\n    private _volume: number = 1;\r\n    private _bgmAudioID: number = -1;\r\n\r\n    private _musicPlayCallback: AudioCallbackMap = new Map();\r\n    private _effectPlayCallback: AudioCallbackMap = new Map();\r\n\r\n    public get audioSource() {\r\n        return this._audioSource;\r\n    }\r\n\r\n    public setVolume(volume: number) {\r\n        this._volume = volume;\r\n        this._audioSource.volume = volume;\r\n    }\r\n\r\n    public setLoop(loop: boolean) {\r\n        this._loop = loop;\r\n        this._audioSource.loop = loop;\r\n    }\r\n\r\n    /**\r\n     * 播放背景音乐\r\n     * @param sound 声音源\r\n     * @param volume 音量\r\n     * @param bundleName\r\n     */\r\n    async playMusic(sound: AudioRes, volume: number = 1, bundleName: string = 'resources') {\r\n        this.stop();\r\n\r\n        await this.play(sound, {volume: volume, bundle: bundleName});\r\n    }\r\n\r\n    /**\r\n     * 播放音效\r\n     * @param sound 声音源\r\n     * @param volume 音量\r\n     * @param bundleName\r\n     */\r\n    async playAudio(sound: AudioRes, volume: number = 1, bundleName: string = 'resources') {\r\n        await this.playOneShot(sound, volume, bundleName);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * play short audio, such as strikes,explosions\r\n     * @zh\r\n     * 播放短音频,比如 打击音效，爆炸音效等\r\n     * @param sound clip or url for the audio\r\n     * @param volume 音量\r\n     * @param bundleName\r\n     */\r\n    async playOneShot(sound: AudioRes, volume?: number, bundleName: string = 'resources') {\r\n        if (sound instanceof AudioClip) {\r\n        } else {\r\n            let [clip, err] = await resLoader.asyncLoad<AudioClip>(bundleName, sound, AudioClip);\r\n            if (err) {\r\n                error('create audio clip failed, err:' + err);\r\n                return;\r\n            }\r\n\r\n            sound = clip;\r\n        }\r\n\r\n        const volume_ = (volume !== undefined) ? volume : this._volume;\r\n\r\n        this._audioSource.playOneShot(sound, volume_);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * play long audio, such as the bg music\r\n     * @zh\r\n     * 播放长音频，比如 背景音乐\r\n     * @param sound clip or url for the sound\r\n     * @param options\r\n     * @param stopOther\r\n     */\r\n    async play(sound: AudioRes, options?: IAudioPlayOptions, stopOther = true) {\r\n        if (sound instanceof AudioClip) {\r\n            this._audioSource.clip = sound;\r\n        } else {\r\n            let [clip, err] = await resLoader.asyncLoad<AudioClip>(options.bundle || 'resources', sound, AudioClip);\r\n            if (err) {\r\n                error('create audio clip failed, err:' + err);\r\n                return;\r\n            }\r\n\r\n            this._audioSource.clip = clip;\r\n        }\r\n\r\n        const volume = (options && options.volume !== undefined) ? options.volume : this._volume;\r\n        const loop = (options && options.loop !== undefined) ? options.loop : this._loop;\r\n\r\n        this._audioSource.volume = volume;\r\n        this._audioSource.loop = loop;\r\n\r\n        this._audioSource.play();\r\n    }\r\n\r\n    /**\r\n     * stop the audio play\r\n     */\r\n    stop() {\r\n        this._audioSource.stop();\r\n    }\r\n\r\n    /**\r\n     * pause the audio play\r\n     */\r\n    pause() {\r\n        this._audioSource.pause();\r\n    }\r\n\r\n    /**\r\n     * resume the audio play\r\n     */\r\n    resume() {\r\n        this._audioSource.play();\r\n    }\r\n\r\n    protected onEnable() {\r\n        // Register the started event callback\r\n        this.audioSource.node.on(AudioSource.EventType.STARTED, this.onAudioStarted, this);\r\n        // Register the ended event callback\r\n        this.audioSource.node.on(AudioSource.EventType.ENDED, this.onAudioEnded, this);\r\n    }\r\n\r\n    protected onDisable() {\r\n        this.audioSource.node.off(AudioSource.EventType.STARTED, this.onAudioStarted, this);\r\n        this.audioSource.node.off(AudioSource.EventType.ENDED, this.onAudioEnded, this);\r\n    }\r\n\r\n    protected onAudioStarted() {\r\n        // TODO...\r\n    }\r\n\r\n    protected onAudioEnded() {\r\n        // TODO...\r\n    }\r\n}\r\n"]}