{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/assets/scripts/framework/account/Account.ts"],"names":["oops","ecs","GameEvent","AccountNetDataComp","AccountModelComp","Account","register","Entity","AccountModel","AccountNetData","init","addComponents","addEvent","destroy","removeEvent","message","on","GameServerConnected","onHandler","off","event","args","getPlayer","connect","dispatchEvent","add"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,I,iBAAAA,I;;AACAC,MAAAA,G,iBAAAA,G;;AACAC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,kB,iBAAAA,kB;;AACAC,MAAAA,gB,iBAAAA,gB;;;;;;;AAGT;AACA;AACA;AACA;AACA;AACA;yBAEaC,O,WADZ;AAAA;AAAA,sBAAIC,QAAJ,CAAa,SAAb,C,gBAAD,MACaD,OADb,SAC6B;AAAA;AAAA,sBAAIE,MADjC,CACwC;AAAA;AAAA;AAAA,eACpCC,YADoC;AAAA,eAEpCC,cAFoC;AAAA;;AAI1BC,QAAAA,IAAI,GAAG;AACb,eAAKC,aAAL;AAAA;AAAA;AACA,eAAKC,QAAL;AACH;;AAEDC,QAAAA,OAAO,GAAS;AACZ,eAAKC,WAAL;AACA,gBAAMD,OAAN;AACH;AAED;;;AACQD,QAAAA,QAAQ,GAAG;AACf;AAAA;AAAA,4BAAKG,OAAL,CAAaC,EAAb,CAAgB;AAAA;AAAA,sCAAUC,mBAA1B,EAA+C,KAAKC,SAApD,EAA+D,IAA/D;AACH;AAED;;;AACQJ,QAAAA,WAAW,GAAG;AAClB;AAAA;AAAA,4BAAKC,OAAL,CAAaI,GAAb,CAAiB;AAAA;AAAA,sCAAUF,mBAA3B,EAAgD,KAAKC,SAArD,EAAgE,IAAhE;AACH;;AAEOA,QAAAA,SAAS,CAACE,KAAD,EAAgBC,IAAhB,EAA2B;AACxC,kBAAQD,KAAR;AACI,iBAAK;AAAA;AAAA,wCAAUH,mBAAf;AACI,mBAAKK,SAAL;AACA;AAHR;AAKH;AAED;;;AACAC,QAAAA,OAAO,GAAG;AACN;AACA;AAEA;AACA;AAAA;AAAA,4BAAKR,OAAL,CAAaS,aAAb,CAA2B;AAAA;AAAA,sCAAUP,mBAArC;AACH;AAED;;;AACAK,QAAAA,SAAS,GAAG;AACR,eAAKG,GAAL;AAAA;AAAA;AACH;;AA5CmC,O,eA+CxC;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["\r\nimport { oops } from \"../../../../extensions/oops-plugin-framework/assets/core/Oops\";\r\nimport { ecs } from \"../../../../extensions/oops-plugin-framework/assets/libs/ecs/ECS\";\r\nimport { GameEvent } from \"../common/config/GameEvent\";\r\nimport { AccountNetDataComp, AccountNetDataSystem } from \"./bll/AccountNetData\";\r\nimport { AccountModelComp } from \"./model/AccountModelComp\";\r\n\r\n\r\n/**\r\n * 账号模块\r\n * 1、连接游戏服务器\r\n * 2、登录玩家帐号，获取玩家信息\r\n * 3、断线重连接\r\n */\r\n@ecs.register('Account')\r\nexport class Account extends ecs.Entity {\r\n    AccountModel!: AccountModelComp;\r\n    AccountNetData!: AccountNetDataComp;\r\n\r\n    protected init() {\r\n        this.addComponents<ecs.Comp>(AccountModelComp);\r\n        this.addEvent();\r\n    }\r\n\r\n    destroy(): void {\r\n        this.removeEvent();\r\n        super.destroy();\r\n    }\r\n\r\n    /** 添加全局消息事件 */\r\n    private addEvent() {\r\n        oops.message.on(GameEvent.GameServerConnected, this.onHandler, this);\r\n    }\r\n\r\n    /** 移除全局消息事件 */\r\n    private removeEvent() {\r\n        oops.message.off(GameEvent.GameServerConnected, this.onHandler, this);\r\n    }\r\n\r\n    private onHandler(event: string, args: any) {\r\n        switch (event) {\r\n            case GameEvent.GameServerConnected:\r\n                this.getPlayer();\r\n                break;\r\n        }\r\n    }\r\n\r\n    /** 连接游戏服务器 */\r\n    connect() {\r\n        // netChannel.gameCreate();\r\n        // netChannel.gameConnect();\r\n\r\n        // 无网状态下测试代码，有网络时会通过触发网络连接成功事件对接后续流程\r\n        oops.message.dispatchEvent(GameEvent.GameServerConnected)\r\n    }\r\n\r\n    /** 获取玩家信息 */\r\n    getPlayer() {\r\n        this.add(AccountNetDataComp);\r\n    }\r\n}\r\n\r\n// export class EcsAccountSystem extends ecs.System {\r\n//     constructor() {\r\n//         super();\r\n\r\n//         this.add(new AccountNetDataSystem());\r\n//     }\r\n// }\r\n"]}