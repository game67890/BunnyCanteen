{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/extensions/oops-plugin-framework/assets/core/gui/layer/LayerPopup.ts"],"names":["LayerPopUp","BlockInputEvents","Layers","Node","ViewUtil","LayerUI","Mask","constructor","name","black","mask","init","layer","Enum","UI_2D","addComponent","enabled","showUi","vp","r","openVacancyRemove","config","onCloseWindow","setBlackDisable","ui_nodes","size","closeVacancyRemove","closeMask","flag","value","values","parent","hasEventListener","EventType","TOUCH_END","onTouchEnd","on","createPrefabNode","setSiblingIndex","vacancy","off","event","target","forEach","valid","remove","prefab","destroy","clear","isDestroy","active"],"mappings":";;;kIAeaA,U;;;;;;;;;;;;;;;;;;;;;;;;;;;AATJC,MAAAA,gB,OAAAA,gB;AAA8BC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,I,OAAAA,I;;AACtCC,MAAAA,Q,iBAAAA,Q;;AAGAC,MAAAA,O,iBAAAA,O;;;;;;AAVT;AACA;AACA;AACA;AACA;;;;;AAQMC,MAAAA,I,GAAe,oB;AAErB;;4BACaN,U,GAAN,MAAMA,UAAN;AAAA;AAAA,8BAAiC;AAMpCO,QAAAA,WAAW,CAACC,IAAD,EAAe;AACtB,gBAAMA,IAAN;;AANJ;AAK0B,eAJhBC,KAIgB;;AAH1B;AAG0B,eAFhBC,IAEgB;AAEtB,eAAKC,IAAL;AACH;;AAEOA,QAAAA,IAAI,GAAG;AACX,eAAKC,KAAL,GAAaV,MAAM,CAACW,IAAP,CAAYC,KAAzB;AACA,eAAKL,KAAL,GAAa,KAAKM,YAAL,CAAkBd,gBAAlB,CAAb;AACA,eAAKQ,KAAL,CAAWO,OAAX,GAAqB,KAArB;AACH;;AAEqB,cAANC,MAAM,CAACC,EAAD,EAAmC;AACrD,gBAAMC,CAAC,GAAG,MAAM,MAAMF,MAAN,CAAaC,EAAb,CAAhB;;AACA,cAAIC,CAAJ,EAAO;AACH;AACA,iBAAKC,iBAAL,CAAuBF,EAAE,CAACG,MAA1B,EAFG,CAIH;;AACA,iBAAKZ,KAAL,CAAWO,OAAX,GAAqB,IAArB;AACH;;AACD,iBAAOG,CAAP;AACH;;AAESG,QAAAA,aAAa,CAACJ,EAAD,EAAiB;AACpC,gBAAMI,aAAN,CAAoBJ,EAApB,EADoC,CAGpC;;AACA,eAAKK,eAAL;AACH;AAED;;;AACUA,QAAAA,eAAe,GAAG;AACxB;AACA,cAAI,KAAKC,QAAL,CAAcC,IAAd,IAAsB,CAA1B,EAA6B;AACzB,iBAAKhB,KAAL,CAAWO,OAAX,GAAqB,KAArB;AACH;;AACD,eAAKU,kBAAL;AACA,eAAKC,SAAL;AACH;AAED;;;AACUA,QAAAA,SAAS,GAAG;AAClB,cAAI,KAAKjB,IAAL,IAAa,IAAjB,EAAuB;AAEvB,cAAIkB,IAAI,GAAG,IAAX;;AACA,eAAK,IAAIC,KAAT,IAAkB,KAAKL,QAAL,CAAcM,MAAd,EAAlB,EAA0C;AACtC,gBAAID,KAAK,CAACR,MAAN,CAAaX,IAAjB,EAAuB;AACnBkB,cAAAA,IAAI,GAAG,KAAP;AACA;AACH;AACJ;;AAED,cAAIA,IAAJ,EAAU;AACN,iBAAKlB,IAAL,CAAUqB,MAAV,GAAmB,IAAnB;AACH;AACJ;AAED;;;AACUX,QAAAA,iBAAiB,CAACC,MAAD,EAAmB;AAC1C,cAAI,CAAC,KAAKW,gBAAL,CAAsB7B,IAAI,CAAC8B,SAAL,CAAeC,SAArC,EAAgD,KAAKC,UAArD,EAAiE,IAAjE,CAAL,EAA6E;AACzE,iBAAKC,EAAL,CAAQjC,IAAI,CAAC8B,SAAL,CAAeC,SAAvB,EAAkC,KAAKC,UAAvC,EAAmD,IAAnD;AACH,WAHyC,CAK1C;;;AACA,cAAI,KAAKzB,IAAL,IAAa,IAAjB,EAAuB;AACnB,iBAAKA,IAAL,GAAY;AAAA;AAAA,sCAAS2B,gBAAT,CAA0B/B,IAA1B,CAAZ;AACH;;AACD,cAAIe,MAAM,CAACX,IAAX,EAAiB;AACb,iBAAKA,IAAL,CAAUqB,MAAV,GAAmB,IAAnB;AACA,iBAAKrB,IAAL,CAAU4B,eAAV,CAA0B,CAA1B;AACH;AACJ;AAED;;;AACUZ,QAAAA,kBAAkB,GAAG;AAC3B,cAAIE,IAAI,GAAG,IAAX;;AACA,eAAK,IAAIC,KAAT,IAAkB,KAAKL,QAAL,CAAcM,MAAd,EAAlB,EAA0C;AACtC,gBAAID,KAAK,CAACR,MAAN,CAAakB,OAAjB,EAA0B;AACtBX,cAAAA,IAAI,GAAG,KAAP;AACA;AACH;AACJ;;AAED,cAAIA,IAAI,IAAI,KAAKI,gBAAL,CAAsB7B,IAAI,CAAC8B,SAAL,CAAeC,SAArC,EAAgD,KAAKC,UAArD,EAAiE,IAAjE,CAAZ,EAAoF;AAChF,iBAAKK,GAAL,CAASrC,IAAI,CAAC8B,SAAL,CAAeC,SAAxB,EAAmC,KAAKC,UAAxC,EAAoD,IAApD;AACH;AACJ;;AAEOA,QAAAA,UAAU,CAACM,KAAD,EAAoB;AAClC,cAAIA,KAAK,CAACC,MAAN,KAAiB,IAArB,EAA2B;AACvB,iBAAKlB,QAAL,CAAcmB,OAAd,CAAsBzB,EAAE,IAAI;AACxB;AACA,kBAAIA,EAAE,CAAC0B,KAAH,IAAY1B,EAAE,CAACG,MAAH,CAAUkB,OAA1B,EAAmC;AAC/B,qBAAKM,MAAL,CAAY3B,EAAE,CAACG,MAAH,CAAUyB,MAAtB,EAA8B5B,EAAE,CAACG,MAAH,CAAU0B,OAAxC;AACH;AACJ,aALD;AAMH;AACJ;;AAEDC,QAAAA,KAAK,CAACC,SAAD,EAAqB;AACtB,gBAAMD,KAAN,CAAYC,SAAZ;AACA,eAAKxC,KAAL,CAAWO,OAAX,GAAqB,KAArB;AACA,eAAKkC,MAAL,GAAc,KAAd;AACA,eAAKxB,kBAAL;AACA,eAAKC,SAAL;AACH;;AA/GmC,O","sourcesContent":["/*\r\n * @Date: 2021-11-24 16:08:36\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2022-09-02 13:44:28\r\n */\r\n\r\nimport { BlockInputEvents, EventTouch, Layers, Node } from \"cc\";\r\nimport { ViewUtil } from \"../../utils/ViewUtil\";\r\nimport { ViewParams } from \"./Defines\";\r\nimport { UIConfig } from \"./LayerManager\";\r\nimport { LayerUI } from \"./LayerUI\";\r\n\r\nconst Mask: string = 'common/prefab/mask';\r\n\r\n/* 弹窗层，允许同时弹出多个窗口 */\r\nexport class LayerPopUp extends LayerUI {\r\n    /** 触摸事件阻挡 */\r\n    protected black!: BlockInputEvents;\r\n    /** 半透明遮罩资源 */\r\n    protected mask!: Node;\r\n\r\n    constructor(name: string) {\r\n        super(name);\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.layer = Layers.Enum.UI_2D;\r\n        this.black = this.addComponent(BlockInputEvents);\r\n        this.black.enabled = false;\r\n    }\r\n\r\n    protected async showUi(vp: ViewParams): Promise<boolean> {\r\n        const r = await super.showUi(vp);\r\n        if (r) {\r\n            // 界面加载完成显示时，启动触摸非窗口区域关闭\r\n            this.openVacancyRemove(vp.config);\r\n\r\n            // 界面加载完成显示时，层级事件阻挡\r\n            this.black.enabled = true;\r\n        }\r\n        return r;\r\n    }\r\n\r\n    protected onCloseWindow(vp: ViewParams) {\r\n        super.onCloseWindow(vp);\r\n\r\n        // 界面关闭后，关闭触摸事件阻挡、关闭触摸非窗口区域关闭、关闭遮罩\r\n        this.setBlackDisable();\r\n    }\r\n\r\n    /** 设置触摸事件阻挡 */\r\n    protected setBlackDisable() {\r\n        // 所有弹窗关闭后，关闭事件阻挡功能\r\n        if (this.ui_nodes.size == 0) {\r\n            this.black.enabled = false;\r\n        }\r\n        this.closeVacancyRemove();\r\n        this.closeMask();\r\n    }\r\n\r\n    /** 关闭遮罩 */\r\n    protected closeMask() {\r\n        if (this.mask == null) return;\r\n\r\n        let flag = true;\r\n        for (let value of this.ui_nodes.values()) {\r\n            if (value.config.mask) {\r\n                flag = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (flag) {\r\n            this.mask.parent = null;\r\n        }\r\n    }\r\n\r\n    /** 启动触摸非窗口区域关闭 */\r\n    protected openVacancyRemove(config: UIConfig) {\r\n        if (!this.hasEventListener(Node.EventType.TOUCH_END, this.onTouchEnd, this)) {\r\n            this.on(Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        }\r\n\r\n        // 背景半透明遮罩\r\n        if (this.mask == null) {\r\n            this.mask = ViewUtil.createPrefabNode(Mask);\r\n        }\r\n        if (config.mask) {\r\n            this.mask.parent = this;\r\n            this.mask.setSiblingIndex(0);\r\n        }\r\n    }\r\n\r\n    /** 关闭触摸非窗口区域关闭 */\r\n    protected closeVacancyRemove() {\r\n        let flag = true;\r\n        for (let value of this.ui_nodes.values()) {\r\n            if (value.config.vacancy) {\r\n                flag = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (flag && this.hasEventListener(Node.EventType.TOUCH_END, this.onTouchEnd, this)) {\r\n            this.off(Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        }\r\n    }\r\n\r\n    private onTouchEnd(event: EventTouch) {\r\n        if (event.target === this) {\r\n            this.ui_nodes.forEach(vp => {\r\n                // 关闭已显示的界面\r\n                if (vp.valid && vp.config.vacancy) {\r\n                    this.remove(vp.config.prefab, vp.config.destroy);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    clear(isDestroy: boolean) {\r\n        super.clear(isDestroy)\r\n        this.black.enabled = false;\r\n        this.active = false;\r\n        this.closeVacancyRemove();\r\n        this.closeMask();\r\n    }\r\n}"]}