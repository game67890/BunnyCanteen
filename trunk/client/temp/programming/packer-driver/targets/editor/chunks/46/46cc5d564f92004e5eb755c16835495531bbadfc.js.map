{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/extensions/oops-plugin-framework/assets/core/gui/layer/LayerDialog.ts"],"names":["LayerDialog","ViewParams","LayerPopUp","params","add","config","callbacks","ui_nodes","size","push","black","enabled","show","vp","ui_cache","get","prefab","valid","set","load","bundle","onCloseWindow","setTimeout","next","bind","setBlackDisable","length","closeVacancyRemove","closeMask","param","shift"],"mappings":";;;sDAqBaA,W;;;;;;;;;;;;;;;;;;;;;;;;;;AAdSC,MAAAA,U,iBAAAA,U;;AAEbC,MAAAA,U,iBAAAA,U;;;;;;AATT;AACA;AACA;AACA;AACA;AACA;;;AAMA;;AAOA;AACA;AACA;6BACaF,W,GAAN,MAAMA,WAAN;AAAA;AAAA,oCAAqC;AAAA;AAAA;;AACxC;AADwC,eAEhCG,MAFgC,GAEH,EAFG;AAAA;;AAIxCC,QAAAA,GAAG,CAACC,MAAD,EAAmBF,MAAnB,EAAiCG,SAAjC,EAA0D;AACzD;AACA,cAAI,KAAKC,QAAL,CAAcC,IAAd,GAAqB,CAAzB,EAA4B;AACxB,iBAAKL,MAAL,CAAYM,IAAZ,CAAiB;AACbJ,cAAAA,MAAM,EAAEA,MADK;AAEbF,cAAAA,MAAM,EAAEA,MAFK;AAGbG,cAAAA,SAAS,EAAEA;AAHE,aAAjB;AAKA;AACH;;AAED,eAAKI,KAAL,CAAWC,OAAX,GAAqB,IAArB;AACA,eAAKC,IAAL,CAAUP,MAAV,EAAkBF,MAAlB,EAA0BG,SAA1B;AACH;AAED;;;AACQM,QAAAA,IAAI,CAACP,MAAD,EAAmBF,MAAnB,EAAiCG,SAAjC,EAA0D;AAClE,cAAIO,EAAE,GAAG,KAAKC,QAAL,CAAcC,GAAd,CAAkBV,MAAM,CAACW,MAAzB,CAAT;;AACA,cAAIH,EAAE,IAAI,IAAV,EAAgB;AACZA,YAAAA,EAAE,GAAG;AAAA;AAAA,2CAAL;AACAA,YAAAA,EAAE,CAACI,KAAH,GAAW,IAAX;AACAJ,YAAAA,EAAE,CAACR,MAAH,GAAYA,MAAZ;AACH;;AAEDQ,UAAAA,EAAE,CAACV,MAAH,GAAYA,MAAM,IAAI,EAAtB;AACAU,UAAAA,EAAE,CAACP,SAAH,GAAeA,SAAf,WAAeA,SAAf,GAA4B,EAA5B;AACA,eAAKC,QAAL,CAAcW,GAAd,CAAkBL,EAAE,CAACR,MAAH,CAAUW,MAA5B,EAAoCH,EAApC;AAEA,eAAKM,IAAL,CAAUN,EAAV,EAAcR,MAAM,CAACe,MAArB;AACH;;AAESC,QAAAA,aAAa,CAACR,EAAD,EAAiB;AACpC,gBAAMQ,aAAN,CAAoBR,EAApB;AACAS,UAAAA,UAAU,CAAC,KAAKC,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAD,EAAuB,CAAvB,CAAV;AACH;;AAESC,QAAAA,eAAe,GAAG;AACxB,cAAI,KAAKtB,MAAL,CAAYuB,MAAZ,IAAsB,CAA1B,EAA6B;AACzB,iBAAKhB,KAAL,CAAWC,OAAX,GAAqB,KAArB;AACA,iBAAKgB,kBAAL;AACA,iBAAKC,SAAL;AACH;AACJ;;AAEOL,QAAAA,IAAI,GAAG;AACX,cAAI,KAAKpB,MAAL,CAAYuB,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,gBAAIG,KAAK,GAAG,KAAK1B,MAAL,CAAY2B,KAAZ,EAAZ;AACA,iBAAKlB,IAAL,CAAUiB,KAAK,CAACxB,MAAhB,EAAwBwB,KAAK,CAAC1B,MAA9B,EAAsC0B,KAAK,CAACvB,SAA5C;AACH;AACJ;;AArDuC,O","sourcesContent":["/*\r\n * @Author: dgflash\r\n * @Date: 2021-07-03 16:13:17\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2023-07-24 17:14:57\r\n */\r\n\r\nimport { UICallbacks, ViewParams } from \"./Defines\";\r\nimport { UIConfig } from \"./LayerManager\";\r\nimport { LayerPopUp } from \"./LayerPopup\";\r\n\r\n/** 模式弹窗数据 */\r\ntype DialogParam = {\r\n    config: UIConfig;\r\n    params?: any;\r\n    callbacks?: UICallbacks;\r\n}\r\n\r\n/*\r\n * 模式弹窗层，该层的窗口同时只能显示一个，删除以后会自动从队列当中取一个弹窗，直到队列为空\r\n */\r\nexport class LayerDialog extends LayerPopUp {\r\n    /** 窗口调用参数队列 */\r\n    private params: Array<DialogParam> = [];\r\n\r\n    add(config: UIConfig, params?: any, callbacks?: UICallbacks) {\r\n        // 控制同一时间只能显示一个模式窗口\r\n        if (this.ui_nodes.size > 0) {\r\n            this.params.push({\r\n                config: config,\r\n                params: params,\r\n                callbacks: callbacks,\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.black.enabled = true;\r\n        this.show(config, params, callbacks);\r\n    }\r\n\r\n    /** 显示模式弹窗 */\r\n    private show(config: UIConfig, params?: any, callbacks?: UICallbacks) {\r\n        let vp = this.ui_cache.get(config.prefab);\r\n        if (vp == null) {\r\n            vp = new ViewParams();\r\n            vp.valid = true;\r\n            vp.config = config;\r\n        }\r\n\r\n        vp.params = params || {};\r\n        vp.callbacks = callbacks ?? {};\r\n        this.ui_nodes.set(vp.config.prefab, vp);\r\n\r\n        this.load(vp, config.bundle);\r\n    }\r\n\r\n    protected onCloseWindow(vp: ViewParams) {\r\n        super.onCloseWindow(vp);\r\n        setTimeout(this.next.bind(this), 0);\r\n    }\r\n\r\n    protected setBlackDisable() {\r\n        if (this.params.length == 0) {\r\n            this.black.enabled = false;\r\n            this.closeVacancyRemove();\r\n            this.closeMask()\r\n        }\r\n    }\r\n\r\n    private next() {\r\n        if (this.params.length > 0) {\r\n            let param = this.params.shift()!;\r\n            this.show(param.config, param.params, param.callbacks);\r\n        }\r\n    }\r\n}"]}