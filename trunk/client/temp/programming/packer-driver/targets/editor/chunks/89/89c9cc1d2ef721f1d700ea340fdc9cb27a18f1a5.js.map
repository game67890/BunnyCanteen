{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/assets/scripts/tongame/task/TaskVirtualGridList.ts"],"names":["_decorator","Node","Prefab","UITransform","instantiate","VirtualGridList","IVirtualGridListItem","ccclass","property","TaskVirtualGridList","tooltip","type","_initializeList","_itemHeight","itemPrefab","data","getComponent","height","_itemWidth","width","columnNum","Math","floor","_content","spacingX","useVirtualLayout","_bufferZone","node","_spawnCount","ceil","_lastContentPosY","_initialized","_dataList","createItemsDisplayList","_createFixedIncrementItems","startIndex","_items","fixCount","_totalCount","dataList","i","item","_createOneItemDisplay","push","length","scheduleOnce","onDataChanged","idx","TitleId","titlePrefab","addChild","_updateItemPos","component","updateItem","imageCache","_imageCache","on","EventType","TOUCH_END","_onItemTouched","col","row","PreHeight","contentUiTrans","itemUiTrans","setPosition","spacingY","paddingTop"],"mappings":"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","sourcesContent":["import {_decorator, Label, Sprite, math, SpriteFrame, Node, Prefab, UITransform, instantiate} from 'cc';\r\nimport { VirtualGridList } from \"../../../resources/libs/virtual_grid_list/virtual_grid_list\";\r\nimport {IVirtualGridListItem} from \"../../../resources/libs/virtual_grid_list/interface\";\r\n\r\nconst {ccclass, property} = _decorator;\r\n\r\n@ccclass('TaskVirtualGridList')\r\nexport class TaskVirtualGridList extends VirtualGridList {\r\n    @property({\r\n        tooltip: 'title的预制体',\r\n        type: Prefab,\r\n    })\r\n    protected titlePrefab: Prefab = null;\r\n\r\n    /**\r\n     * 初始化布局\r\n     */\r\n    protected _initializeList() {\r\n        // this._gridList = this.node.getComponent(ScrollView);\r\n        // this._content = this._gridList.content;\r\n        this._itemHeight = (this.itemPrefab.data as Node).getComponent(UITransform).height;\r\n        this._itemWidth = (this.itemPrefab.data as Node).getComponent(UITransform).width;\r\n        if (this.columnNum == 0) {\r\n            // 自动计算\r\n            this.columnNum = Math.floor((this._content.getComponent(UITransform).width + this.spacingX) / (this._itemWidth + this.spacingX));\r\n            if (this.columnNum < 1) {\r\n                this.columnNum = 1;\r\n            }\r\n        }\r\n\r\n        if (this.useVirtualLayout) {\r\n            //this.node.on('scrolling', this._onVirtualLayoutScrolling, this);\r\n        } else {\r\n            // this.node.on('scrolling', this._onScrolling, this);\r\n        }\r\n        // 缓冲区域，半屏加1个item高度\r\n        this._bufferZone = this.node.getComponent(UITransform).height * 0.5 + this._itemHeight;\r\n\r\n        // 计算出需要同时绘制的数量(一屏数量 + 二行(上下各一行))\r\n        this._spawnCount = Math.ceil(this.node.getComponent(UITransform).height / this._itemHeight + 2) * this.columnNum;\r\n\r\n        this._lastContentPosY = 0;\r\n        this._initialized = true;\r\n\r\n        // 数据列表可能在初始化完成之前进入\r\n        if (this._dataList) {\r\n            this.createItemsDisplayList(this._dataList);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建固定增量的items\r\n     * @param {Number} startIndex 起始索引\r\n     */\r\n    protected _createFixedIncrementItems(startIndex: number = 0) {\r\n        this._items = [];\r\n        startIndex = startIndex || 0\r\n        // 如果总数量不足够同时创建的数量，则只创建总数量\r\n        let fixCount = this._totalCount;\r\n\r\n        let dataList = this._dataList;\r\n        for (let i = startIndex; i < fixCount; i++) {\r\n            let item = this._createOneItemDisplay(i, dataList[i]);\r\n            this._items.push(item);\r\n        }\r\n        dataList = null;\r\n\r\n        if (this._items.length > 0) {\r\n            this.scheduleOnce(() => {\r\n                for (let i = 0; i < this._items.length; i++) {\r\n                    (this._items[i].getComponent(IVirtualGridListItem) as IVirtualGridListItem).onDataChanged();\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建一个item\r\n     * @param {Number} idx 索引\r\n     * @param {*} data\r\n     * @returns {Node} 返回一个显示单元\r\n     */\r\n    protected _createOneItemDisplay(idx: number, data: any): Node {\r\n        let item : any = null;\r\n        if (data.TitleId > 0)\r\n        {\r\n            item = instantiate(this.titlePrefab);\r\n        }\r\n        else\r\n        {\r\n            item = instantiate(this.itemPrefab);\r\n        }\r\n        \r\n        this._content.addChild(item);\r\n\r\n        // 更新位置\r\n        this._updateItemPos(item, idx);\r\n\r\n        // 更新id\r\n        const component = (item.getComponent(IVirtualGridListItem) as IVirtualGridListItem);\r\n        component.updateItem(data, idx);\r\n        component.imageCache = this._imageCache;\r\n\r\n        item.on(Node.EventType.TOUCH_END, this._onItemTouched, this);\r\n        return item;\r\n    }\r\n\r\n     /**\r\n     * 更新item位置\r\n     * @param {Node} item item节点\r\n     * @param {Number} idx 索引\r\n     */\r\n     protected _updateItemPos(item: Node, idx: number) {\r\n        const col = idx % this.columnNum;\r\n        const row = Math.floor(idx / this.columnNum);\r\n\r\n        let PreHeight = 0;\r\n        for (let i = 0; i < idx; i++) {\r\n            PreHeight = PreHeight +  this._items[i].getComponent(UITransform).height;\r\n        }\r\n\r\n        const contentUiTrans = this._content.getComponent(UITransform)!;\r\n        const itemUiTrans = item.getComponent(UITransform)!;\r\n\r\n        item.setPosition(\r\n            -contentUiTrans.width * 0.5 + itemUiTrans.width * (0.5 + col) + this.spacingX * col,\r\n            -PreHeight- (itemUiTrans.height * 0.5) - this.spacingY * (row) - this.paddingTop\r\n        );\r\n    }\r\n}\r\n"]}