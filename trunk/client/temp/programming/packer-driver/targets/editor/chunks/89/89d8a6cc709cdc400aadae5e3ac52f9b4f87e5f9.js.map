{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/extensions/oops-plugin-framework/assets/core/utils/TimeUtils.ts"],"names":["TimeUtil","daysBetween","time1","time2","undefined","Date","startDate","toLocaleDateString","endDate","startTime","getTime","endTime","Math","abs","secsBetween","dates","floor","sleep","ms","Promise","resolve","setTimeout"],"mappings":";;;iBACaA,Q;;;;;;;;;;;;;AADb;0BACaA,Q,GAAN,MAAMA,QAAN,CAAe;AAClB;AACJ;AACA;AACA;AACA;AACA;AAC6B,eAAXC,WAAW,CAACC,KAAD,EAAgCC,KAAhC,EAAuE;AAC5F,cAAIA,KAAK,IAAIC,SAAb,EAAwB;AACpBD,YAAAA,KAAK,GAAG,CAAC,IAAIE,IAAJ,EAAT;AACH;;AACD,cAAIC,SAAS,GAAG,IAAID,IAAJ,CAASH,KAAT,EAAgBK,kBAAhB,EAAhB;AACA,cAAIC,OAAO,GAAG,IAAIH,IAAJ,CAASF,KAAT,EAAgBI,kBAAhB,EAAd;AACA,cAAIE,SAAS,GAAG,IAAIJ,IAAJ,CAASC,SAAT,EAAoBI,OAApB,EAAhB;AACA,cAAIC,OAAO,GAAG,IAAIN,IAAJ,CAASG,OAAT,EAAkBE,OAAlB,EAAd;AACA,iBAAOE,IAAI,CAACC,GAAL,CAAUJ,SAAS,GAAGE,OAAtB,KAAmC,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAApD,CAAP;AACH;AAED;;;AACyB,eAAXG,WAAW,CAACZ,KAAD,EAAgBC,KAAhB,EAA+B;AACpD,cAAIY,KAAK,GAAGH,IAAI,CAACC,GAAL,CAAUV,KAAK,GAAGD,KAAlB,IAA6B,IAAzC;AACAa,UAAAA,KAAK,GAAGH,IAAI,CAACI,KAAL,CAAWD,KAAX,IAAoB,CAA5B;AACA,iBAAOA,KAAP;AACH;AAED;AACJ;AACA;AACA;;;AAC6B,qBAALE,KAAK,CAACC,EAAD,EAAa;AAClC,iBAAO,IAAIC,OAAJ,CAAmBC,OAAD,IAAa;AAClCC,YAAAA,UAAU,CAAC,MAAM;AACbD,cAAAA,OAAO;AACV,aAFS,EAEPF,EAFO,CAAV;AAGH,WAJM,CAAP;AAKH;;AAnCiB,O","sourcesContent":["/** 时间工具 */\r\nexport class TimeUtil {\r\n    /**\r\n     * 间隔天数\r\n     * @param time1 开始时间\r\n     * @param time2 结束时间\r\n     * @returns \r\n     */\r\n    public static daysBetween(time1: number | string | Date, time2: number | string | Date): number {\r\n        if (time2 == undefined) {\r\n            time2 = +new Date();\r\n        }\r\n        let startDate = new Date(time1).toLocaleDateString()\r\n        let endDate = new Date(time2).toLocaleDateString()\r\n        let startTime = new Date(startDate).getTime();\r\n        let endTime = new Date(endDate).getTime();\r\n        return Math.abs((startTime - endTime)) / (1000 * 60 * 60 * 24);\r\n    }\r\n\r\n    /** 间隔秒数，时间顺序无要求，最后会获取绝对值 */\r\n    public static secsBetween(time1: number, time2: number) {\r\n        let dates = Math.abs((time2 - time1)) / (1000);\r\n        dates = Math.floor(dates) + 1;\r\n        return dates;\r\n    }\r\n\r\n    /**\r\n     * 代码休眠时间\r\n     * @param ms 毫秒\r\n     */\r\n    public static async sleep(ms: number) {\r\n        return new Promise<void>((resolve) => {\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, ms)\r\n        });\r\n    }\r\n}"]}