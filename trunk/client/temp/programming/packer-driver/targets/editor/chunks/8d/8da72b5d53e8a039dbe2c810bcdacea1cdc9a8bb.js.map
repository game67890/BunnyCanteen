{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/extensions/oops-plugin-framework/assets/libs/gui/language/LanguageLabel.ts"],"names":["CCString","Component","Label","RichText","_decorator","warn","EDITOR","LanguageData","ccclass","property","menu","LangLabelParamsItem","LanguageLabel","type","displayName","serializable","initFontSize","_needUpdate","params","value","_params","dataID","_dataID","string","_string","getLangByID","length","forEach","item","replace","key","language","onLoad","setVars","haskey","i","element","ii","push","update","updateContent","label","getComponent","richtext","font","fontSize"],"mappings":"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","sourcesContent":["import { CCString, Component, Label, RichText, TTFFont, _decorator, warn } from \"cc\";\r\nimport { EDITOR } from \"cc/env\";\r\nimport { LanguageData } from \"./LanguageData\";\r\n\r\nconst { ccclass, property, menu } = _decorator;\r\n\r\n@ccclass(\"LangLabelParamsItem\")\r\nexport class LangLabelParamsItem {\r\n    @property\r\n    key: string = \"\";\r\n    @property\r\n    value: string = \"\";\r\n}\r\n\r\n@ccclass(\"LanguageLabel\")\r\n@menu('ui/language/LanguageLabel')\r\nexport class LanguageLabel extends Component {\r\n    @property({\r\n        type: LangLabelParamsItem,\r\n        displayName: \"params\"\r\n    })\r\n    private _params: Array<LangLabelParamsItem> = [];\r\n\r\n    @property({\r\n        type: LangLabelParamsItem,\r\n        displayName: \"params\"\r\n    })\r\n    set params(value: Array<LangLabelParamsItem>) {\r\n        this._params = value;\r\n        if (!EDITOR) {\r\n            this._needUpdate = true;\r\n        }\r\n    }\r\n    get params(): Array<LangLabelParamsItem> {\r\n        return this._params || [];\r\n    }\r\n\r\n    @property({ serializable: true })\r\n    private _dataID: string = \"\";\r\n    @property({ type: CCString, serializable: true })\r\n    get dataID(): string {\r\n        return this._dataID || \"\";\r\n    }\r\n    set dataID(value: string) {\r\n        this._dataID = value;\r\n        if (!EDITOR) {\r\n            this._needUpdate = true;\r\n        }\r\n    }\r\n\r\n    get string(): string {\r\n        let _string = LanguageData.getLangByID(this._dataID);\r\n        if (_string && this._params.length > 0) {\r\n            this._params.forEach((item: LangLabelParamsItem) => {\r\n                _string = _string.replace(`%{${item.key}}`, item.value)\r\n            })\r\n        }\r\n        if (!_string) {\r\n            warn(\"[LanguageLabel] 未找到语言标识，使用dataID替换\");\r\n            _string = this._dataID;\r\n        }\r\n        return _string;\r\n    }\r\n\r\n    /** 更新语言 */\r\n    language() {\r\n        this._needUpdate = true;\r\n    }\r\n\r\n    /** 初始字体尺寸 */\r\n    initFontSize: number = 0;\r\n\r\n    onLoad() {\r\n        this._needUpdate = true;\r\n    }\r\n\r\n    /**\r\n     * 修改多语言参数，采用惰性求值策略\r\n     * @param key 对于i18n表里面的key值\r\n     * @param value 替换的文本\r\n     */\r\n    setVars(key: string, value: string) {\r\n        let haskey = false;\r\n        for (let i = 0; i < this._params.length; i++) {\r\n            let element: LangLabelParamsItem = this._params[i];\r\n            if (element.key === key) {\r\n                element.value = value;\r\n                haskey = true;\r\n            }\r\n        }\r\n        if (!haskey) {\r\n            let ii = new LangLabelParamsItem();\r\n            ii.key = key;\r\n            ii.value = value;\r\n            this._params.push(ii);\r\n        }\r\n        this._needUpdate = true;\r\n    }\r\n    private _needUpdate: boolean = false;\r\n\r\n    update() {\r\n        if (this._needUpdate) {\r\n            this.updateContent();\r\n            this._needUpdate = false;\r\n        }\r\n    }\r\n\r\n    updateContent() {\r\n        const label = this.getComponent(Label);\r\n        const richtext = this.getComponent(RichText);\r\n        const font: TTFFont | null = LanguageData.font;\r\n\r\n        if (label) {\r\n            if (font) {\r\n                label.font = font;\r\n            }\r\n            label.string = this.string;\r\n            this.initFontSize = label.fontSize;\r\n        }\r\n        else if (richtext) {\r\n            if (font) {\r\n                richtext.font = font;\r\n            }\r\n            this.initFontSize = richtext.fontSize;\r\n            richtext.string = this.string;\r\n            this.initFontSize = richtext.fontSize;\r\n        }\r\n        else {\r\n            warn(\"[LanguageLabel], 该节点没有cc.Label || cc.RichText组件\");\r\n        }\r\n    }\r\n}\r\n"]}