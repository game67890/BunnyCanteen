{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/assets/resources/libs/virtual_grid_list/virtual_grid_list.ts"],"names":["_decorator","CCBoolean","CCInteger","CCString","Component","instantiate","Label","math","Node","Prefab","ScrollView","isValid","UITransform","IVirtualGridListItem","ImageCache","ccclass","property","VirtualGridList","tooltip","type","_items","_imageCache","_dataList","_selectedItemData","_scrollView","_content","_contentOriginalHeight","_contentOriginalWidth","_spawnCount","_totalCount","_bufferZone","_lastContentPosY","_itemHeight","_itemWidth","_initialized","_scrollToBottomHandler","_scrollToBottomThisObj","_selectOneItemHandler","_selectOneItemThisObj","getTemplateItems","getDataList","getGridList","start","onLoad","initGridList","options","node","getComponent","content","height","width","paddingTop","undefined","paddingBottom","spacingX","spacingY","columnNum","useVirtualLayout","emptyTip","cacheImage","labelEmptyTip","string","scheduleOnce","_initializeList","itemPrefab","data","Math","floor","on","_onVirtualLayoutScrolling","ceil","createItemsDisplayList","dataList","destroyAllChildren","length","_getContentHeight","_createFixedIncrementItems","isTop","scrollToTop","active","appendItemsToDisplayList","concat","pos","getScrollOffset","y","scrollToOffset","registerScrollToBottomEventHandler","handler","thisObj","registerSelectOneItemEventHandler","refreshItemDisplays","some","list","item","i","com","indexOf","onDataChanged","items","buffer","isDown","position","offset","viewPos","getPositionInView","itemCtrl","onLeave","setPosition","x","itemIndex","updateItem","onEnter","console","log","_onScrollToBottom","call","_onSelectOneItem","startIndex","fixCount","_createOneItemDisplay","push","idx","addChild","_updateItemPos","component","imageCache","EventType","TOUCH_END","_onItemTouched","event","target","_selectOne","setSelectionWithoutCallback","findItemDisplayByData","getBaseItem","setSelectionAndCallback","triggerOutsideCallback","setSelectStatus","onUnselect","onSelect","col","row","contentUiTrans","itemUiTrans","_updateItem","totalCount","getScrollOffsetY","scrollToFixedPosition","sec","stopAutoScroll","itemHeight","v2","isAutoScrolling","worldPos","parent","convertToWorldSpaceAR","convertToNodeSpaceAR","clearList","_disposeItems","_onScrolling","onDestroy","off","clear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACIA,MAAAA,U,OAAAA,U;AACAC,MAAAA,S,OAAAA,S;AACAC,MAAAA,S,OAAAA,S;AACAC,MAAAA,Q,OAAAA,Q;AACAC,MAAAA,S,OAAAA,S;AAEAC,MAAAA,W,OAAAA,W;AACAC,MAAAA,K,OAAAA,K;AACAC,MAAAA,I,OAAAA,I;AACAC,MAAAA,I,OAAAA,I;AACAC,MAAAA,M,OAAAA,M;AACAC,MAAAA,U,OAAAA,U;AACAC,MAAAA,O,OAAAA,O;AACAC,MAAAA,W,OAAAA,W;;AAGIC,MAAAA,oB,iBAAAA,oB;;AACAC,MAAAA,U,iBAAAA,U;;;;;;;;;OAEF;AAACC,QAAAA,OAAD;AAAUC,QAAAA;AAAV,O,GAAsBhB,U;;iCAiBfiB,e,WADZF,OAAO,CAAC,iBAAD,C,UAEHC,QAAQ,CAAC;AACNE,QAAAA,OAAO,EAAE,QADH;AAENC,QAAAA,IAAI,EAAEV;AAFA,OAAD,C,UAMRO,QAAQ,CAAC;AACNE,QAAAA,OAAO,EAAE,eADH;AAENC,QAAAA,IAAI,EAAEb;AAFA,OAAD,C,UAMRU,QAAQ,CAAC;AACNE,QAAAA,OAAO,EAAE,WADH;AAENC,QAAAA,IAAI,EAAEjB;AAFA,OAAD,C,UAKRc,QAAQ,CAAC;AACNE,QAAAA,OAAO,EAAE,WADH;AAENC,QAAAA,IAAI,EAAEjB;AAFA,OAAD,C,UAMRc,QAAQ,CAAC;AACNE,QAAAA,OAAO,EAAE,QADH;AAENC,QAAAA,IAAI,EAAEjB;AAFA,OAAD,C,UAKRc,QAAQ,CAAC;AACNE,QAAAA,OAAO,EAAE,QADH;AAENC,QAAAA,IAAI,EAAEjB;AAFA,OAAD,C,UAMRc,QAAQ,CAAC;AACNE,QAAAA,OAAO,EAAE,IADH;AAENC,QAAAA,IAAI,EAAEjB;AAFA,OAAD,C,UAMRc,QAAQ,CAAC;AACNE,QAAAA,OAAO,EAAE,UADH;AAENC,QAAAA,IAAI,EAAElB;AAFA,OAAD,C,WAMRe,QAAQ,CAAC;AACNE,QAAAA,OAAO,EAAE,YADH;AAENC,QAAAA,IAAI,EAAElB;AAFA,OAAD,C,WAMRe,QAAQ,CAAC;AACNE,QAAAA,OAAO,EAAE,aADH;AAENC,QAAAA,IAAI,EAAEhB;AAFA,OAAD,C,2BAtDb,MACac,eADb,SACqCb,SADrC,CAC+C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAiBT;AAjBS;;AAsBN;AAtBM;;AA4BX;AA5BW;;AAiCX;AAjCW;;AAuCV;AAvCU;;AA6CI;AA7CJ;;AAmDJ;AAnDI;;AAAA,eA2D3CgB,MA3D2C,GA2DrB,EA3DqB;AAAA,eA6DjCC,WA7DiC,GA6DP;AAAA;AAAA,yCA7DO;AAAA,eA+DjCC,SA/DiC,GA+Dd,EA/Dc;AAAA,eAiEjCC,iBAjEiC,GAiER,IAjEQ;AAAA,eAmEjCC,WAnEiC,GAmEP,IAnEO;AAmED;AAnEC,eAoEjCC,QApEiC,GAoEhB,IApEgB;AAoEV;AApEU,eAqEjCC,sBArEiC,GAqEC,CArED;AAAA,eAsEjCC,qBAtEiC,GAsEA,CAtEA;AAAA,eAwEjCC,WAxEiC,GAwEX,CAxEW;AAwER;AAxEQ,eAyEjCC,WAzEiC,GAyEX,CAzEW;AAyER;AAzEQ,eA0EjCC,WA1EiC,GA0EX,CA1EW;AA0ER;AA1EQ,eA2EjCC,gBA3EiC,GA2EN,CA3EM;AA2EH;AA3EG,eA6EjCC,WA7EiC,GA6EX,CA7EW;AA6ER;AA7EQ,eA8EjCC,UA9EiC,GA8EZ,CA9EY;AA8ET;AA9ES,eAgFjCC,YAhFiC,GAgFT,KAhFS;AAgFF;AAhFE,eAkFjCC,sBAlFiC,GAkFE,IAlFF;AAkFS;AAlFT,eAmFjCC,sBAnFiC,GAmFH,IAnFG;AAmFS;AAnFT,eAqFjCC,qBArFiC,GAqFC,IArFD;AAqFS;AArFT,eAsFjCC,qBAtFiC,GAsFJ,IAtFI;AAAA;;AAsFS;;AAEpD;AACJ;AACA;AACA;AAC+B,YAAhBC,gBAAgB,GAAW;AAClC,iBAAO,KAAKnB,MAAZ;AACH;AAED;AACJ;AACA;AACA;;;AAC0B,YAAXoB,WAAW,GAAe;AACjC,iBAAO,KAAKlB,SAAZ;AACH;;AAEqB,YAAXmB,WAAW,GAAe;AACjC,iBAAO,KAAKjB,WAAZ;AACH;;AAEDkB,QAAAA,KAAK,GAAG,CACP;;AAESC,QAAAA,MAAM,GAAG,CAElB;AAED;AACJ;AACA;AACA;AACA;;;AACIC,QAAAA,YAAY,CAACC,OAAD,EAAgC;AACxC,eAAKrB,WAAL,GAAmB,KAAKsB,IAAL,CAAUC,YAAV,CAAuBrC,UAAvB,CAAnB;AACA,eAAKe,QAAL,GAAgB,KAAKD,WAAL,CAAiBwB,OAAjC;AACA,eAAKtB,sBAAL,GAA8B,KAAKD,QAAL,CAAcsB,YAAd,CAA2BnC,WAA3B,EAAwCqC,MAAtE;AACA,eAAKtB,qBAAL,GAA6B,KAAKF,QAAL,CAAcsB,YAAd,CAA2BnC,WAA3B,EAAwCsC,KAArE,CAJwC,CAMxC;;AAEA,cAAIL,OAAJ,EAAa;AACT,iBAAKM,UAAL,GAAmBN,OAAO,CAACM,UAAR,KAAuBC,SAAxB,GAAqC,KAAKD,UAA1C,GAAuDN,OAAO,CAACM,UAAjF;AACA,iBAAKE,aAAL,GAAsBR,OAAO,CAACQ,aAAR,KAA0BD,SAA3B,GAAwC,KAAKC,aAA7C,GAA6DR,OAAO,CAACQ,aAA1F;AACA,iBAAKC,QAAL,GAAgBT,OAAO,CAACS,QAAR,KAAqBF,SAArB,GAAiC,KAAKE,QAAtC,GAAiDT,OAAO,CAACS,QAAzE;AACA,iBAAKC,QAAL,GAAgBV,OAAO,CAACU,QAAR,KAAqBH,SAArB,GAAiC,KAAKG,QAAtC,GAAiDV,OAAO,CAACU,QAAzE;AACA,iBAAKC,SAAL,GAAiBX,OAAO,CAACW,SAAR,KAAsBJ,SAAtB,GAAkC,KAAKI,SAAvC,GAAmDX,OAAO,CAACW,SAA5E;AACA,iBAAKC,gBAAL,GAAwBZ,OAAO,CAACY,gBAAR,KAA6BL,SAA7B,GAAyC,KAAKK,gBAA9C,GAAiEZ,OAAO,CAACY,gBAAjG;AACA,iBAAKC,QAAL,GAAgBb,OAAO,CAACa,QAAR,KAAqBN,SAArB,GAAiC,KAAKM,QAAtC,GAAiDb,OAAO,CAACa,QAAzE;AACA,iBAAKC,UAAL,GAAkBd,OAAO,CAACc,UAAR,KAAuBP,SAAvB,GAAmC,IAAnC,GAA0C,KAAKO,UAAjE;AACH;;AAED,eAAKC,aAAL,CAAmBb,YAAnB,CAAgCzC,KAAhC,EAAuCuD,MAAvC,GAAgD,KAAKH,QAArD,CAnBwC,CAqBxC;;AACA,eAAKI,YAAL,CAAkB,KAAKC,eAAvB,EAAwC,CAAxC;AACH;AAED;AACJ;AACA;;;AACcA,QAAAA,eAAe,GAAG;AACxB;AACA;AACA,eAAK/B,WAAL,GAAoB,KAAKgC,UAAL,CAAgBC,IAAjB,CAA+BlB,YAA/B,CAA4CnC,WAA5C,EAAyDqC,MAA5E;AACA,eAAKhB,UAAL,GAAmB,KAAK+B,UAAL,CAAgBC,IAAjB,CAA+BlB,YAA/B,CAA4CnC,WAA5C,EAAyDsC,KAA3E;;AACA,cAAI,KAAKM,SAAL,IAAkB,CAAtB,EAAyB;AACrB;AACA,iBAAKA,SAAL,GAAiBU,IAAI,CAACC,KAAL,CAAW,CAAC,KAAK1C,QAAL,CAAcsB,YAAd,CAA2BnC,WAA3B,EAAwCsC,KAAxC,GAAgD,KAAKI,QAAtD,KAAmE,KAAKrB,UAAL,GAAkB,KAAKqB,QAA1F,CAAX,CAAjB;;AACA,gBAAI,KAAKE,SAAL,GAAiB,CAArB,EAAwB;AACpB,mBAAKA,SAAL,GAAiB,CAAjB;AACH;AACJ;;AAED,cAAI,KAAKC,gBAAT,EAA2B;AACvB,iBAAKX,IAAL,CAAUsB,EAAV,CAAa,WAAb,EAA0B,KAAKC,yBAA/B,EAA0D,IAA1D;AACH,WAFD,MAEO,CACH;AACH,WAjBuB,CAkBxB;;;AACA,eAAKvC,WAAL,GAAmB,KAAKgB,IAAL,CAAUC,YAAV,CAAuBnC,WAAvB,EAAoCqC,MAApC,GAA6C,GAA7C,GAAmD,KAAKjB,WAA3E,CAnBwB,CAqBxB;;AACA,eAAKJ,WAAL,GAAmBsC,IAAI,CAACI,IAAL,CAAU,KAAKxB,IAAL,CAAUC,YAAV,CAAuBnC,WAAvB,EAAoCqC,MAApC,GAA6C,KAAKjB,WAAlD,GAAgE,CAA1E,IAA+E,KAAKwB,SAAvG;AAEA,eAAKzB,gBAAL,GAAwB,CAAxB;AACA,eAAKG,YAAL,GAAoB,IAApB,CAzBwB,CA2BxB;;AACA,cAAI,KAAKZ,SAAT,EAAoB;AAChB,iBAAKiD,sBAAL,CAA4B,KAAKjD,SAAjC;AACH;AACJ;AAED;AACJ;AACA;AACA;;;AACciD,QAAAA,sBAAsB,CAACC,QAAoB,GAAG,EAAxB,EAA4B;AACxD,eAAKlD,SAAL,GAAiBkD,QAAQ,GAAGA,QAAQ,IAAI,EAAxC;;AACA,cAAI,CAAC,KAAKtC,YAAV,EAAwB;AACpB;AACH;;AAED,cAAIc,OAAO,GAAG,KAAKvB,QAAL,IAAiB,KAAKD,WAAL,CAAiBwB,OAAhD;AACAA,UAAAA,OAAO,CAACyB,kBAAR,GAPwD,CASxD;;AACA,eAAK5C,WAAL,GAAmB2C,QAAQ,CAACE,MAA5B,CAVwD,CAWxD;;AACA1B,UAAAA,OAAO,CAACD,YAAR,CAAqBnC,WAArB,EAAkCqC,MAAlC,GAA2C,KAAK0B,iBAAL,CAAuB,KAAK9C,WAA5B,CAA3C,CAZwD,CAcxD;;AACA,eAAK+C,0BAAL;;AAEA,cAAI,CAAC,KAAKC,KAAL,EAAL,EAAmB;AACf,iBAAKf,YAAL,CAAkB,MAAM;AACpB,mBAAKgB,WAAL;AACH,aAFD,EAEG,EAFH;AAGH;;AAED,eAAKlB,aAAL,CAAmBd,IAAnB,CAAwBiC,MAAxB,GAAiC,KAAKlD,WAAL,IAAoB,CAArD;AACH;AAED;AACJ;AACA;AACA;;;AACImD,QAAAA,wBAAwB,CAACR,QAAD,EAAuB;AAC3C,cAAI,CAACA,QAAD,IAAaA,QAAQ,CAACE,MAAT,IAAmB,CAApC,EAAuC;AACnC;AACH;;AAED,cAAI,KAAK7C,WAAL,IAAoB,CAAxB,EAA2B;AACvB,iBAAK0C,sBAAL,CAA4BC,QAA5B;AACA;AACH;;AAEDA,UAAAA,QAAQ,GAAG,KAAKlD,SAAL,CAAe2D,MAAf,CAAsBT,QAAtB,CAAX;;AACA,cAAI,KAAK3C,WAAL,GAAmB,KAAKD,WAA5B,EAAyC;AACrC;AACA,iBAAK2C,sBAAL,CAA4BC,QAA5B;AACH,WAHD,MAGO;AACH,gBAAIxB,OAAO,GAAG,KAAKvB,QAAL,IAAiB,KAAKD,WAAL,CAAiBwB,OAAhD,CADG,CAEH;;AACA,iBAAKnB,WAAL,GAAmB2C,QAAQ,CAACE,MAA5B,CAHG,CAIH;;AACA1B,YAAAA,OAAO,CAACD,YAAR,CAAqBnC,WAArB,EAAkCqC,MAAlC,GAA2C,KAAK0B,iBAAL,CAAuB,KAAK9C,WAA5B,CAA3C,CALG,CAMH;AACA;;AACA,iBAAKP,SAAL,GAAiBkD,QAAjB;AAEA,iBAAKZ,aAAL,CAAmBd,IAAnB,CAAwBiC,MAAxB,GAAiC,KAAKlD,WAAL,IAAoB,CAArD;AAEA,iBAAKiC,YAAL,CAAkB,MAAM;AACpB,kBAAIoB,GAAG,GAAG,KAAK1D,WAAL,CAAiB2D,eAAjB,EAAV;;AACAD,cAAAA,GAAG,CAACE,CAAJ,IAAS,KAAKpD,WAAL,GAAmB,EAA5B;;AACA,mBAAKR,WAAL,CAAiB6D,cAAjB,CAAgCH,GAAhC,EAAqC,EAArC;AACH,aAJD;AAKH;AACJ;AAED;AACJ;AACA;AACA;AACA;;;AACII,QAAAA,kCAAkC,CAACC,OAAD,EAAoBC,OAApB,EAAkC;AAChE,eAAKrD,sBAAL,GAA8BoD,OAA9B;AACA,eAAKnD,sBAAL,GAA8BoD,OAA9B;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACIC,QAAAA,iCAAiC,CAACF,OAAD,EAAoBC,OAApB,EAAkC;AAC/D,eAAKnD,qBAAL,GAA6BkD,OAA7B;AACA,eAAKjD,qBAAL,GAA6BkD,OAA7B;AACH;AAED;AACJ;AACA;AACA;;;AACIE,QAAAA,mBAAmB,CAACC,IAAD,EAAe;AAC9B,cAAI,KAAKvE,MAAT,EAAiB;AACb,gBAAIwE,IAAI,GAAG,KAAKxE,MAAhB;AACA,gBAAIyE,IAAJ;;AACA,gBAAIF,IAAI,IAAIA,IAAI,CAACjB,MAAL,GAAc,CAA1B,EAA6B;AACzB,mBAAK,IAAIoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAAClB,MAAzB,EAAiCoB,CAAC,EAAlC,EAAsC;AAClCD,gBAAAA,IAAI,GAAGD,IAAI,CAACE,CAAD,CAAX;AACA,sBAAMC,GAAG,GAAIF,IAAI,CAAC9C,YAAL;AAAA;AAAA,iEAAb;;AACA,oBAAI4C,IAAI,CAACK,OAAL,CAAaD,GAAG,CAAC9B,IAAjB,KAA0B,CAAC,CAA/B,EAAkC;AAC9B8B,kBAAAA,GAAG,CAACE,aAAJ;AACH;AACJ;AACJ,aARD,MAQO;AACH,mBAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAAClB,MAAzB,EAAiCoB,CAAC,EAAlC,EAAsC;AAClCD,gBAAAA,IAAI,GAAGD,IAAI,CAACE,CAAD,CAAX;AACA,sBAAMC,GAAG,GAAIF,IAAI,CAAC9C,YAAL;AAAA;AAAA,iEAAb;AACAgD,gBAAAA,GAAG,CAACE,aAAJ;AACH;AACJ;;AACDJ,YAAAA,IAAI,GAAG,IAAP;AACAD,YAAAA,IAAI,GAAG,IAAP;AACH;AACJ;;AAESvB,QAAAA,yBAAyB,GAAG;AAClC,cAAI6B,KAAK,GAAG,KAAK9E,MAAjB;AACA,gBAAM+E,MAAM,GAAG,KAAKrE,WAApB;AACA,gBAAMsE,MAAM,GAAG,KAAK3E,QAAL,CAAc4E,QAAd,CAAuBjB,CAAvB,GAA2B,KAAKrD,gBAA/C,CAHkC,CAG+B;;AACjE,gBAAMuE,MAAM,GAAG,CAAC,KAAKtE,WAAL,GAAmB,KAAKuB,QAAzB,IAAqCW,IAAI,CAACI,IAAL,CAAU4B,KAAK,CAACxB,MAAN,GAAe,KAAKlB,SAA9B,CAApD,CAJkC,CAI4D;;AAC9F,cAAIgB,QAAQ,GAAG,KAAKlD,SAApB,CALkC,CAOlC;;AACA,eAAK,IAAIwE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGI,KAAK,CAACxB,MAA1B,EAAkCoB,CAAC,EAAnC,EAAuC;AACnC,gBAAID,IAAI,GAAGK,KAAK,CAACJ,CAAD,CAAhB;AACA,gBAAIS,OAAO,GAAG,KAAKC,iBAAL,CAAuBX,IAAvB,CAAd;;AAEA,gBAAIO,MAAJ,EAAY;AACR;AACA,kBAAIG,OAAO,CAACnB,CAAR,GAAY,CAACe,MAAb,IACGN,IAAI,CAACQ,QAAL,CAAcjB,CAAd,GAAkBkB,MAAlB,GAA2B,CADlC,EACqC;AACjC,oBAAIG,QAAQ,GAAIZ,IAAI,CAAC9C,YAAL;AAAA;AAAA,iEAAhB;;AACA,oBAAI0D,QAAJ,EACA;AACIA,kBAAAA,QAAQ,CAACC,OAAT;AACAb,kBAAAA,IAAI,CAACc,WAAL,CAAiBd,IAAI,CAACQ,QAAL,CAAcO,CAA/B,EAAkCf,IAAI,CAACQ,QAAL,CAAcjB,CAAd,GAAkBkB,MAApD;AACA,sBAAIO,SAAS,GAAGJ,QAAQ,CAACI,SAAT,GAAqBX,KAAK,CAACxB,MAA3C;AACA+B,kBAAAA,QAAQ,CAACK,UAAT,CAAoBtC,QAAQ,CAACqC,SAAD,CAA5B,EAAyCA,SAAzC;AACAJ,kBAAAA,QAAQ,CAACR,aAAT;AACAQ,kBAAAA,QAAQ,CAACM,OAAT;AACH,iBARD,MAUA;AACIC,kBAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH;AAEJ;AACJ,aApBD,MAoBO;AACH;AACA,kBAAIV,OAAO,CAACnB,CAAR,GAAYe,MAAZ,IACGN,IAAI,CAACQ,QAAL,CAAcjB,CAAd,GAAkBkB,MAAlB,GAA2B,CAAC,KAAK7E,QAAL,CAAcsB,YAAd,CAA2BnC,WAA3B,EAAwCqC,MAD3E,EACmF;AAC/E,oBAAIwD,QAAQ,GAAIZ,IAAI,CAAC9C,YAAL;AAAA;AAAA,iEAAhB;;AACA,oBAAI0D,QAAJ,EACA;AACI,sBAAII,SAAS,GAAGJ,QAAQ,CAACI,SAAT,GAAqBX,KAAK,CAACxB,MAA3C,CADJ,CAEI;;AACA,sBAAImC,SAAS,GAAG,KAAKhF,WAArB,EAAkC;AAC9B4E,oBAAAA,QAAQ,CAACC,OAAT;AACAb,oBAAAA,IAAI,CAACc,WAAL,CAAiBd,IAAI,CAACQ,QAAL,CAAcO,CAA/B,EAAkCf,IAAI,CAACQ,QAAL,CAAcjB,CAAd,GAAkBkB,MAApD;AACAG,oBAAAA,QAAQ,CAACK,UAAT,CAAoBtC,QAAQ,CAACqC,SAAD,CAA5B,EAAyCA,SAAzC;AACAJ,oBAAAA,QAAQ,CAACR,aAAT;AACAQ,oBAAAA,QAAQ,CAACM,OAAT;;AAEA,wBAAIF,SAAS,KAAK,KAAKhF,WAAL,GAAmB,CAArC,EAAwC;AACpC,2BAAKqF,iBAAL;AACH;AACJ;AACJ,iBAfD,MAiBA;AACIF,kBAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH;AAEJ;AACJ;AACJ,WA5DiC,CA6DlC;;;AACA,eAAKlF,gBAAL,GAAwB,KAAKN,QAAL,CAAc4E,QAAd,CAAuBjB,CAA/C;AACAc,UAAAA,KAAK,GAAG,IAAR;AACA1B,UAAAA,QAAQ,GAAG,IAAX;AACH;AAED;AACJ;AACA;;;AACc0C,QAAAA,iBAAiB,GAAG;AAC1B,cAAI,KAAK/E,sBAAT,EAAiC;AAC7B,iBAAKA,sBAAL,CAA4BgF,IAA5B,CAAiC,KAAK/E,sBAAtC;AACH;AACJ;;AAESgF,QAAAA,gBAAgB,CAACnD,IAAD,EAAY;AAClC,cAAI,KAAK5B,qBAAT,EAAgC;AAC5B,iBAAKA,qBAAL,CAA2B8E,IAA3B,CAAgC,KAAK7E,qBAArC,EAA4D2B,IAA5D;AACH;AACJ;AAED;AACJ;AACA;AACA;;;AACcW,QAAAA,0BAA0B,CAACyC,UAAkB,GAAG,CAAtB,EAAyB;AACzD,eAAKjG,MAAL,GAAc,EAAd;AACAiG,UAAAA,UAAU,GAAGA,UAAU,IAAI,CAA3B,CAFyD,CAGzD;;AACA,cAAIC,QAAQ,GAAG,KAAKzF,WAApB;;AACA,cAAI,KAAK4B,gBAAT,EAA2B;AACvB6D,YAAAA,QAAQ,GAAG,KAAKzF,WAAL,GAAmB,KAAKD,WAAxB,GAAsC,KAAKC,WAA3C,GAAyD,KAAKD,WAAzE;AACH;;AAED,cAAI4C,QAAQ,GAAG,KAAKlD,SAApB;;AACA,eAAK,IAAIwE,CAAC,GAAGuB,UAAb,EAAyBvB,CAAC,GAAGwB,QAA7B,EAAuCxB,CAAC,EAAxC,EAA4C;AACxC,gBAAID,IAAI,GAAG,KAAK0B,qBAAL,CAA2BzB,CAA3B,EAA8BtB,QAAQ,CAACsB,CAAD,CAAtC,CAAX;;AACA,iBAAK1E,MAAL,CAAYoG,IAAZ,CAAiB3B,IAAjB;AACH;;AACDrB,UAAAA,QAAQ,GAAG,IAAX;;AAEA,cAAI,KAAKpD,MAAL,CAAYsD,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,iBAAKZ,YAAL,CAAkB,MAAM;AACpB,mBAAK,IAAIgC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK1E,MAAL,CAAYsD,MAAhC,EAAwCoB,CAAC,EAAzC,EAA6C;AACxC,qBAAK1E,MAAL,CAAY0E,CAAZ,EAAe/C,YAAf;AAAA;AAAA,iEAAD,CAA4EkD,aAA5E;AACH;AACJ,aAJD;AAKH;AACJ;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACcsB,QAAAA,qBAAqB,CAACE,GAAD,EAAcxD,IAAd,EAA+B;AAC1D,cAAI4B,IAAI,GAAGxF,WAAW,CAAC,KAAK2D,UAAN,CAAtB;;AACA,eAAKvC,QAAL,CAAciG,QAAd,CAAuB7B,IAAvB,EAF0D,CAI1D;;;AACA,eAAK8B,cAAL,CAAoB9B,IAApB,EAA0B4B,GAA1B,EAL0D,CAO1D;;;AACA,gBAAMG,SAAS,GAAI/B,IAAI,CAAC9C,YAAL;AAAA;AAAA,2DAAnB;AACA6E,UAAAA,SAAS,CAACd,UAAV,CAAqB7C,IAArB,EAA2BwD,GAA3B;AACAG,UAAAA,SAAS,CAACC,UAAV,GAAuB,KAAKxG,WAA5B;AAEAwE,UAAAA,IAAI,CAACzB,EAAL,CAAQ5D,IAAI,CAACsH,SAAL,CAAeC,SAAvB,EAAkC,KAAKC,cAAvC,EAAuD,IAAvD;AACA,iBAAOnC,IAAP;AACH;AAED;AACJ;AACA;AACA;;;AACcmC,QAAAA,cAAc,CAACC,KAAD,EAAe;AACnC,gBAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,gBAAMnC,GAAG,GAAGmC,MAAM,CAACnF,YAAP;AAAA;AAAA,2DAAZ;;AACA,eAAKoF,UAAL,CAAgBpC,GAAhB,EAAqB,IAArB;AACH;;AAEDqC,QAAAA,2BAA2B,CAACnE,IAAD,EAAY;AACnC,gBAAM4B,IAAI,GAAG,KAAKwC,qBAAL,CAA2BpE,IAA3B,CAAb;AACA4B,UAAAA,IAAI,IAAI,KAAKsC,UAAL,CAAgB,KAAKG,WAAL,CAAiBzC,IAAjB,CAAhB,EAAwC,KAAxC,CAAR;AACH;;AAED0C,QAAAA,uBAAuB,CAACtE,IAAD,EAAY;AAC/B,gBAAM4B,IAAI,GAAG,KAAKwC,qBAAL,CAA2BpE,IAA3B,CAAb;AACA4B,UAAAA,IAAI,IAAI,KAAKsC,UAAL,CAAgB,KAAKG,WAAL,CAAiBzC,IAAjB,CAAhB,EAAwC,IAAxC,CAAR;AACH;;AAEDyC,QAAAA,WAAW,CAACzC,IAAD,EAAmC;AAC1C,iBAAQA,IAAI,CAAC9C,YAAL;AAAA;AAAA,2DAAR;AACH;;AAESoF,QAAAA,UAAU,CAACpC,GAAD,EAA4ByC,sBAA5B,EAAyD;AACzE,cAAI,KAAKjH,iBAAL,IAA0B,KAAKA,iBAAL,IAA0BwE,GAAG,CAAC9B,IAA5D,EAAkE;AAC9D,gBAAI4B,IAAI,GAAG,KAAKwC,qBAAL,CAA2B,KAAK9G,iBAAhC,CAAX;;AACA,gBAAIsE,IAAJ,EAAU;AACN,kBAAI+B,SAAS,GAAG,KAAKU,WAAL,CAAiBzC,IAAjB,CAAhB;AACA+B,cAAAA,SAAS,CAACa,eAAV,CAA0B,KAA1B;AACAb,cAAAA,SAAS,CAACc,UAAV;AACH;AACJ;;AACD,eAAKnH,iBAAL,GAAyBwE,GAAG,CAAC9B,IAA7B;AACA8B,UAAAA,GAAG,CAAC0C,eAAJ,CAAoB,IAApB;AACA1C,UAAAA,GAAG,CAAC4C,QAAJ;AACA,mBAASH,sBAAT,IAAmC,KAAKpB,gBAAL,CAAsBrB,GAAG,CAAC9B,IAA1B,CAAnC;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACWoE,QAAAA,qBAAqB,CAACpE,IAAD,EAAkB;AAC1C,cAAIA,IAAI,IAAI,KAAK7C,MAAjB,EAAyB;AACrB,gBAAIwE,IAAI,GAAG,KAAKxE,MAAhB;;AACA,iBAAK,IAAIyE,IAAT,IAAiBD,IAAjB,EAAuB;AACnB,kBAAIgC,SAAS,GAAI/B,IAAI,CAAC9C,YAAL;AAAA;AAAA,+DAAjB;;AACA,kBAAI6E,SAAS,CAAC3D,IAAV,IAAkBA,IAAtB,EAA4B;AACxB,uBAAO4B,IAAP;AACH;AACJ;;AACDD,YAAAA,IAAI,GAAG,IAAP;AACA,mBAAO,IAAP;AACH,WAVD,MAUO;AACH,mBAAO,IAAP;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;;;AACc+B,QAAAA,cAAc,CAAC9B,IAAD,EAAa4B,GAAb,EAA0B;AAC9C,gBAAMmB,GAAG,GAAGnB,GAAG,GAAG,KAAKjE,SAAvB;AACA,gBAAMqF,GAAG,GAAG3E,IAAI,CAACC,KAAL,CAAWsD,GAAG,GAAG,KAAKjE,SAAtB,CAAZ;;AAEA,gBAAMsF,cAAc,GAAG,KAAKrH,QAAL,CAAcsB,YAAd,CAA2BnC,WAA3B,CAAvB;;AACA,gBAAMmI,WAAW,GAAGlD,IAAI,CAAC9C,YAAL,CAAkBnC,WAAlB,CAApB;AAEAiF,UAAAA,IAAI,CAACc,WAAL,CACI,CAACmC,cAAc,CAAC5F,KAAhB,GAAwB,GAAxB,GAA8B6F,WAAW,CAAC7F,KAAZ,IAAqB,MAAM0F,GAA3B,CAA9B,GAAgE,KAAKtF,QAAL,GAAgBsF,GADpF,EAEI,CAACG,WAAW,CAAC9F,MAAb,IAAuB,MAAM4F,GAA7B,IAAoC,KAAKtF,QAAL,GAAiBsF,GAArD,GAA4D,KAAK1F,UAFrE;AAIH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACc6F,QAAAA,WAAW,CAACnD,IAAD,EAAa5B,IAAb,EAAwBwD,GAAxB,EAAqC;AACtD;AACA,eAAKE,cAAL,CAAoB9B,IAApB,EAA0B4B,GAA1B,EAFsD,CAGtD;;;AACC5B,UAAAA,IAAI,CAAC9C,YAAL;AAAA;AAAA,2DAAD,CAAkE+D,UAAlE,CAA6E7C,IAA7E,EAAmFwD,GAAnF;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACc9C,QAAAA,iBAAiB,CAACsE,UAAD,EAA6B;AACpD,cAAIhG,MAAM,GAAIiB,IAAI,CAACI,IAAL,CAAU2E,UAAU,GAAG,KAAKzF,SAA5B,KAA0C,KAAKxB,WAAL,GAAmB,KAAKuB,QAAlE,IAA8E,KAAKJ,UAAnF,GAAgG,KAAKE,aAAnH;;AACA,cAAIJ,MAAM,GAAG,KAAKvB,sBAAlB,EACA;AACIuB,YAAAA,MAAM,GAAG,KAAKvB,sBAAd;AACH;;AACD,iBAAOuB,MAAP;AACH;AAED;AACJ;AACA;AACA;;;AACW4B,QAAAA,KAAK,GAAY;AACpB,iBAAO,KAAKqE,gBAAL,MAA2B,CAAlC;AACH;AAED;AACJ;AACA;;;AACWpE,QAAAA,WAAW,GAAG;AACjB,eAAKqE,qBAAL,CAA2B,CAA3B,EAA8B,EAA9B;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACWA,QAAAA,qBAAqB,CAACtC,SAAD,EAAoBuC,GAApB,EAAiC;AACzD,eAAKC,cAAL;AAEA,cAAIC,UAAU,GAAG,CAAjB;;AACA,cAAI,KAAKtF,UAAL,IAAmB,IAAnB,IAA2B,KAAKA,UAAL,CAAgBC,IAAhB,IAAwB,IAAvD,EAA6D;AACzDqF,YAAAA,UAAU,GAAI,KAAKtF,UAAL,CAAgBC,IAAjB,CAA+BlB,YAA/B,CAA4CnC,WAA5C,EAAyDqC,MAAtE;AACH;;AAED,gBAAMO,SAAS,GAAG,KAAKA,SAAvB;AACA,gBAAMoF,GAAG,GAAG/B,SAAS,GAAGrD,SAAxB;AACA,gBAAMqF,GAAG,GAAG3E,IAAI,CAACC,KAAL,CAAW0C,SAAS,GAAGrD,SAAvB,CAAZ;AACA,gBAAM4B,CAAC,GAAG,CAACkE,UAAD,IAAe,MAAMT,GAArB,IAA4B,KAAKtF,QAAL,GAAiBsF,GAA7C,GAAoD,KAAK1F,UAAnE;AACA,gBAAM+B,GAAG,GAAG3E,IAAI,CAACgJ,EAAL,CAAQ,CAAR,EAAWnE,CAAX,CAAZ;;AACA,cAAI,KAAK5D,WAAT,EAAsB;AAClB,iBAAKA,WAAL,CAAiB6D,cAAjB,CAAgCH,GAAhC,EAAqCkE,GAAG,IAAI,CAA5C;AACH;;AAED,cAAI,KAAK3F,gBAAT,EAA2B;AACvB,gBAAI,KAAKhC,QAAT,EAAmB;AACf,mBAAKA,QAAL,CAAcgD,kBAAd;AACH;;AACD,gBAAI4C,UAAU,GAAGR,SAAS,GAAG+B,GAA7B;;AACA,iBAAKhE,0BAAL,CAAgCyC,UAAhC;AACH;AACJ;AAED;AACJ;AACA;;;AACWgC,QAAAA,cAAc,GAAG;AACpB,cAAI,KAAK7H,WAAL,IAAoB,IAAxB,EAA8B;AAC1B;AACH;;AAED,cAAI,CAAC,KAAKA,WAAL,CAAiBgI,eAAjB,EAAL,EAAyC;;AAEzC,eAAKhI,WAAL,CAAiB6H,cAAjB;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACW7C,QAAAA,iBAAiB,CAACX,IAAD,EAAoC;AACxD,gBAAM4D,QAAQ,GAAG5D,IAAI,CAAC6D,MAAL,CAAY3G,YAAZ,CAAyBnC,WAAzB,EAAsC+I,qBAAtC,CAA4D9D,IAAI,CAACQ,QAAjE,CAAjB;AACA,iBAAO,KAAK7E,WAAL,CAAiBsB,IAAjB,CAAsBC,YAAtB,CAAmCnC,WAAnC,EAAgDgJ,oBAAhD,CAAqEH,QAArE,CAAP;AACH;AAED;AACJ;AACA;AACA;;;AACWP,QAAAA,gBAAgB,GAAW;AAC9B,iBAAOhF,IAAI,CAACC,KAAL,CAAW,KAAK3C,WAAL,CAAiB2D,eAAjB,GAAmCC,CAA9C,CAAP;AACH;AAED;AACJ;AACA;;;AACWyE,QAAAA,SAAS,GAAG;AACf,eAAKvI,SAAL,GAAiB,IAAjB;;AACA,eAAKwI,aAAL;;AACA,eAAKvF,sBAAL;AACH;AAED;AACJ;AACA;;;AACcuF,QAAAA,aAAa,GAAG;AACtBnJ,UAAAA,OAAO,CAAC,KAAKc,QAAN,CAAP,IAA0B,KAAKD,WAAL,CAAiBwB,OAAjB,CAAyByB,kBAAzB,EAA1B;AACA,eAAKrD,MAAL,GAAc,IAAd;AACH;;AAES2I,QAAAA,YAAY,GAAG,CAExB;AAED;AACJ;AACA;;;AACcC,QAAAA,SAAS,GAAG;AAClB,cAAI,KAAKvG,gBAAT,EAA2B;AACvB,iBAAKX,IAAL,CAAUmH,GAAV,CAAc,WAAd,EAA2B,KAAKF,YAAhC,EAA8C,IAA9C;AACH;;AAED,eAAK5H,sBAAL,GAA8B,IAA9B;AACA,eAAKC,sBAAL,GAA8B,IAA9B;AAEA,eAAKC,qBAAL,GAA6B,IAA7B;AACA,eAAKC,qBAAL,GAA6B,IAA7B;;AAEA,eAAKwH,aAAL;;AACA,eAAKxI,SAAL,GAAiB,IAAjB;;AAEA,eAAKD,WAAL,CAAiB6I,KAAjB;AACH;;AA3oB0C,O;;;;;iBAKZ,I;;;;;;;iBAME,I;;;;;;;iBAMF,C;;;;;;;iBAKG,C;;;;;;;iBAML,C;;;;;;;iBAKA,C;;;;;;;iBAMC,C;;;;;;;iBAMQ,I;;;;;;;iBAMN,I;;;;;;;iBAMH,E","sourcesContent":["import {\r\n    _decorator,\r\n    CCBoolean,\r\n    CCInteger,\r\n    CCString,\r\n    Component,\r\n    error,\r\n    instantiate,\r\n    Label,\r\n    math,\r\n    Node,\r\n    Prefab,\r\n    ScrollView,\r\n    isValid,\r\n    UITransform,\r\n    Event\r\n} from 'cc';\r\nimport {IVirtualGridListItem} from './interface';\r\nimport {ImageCache} from \"./image_cache\";\r\n\r\nconst {ccclass, property} = _decorator;\r\n\r\n\r\ninterface IVirtualGridOptions {\r\n    paddingTop?: number;        // 列表距离上边缘距离 默认为0\r\n    paddingBottom?: number;     // 列表距离下边缘距离 默认为0\r\n\r\n    spacingX?: number;          // 列间距 默认为3\r\n    spacingY?: number;          // 行间距 默认为3\r\n\r\n    columnNum?: number;         // 列数 默认为0，自动适配容器宽度\r\n    useVirtualLayout?: boolean; // 是否启用虚拟列表 默认为true\r\n    emptyTip?: string;          // 没有数据显示提示\r\n    cacheImage?: boolean;       // 缓存列表中加载过的图片，控件回收后，图片缓存将被全部释放。\r\n}\r\n\r\n@ccclass('VirtualGridList')\r\nexport class VirtualGridList extends Component {\r\n    @property({\r\n        tooltip: '表项的预制体',\r\n        type: Prefab,\r\n    })\r\n    protected itemPrefab: Prefab = null;\r\n\r\n    @property({\r\n        tooltip: '没有数据时候的显示文本组件',\r\n        type: Label,\r\n    })\r\n    protected labelEmptyTip: Label = null;\r\n\r\n    @property({\r\n        tooltip: '表项距离上边缘距离',\r\n        type: CCInteger,\r\n    })\r\n    protected paddingTop: number = 0; // item 距离上边缘距离\r\n    @property({\r\n        tooltip: '表项距离下边缘距离',\r\n        type: CCInteger,\r\n    })\r\n    protected paddingBottom: number = 0; // item 距离下边缘距离\r\n\r\n    @property({\r\n        tooltip: '表项的列间距',\r\n        type: CCInteger,\r\n    })\r\n    protected spacingX: number = 3; // item 列间距\r\n    @property({\r\n        tooltip: '表项的行间距',\r\n        type: CCInteger,\r\n    })\r\n    protected spacingY: number = 3; // item 行间距\r\n\r\n    @property({\r\n        tooltip: '列数',\r\n        type: CCInteger,\r\n    })\r\n    protected columnNum: number = 0; // 列数\r\n\r\n    @property({\r\n        tooltip: '是否启用虚拟列表',\r\n        type: CCBoolean,\r\n    })\r\n    protected useVirtualLayout: boolean = true;    // 是否启用虚拟列表\r\n\r\n    @property({\r\n        tooltip: '是否缓存所加载的图片',\r\n        type: CCBoolean,\r\n    })\r\n    protected cacheImage: boolean = true;  // 缓存加载的图片\r\n\r\n    @property({\r\n        tooltip: '没有数据时候的显示文本',\r\n        type: CCString,\r\n    })\r\n    protected emptyTip: string = '';\r\n\r\n    _items: Array<Node> = [];\r\n\r\n    protected _imageCache: ImageCache = new ImageCache();\r\n\r\n    protected _dataList: any[] = [];\r\n\r\n    protected _selectedItemData: any = null;\r\n\r\n    protected _scrollView: ScrollView = null; // ScrollView组件\r\n    protected _content: Node = null; // ScrollView.content\r\n    protected _contentOriginalHeight : number = 0;\r\n    protected _contentOriginalWidth : number = 0;\r\n\r\n    protected _spawnCount: number = 0; // 常驻绘制数量\r\n    protected _totalCount: number = 0; // 总共数量\r\n    protected _bufferZone: number = 0; // 缓冲区域(包括屏幕内)\r\n    protected _lastContentPosY: number = 0; // 上一次滚动位置\r\n\r\n    protected _itemHeight: number = 0; // item template 高度\r\n    protected _itemWidth: number = 0; // item template 宽度\r\n\r\n    protected _initialized: boolean = false; //初始化完成\r\n\r\n    protected _scrollToBottomHandler: Function = null;  // 滑动到底部回调事件\r\n    protected _scrollToBottomThisObj: any = null;       // 滑动到底部回调事件this对象\r\n\r\n    protected _selectOneItemHandler: Function = null;   // 选中回调事件\r\n    protected _selectOneItemThisObj: any = null;        // 选中事件this 对象\r\n\r\n    /**\r\n     * 获取显示列表\r\n     * @returns {Array<Node>}\r\n     */\r\n    public get getTemplateItems(): Node[] {\r\n        return this._items;\r\n    }\r\n\r\n    /**\r\n     * 获取数据队列\r\n     * @returns {Array<any>}\r\n     **/\r\n    public get getDataList(): Array<any> {\r\n        return this._dataList;\r\n    }\r\n\r\n    public get getGridList(): ScrollView {\r\n        return this._scrollView;\r\n    }\r\n\r\n    start() {\r\n    }\r\n\r\n    protected onLoad() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 通过初始化方法传参的方式，初始化滚动列表，建议在画面的onLoad方法中调用，\r\n     * 相比在creator界面中设置参数，这种方式更易维护，不会因为与VirtualGridList控件保持同步而导致配置丢失或者重置。\r\n     * @param {IVirtualGridOptions} options\r\n     */\r\n    initGridList(options?: IVirtualGridOptions) {\r\n        this._scrollView = this.node.getComponent(ScrollView);\r\n        this._content = this._scrollView.content;\r\n        this._contentOriginalHeight = this._content.getComponent(UITransform).height\r\n        this._contentOriginalWidth = this._content.getComponent(UITransform).width\r\n\r\n        // this.itemPrefab = itemPrefab;\r\n\r\n        if (options) {\r\n            this.paddingTop = (options.paddingTop === undefined) ? this.paddingTop : options.paddingTop;\r\n            this.paddingBottom = (options.paddingBottom === undefined) ? this.paddingBottom : options.paddingBottom;\r\n            this.spacingX = options.spacingX === undefined ? this.spacingX : options.spacingX;\r\n            this.spacingY = options.spacingY === undefined ? this.spacingY : options.spacingY;\r\n            this.columnNum = options.columnNum === undefined ? this.columnNum : options.columnNum;\r\n            this.useVirtualLayout = options.useVirtualLayout === undefined ? this.useVirtualLayout : options.useVirtualLayout;\r\n            this.emptyTip = options.emptyTip === undefined ? this.emptyTip : options.emptyTip;\r\n            this.cacheImage = options.cacheImage === undefined ? true : this.cacheImage;\r\n        }\r\n\r\n        this.labelEmptyTip.getComponent(Label).string = this.emptyTip;\r\n\r\n        // 延时为了自适应宽度\r\n        this.scheduleOnce(this._initializeList, 0);\r\n    }\r\n\r\n    /**\r\n     * 初始化布局\r\n     */\r\n    protected _initializeList() {\r\n        // this._gridList = this.node.getComponent(ScrollView);\r\n        // this._content = this._gridList.content;\r\n        this._itemHeight = (this.itemPrefab.data as Node).getComponent(UITransform).height;\r\n        this._itemWidth = (this.itemPrefab.data as Node).getComponent(UITransform).width;\r\n        if (this.columnNum == 0) {\r\n            // 自动计算\r\n            this.columnNum = Math.floor((this._content.getComponent(UITransform).width + this.spacingX) / (this._itemWidth + this.spacingX));\r\n            if (this.columnNum < 1) {\r\n                this.columnNum = 1;\r\n            }\r\n        }\r\n\r\n        if (this.useVirtualLayout) {\r\n            this.node.on('scrolling', this._onVirtualLayoutScrolling, this);\r\n        } else {\r\n            // this.node.on('scrolling', this._onScrolling, this);\r\n        }\r\n        // 缓冲区域，半屏加1个item高度\r\n        this._bufferZone = this.node.getComponent(UITransform).height * 0.5 + this._itemHeight;\r\n\r\n        // 计算出需要同时绘制的数量(一屏数量 + 二行(上下各一行))\r\n        this._spawnCount = Math.ceil(this.node.getComponent(UITransform).height / this._itemHeight + 2) * this.columnNum;\r\n\r\n        this._lastContentPosY = 0;\r\n        this._initialized = true;\r\n\r\n        // 数据列表可能在初始化完成之前进入\r\n        if (this._dataList) {\r\n            this.createItemsDisplayList(this._dataList);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建物品格子列表\r\n     * @param {Array<any>} dataList 数据\r\n     */\r\n    protected createItemsDisplayList(dataList: Array<any> = []) {\r\n        this._dataList = dataList = dataList || [];\r\n        if (!this._initialized) {\r\n            return;\r\n        }\r\n\r\n        let content = this._content || this._scrollView.content;\r\n        content.destroyAllChildren();\r\n\r\n        // 总数量\r\n        this._totalCount = dataList.length;\r\n        // 设置content总高度\r\n        content.getComponent(UITransform).height = this._getContentHeight(this._totalCount);\r\n\r\n        // 创建固定数量\r\n        this._createFixedIncrementItems();\r\n\r\n        if (!this.isTop()) {\r\n            this.scheduleOnce(() => {\r\n                this.scrollToTop();\r\n            }, .2);\r\n        }\r\n\r\n        this.labelEmptyTip.node.active = this._totalCount <= 0;\r\n    }\r\n\r\n    /**\r\n     * 追加数据列表，一般用于滚动翻页\r\n     * @param {Array<any>} dataList 追加数据队列\r\n     */\r\n    appendItemsToDisplayList(dataList: Array<any>) {\r\n        if (!dataList || dataList.length <= 0) {\r\n            return;\r\n        }\r\n\r\n        if (this._totalCount <= 0) {\r\n            this.createItemsDisplayList(dataList);\r\n            return;\r\n        }\r\n\r\n        dataList = this._dataList.concat(dataList);\r\n        if (this._totalCount < this._spawnCount) {\r\n            // 不满一屏的时候，重新绘制新列表\r\n            this.createItemsDisplayList(dataList);\r\n        } else {\r\n            let content = this._content || this._scrollView.content;\r\n            // 总数量\r\n            this._totalCount = dataList.length;\r\n            // 设置content总高度\r\n            content.getComponent(UITransform).height = this._getContentHeight(this._totalCount);\r\n            // // 创建固定数量\r\n            //this._createFixedIncrementItems(this._dataList.length);\r\n            this._dataList = dataList;\r\n\r\n            this.labelEmptyTip.node.active = this._totalCount <= 0;\r\n\r\n            this.scheduleOnce(() => {\r\n                let pos = this._scrollView.getScrollOffset();\r\n                pos.y += this._itemHeight * .2;\r\n                this._scrollView.scrollToOffset(pos, .1);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 注册滚动至底部回调方法\r\n     * @param {Function} handler 滚动至底部回调函数 function()\r\n     * @param {*} thisObj 回调函数this对象\r\n     */\r\n    registerScrollToBottomEventHandler(handler: Function, thisObj: any) {\r\n        this._scrollToBottomHandler = handler;\r\n        this._scrollToBottomThisObj = thisObj;\r\n    }\r\n\r\n    /**\r\n     * 选中事件回调方法\r\n     * @param {Function} handler 选中事件回调函数 function()\r\n     * @param {*} thisObj 回调函数this对象\r\n     */\r\n    registerSelectOneItemEventHandler(handler: Function, thisObj: any) {\r\n        this._selectOneItemHandler = handler;\r\n        this._selectOneItemThisObj = thisObj;\r\n    }\r\n\r\n    /**\r\n     * 刷新列表显示, 条数不变，修改数据，刷新显示\r\n     * @param {any[]} some 刷新指定单元\r\n     */\r\n    refreshItemDisplays(some?: any[]) {\r\n        if (this._items) {\r\n            let list = this._items;\r\n            let item: Node;\r\n            if (some && some.length > 0) {\r\n                for (let i = 0; i < list.length; i++) {\r\n                    item = list[i];\r\n                    const com = (item.getComponent(IVirtualGridListItem) as IVirtualGridListItem)\r\n                    if (some.indexOf(com.data) != -1) {\r\n                        com.onDataChanged();\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = 0; i < list.length; i++) {\r\n                    item = list[i];\r\n                    const com = (item.getComponent(IVirtualGridListItem) as IVirtualGridListItem)\r\n                    com.onDataChanged();\r\n                }\r\n            }\r\n            item = null;\r\n            list = null;\r\n        }\r\n    }\r\n\r\n    protected _onVirtualLayoutScrolling() {\r\n        let items = this._items;\r\n        const buffer = this._bufferZone;\r\n        const isDown = this._content.position.y < this._lastContentPosY; // 滚动方向 下减上加\r\n        const offset = (this._itemHeight + this.spacingY) * Math.ceil(items.length / this.columnNum); // 所有items 总高度\r\n        let dataList = this._dataList;\r\n\r\n        // 更新每一个item位置和数据\r\n        for (let i = 0; i < items.length; i++) {\r\n            let item = items[i];\r\n            let viewPos = this.getPositionInView(item);\r\n\r\n            if (isDown) {\r\n                // 往下滑动，看下面的item，超出屏幕外下方，但是没有到top的item\r\n                if (viewPos.y < -buffer\r\n                    && item.position.y + offset < 0) {\r\n                    let itemCtrl = (item.getComponent(IVirtualGridListItem) as IVirtualGridListItem);\r\n                    if (itemCtrl)\r\n                    {\r\n                        itemCtrl.onLeave();\r\n                        item.setPosition(item.position.x, item.position.y + offset)\r\n                        let itemIndex = itemCtrl.itemIndex - items.length;\r\n                        itemCtrl.updateItem(dataList[itemIndex], itemIndex);\r\n                        itemCtrl.onDataChanged();\r\n                        itemCtrl.onEnter();\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\" 1 item IVirtualGridListItem null\");\r\n                    }\r\n\r\n                }\r\n            } else {\r\n                // 往上滑动，看上面的item，超出屏幕外上方，但是没有到bottom的item\r\n                if (viewPos.y > buffer\r\n                    && item.position.y - offset > -this._content.getComponent(UITransform).height) {\r\n                    let itemCtrl = (item.getComponent(IVirtualGridListItem) as IVirtualGridListItem);\r\n                    if (itemCtrl)\r\n                    {\r\n                        let itemIndex = itemCtrl.itemIndex + items.length;\r\n                        // 大于总数量的不移动更新\r\n                        if (itemIndex < this._totalCount) {\r\n                            itemCtrl.onLeave();\r\n                            item.setPosition(item.position.x, item.position.y - offset)\r\n                            itemCtrl.updateItem(dataList[itemIndex], itemIndex);\r\n                            itemCtrl.onDataChanged();\r\n                            itemCtrl.onEnter();\r\n    \r\n                            if (itemIndex === this._totalCount - 1) {\r\n                                this._onScrollToBottom();\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\" 2 item IVirtualGridListItem null\");\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        // 保存最后一次contentY偏移量，判断滑动方向\r\n        this._lastContentPosY = this._content.position.y;\r\n        items = null;\r\n        dataList = null;\r\n    }\r\n\r\n    /**\r\n     * 滚动到底部触发\r\n     */\r\n    protected _onScrollToBottom() {\r\n        if (this._scrollToBottomHandler) {\r\n            this._scrollToBottomHandler.call(this._scrollToBottomThisObj);\r\n        }\r\n    }\r\n\r\n    protected _onSelectOneItem(data: any) {\r\n        if (this._selectOneItemHandler) {\r\n            this._selectOneItemHandler.call(this._selectOneItemThisObj, data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建固定增量的items\r\n     * @param {Number} startIndex 起始索引\r\n     */\r\n    protected _createFixedIncrementItems(startIndex: number = 0) {\r\n        this._items = [];\r\n        startIndex = startIndex || 0\r\n        // 如果总数量不足够同时创建的数量，则只创建总数量\r\n        let fixCount = this._totalCount;\r\n        if (this.useVirtualLayout) {\r\n            fixCount = this._totalCount < this._spawnCount ? this._totalCount : this._spawnCount;\r\n        }\r\n\r\n        let dataList = this._dataList;\r\n        for (let i = startIndex; i < fixCount; i++) {\r\n            let item = this._createOneItemDisplay(i, dataList[i]);\r\n            this._items.push(item);\r\n        }\r\n        dataList = null;\r\n\r\n        if (this._items.length > 0) {\r\n            this.scheduleOnce(() => {\r\n                for (let i = 0; i < this._items.length; i++) {\r\n                    (this._items[i].getComponent(IVirtualGridListItem) as IVirtualGridListItem).onDataChanged();\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建一个item\r\n     * @param {Number} idx 索引\r\n     * @param {*} data\r\n     * @returns {Node} 返回一个显示单元\r\n     */\r\n    protected _createOneItemDisplay(idx: number, data: any): Node {\r\n        let item = instantiate(this.itemPrefab);\r\n        this._content.addChild(item);\r\n\r\n        // 更新位置\r\n        this._updateItemPos(item, idx);\r\n\r\n        // 更新id\r\n        const component = (item.getComponent(IVirtualGridListItem) as IVirtualGridListItem);\r\n        component.updateItem(data, idx);\r\n        component.imageCache = this._imageCache;\r\n\r\n        item.on(Node.EventType.TOUCH_END, this._onItemTouched, this);\r\n        return item;\r\n    }\r\n\r\n    /**\r\n     * 显示单元被点击事件 触发select 和 unselect事件\r\n     * @param {Event} event\r\n     */\r\n    protected _onItemTouched(event: Event) {\r\n        const target = event.target as Node;\r\n        const com = target.getComponent(IVirtualGridListItem) as IVirtualGridListItem;\r\n        this._selectOne(com, true);\r\n    }\r\n\r\n    setSelectionWithoutCallback(data: any) {\r\n        const item = this.findItemDisplayByData(data);\r\n        item && this._selectOne(this.getBaseItem(item), false);\r\n    }\r\n\r\n    setSelectionAndCallback(data: any) {\r\n        const item = this.findItemDisplayByData(data);\r\n        item && this._selectOne(this.getBaseItem(item), true);\r\n    }\r\n\r\n    getBaseItem(item: Node): IVirtualGridListItem {\r\n        return (item.getComponent(IVirtualGridListItem) as IVirtualGridListItem)\r\n    }\r\n\r\n    protected _selectOne(com: IVirtualGridListItem, triggerOutsideCallback: any) {\r\n        if (this._selectedItemData && this._selectedItemData != com.data) {\r\n            let item = this.findItemDisplayByData(this._selectedItemData);\r\n            if (item) {\r\n                let component = this.getBaseItem(item);\r\n                component.setSelectStatus(false);\r\n                component.onUnselect();\r\n            }\r\n        }\r\n        this._selectedItemData = com.data;\r\n        com.setSelectStatus(true);\r\n        com.onSelect();\r\n        true === triggerOutsideCallback && this._onSelectOneItem(com.data);\r\n    }\r\n\r\n    /**\r\n     * 根据item的数据data查找显示对象Item，当开启虚拟列表的时候，返回对象可能不存在\r\n     * @param {any} data\r\n     * @returns {Node} 与数据对应的显示单元\r\n     */\r\n    public findItemDisplayByData(data: any): Node {\r\n        if (data && this._items) {\r\n            let list = this._items;\r\n            for (let item of list) {\r\n                let component = (item.getComponent(IVirtualGridListItem) as IVirtualGridListItem);\r\n                if (component.data == data) {\r\n                    return item;\r\n                }\r\n            }\r\n            list = null;\r\n            return null;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新item位置\r\n     * @param {Node} item item节点\r\n     * @param {Number} idx 索引\r\n     */\r\n    protected _updateItemPos(item: Node, idx: number) {\r\n        const col = idx % this.columnNum;\r\n        const row = Math.floor(idx / this.columnNum);\r\n\r\n        const contentUiTrans = this._content.getComponent(UITransform)!;\r\n        const itemUiTrans = item.getComponent(UITransform)!;\r\n\r\n        item.setPosition(\r\n            -contentUiTrans.width * 0.5 + itemUiTrans.width * (0.5 + col) + this.spacingX * col,\r\n            -itemUiTrans.height * (0.5 + row) - this.spacingY * (row) - this.paddingTop\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 更新item\r\n     * @param {Node} item item节点\r\n     * @param {any} data\r\n     * @param {*} idx 索引\r\n     */\r\n    protected _updateItem(item: Node, data: any, idx: number) {\r\n        // 更新位置\r\n        this._updateItemPos(item, idx);\r\n        // 更新id\r\n        (item.getComponent(IVirtualGridListItem) as IVirtualGridListItem).updateItem(data, idx);\r\n    }\r\n\r\n    /**\r\n     * 获取content总高度\r\n     * @param {Number} totalCount 总数量\r\n     * @returns {Number} 容器总高度\r\n     */\r\n    protected _getContentHeight(totalCount: number): number {\r\n        let height =  Math.ceil(totalCount / this.columnNum) * (this._itemHeight + this.spacingY) + this.paddingTop + this.paddingBottom;\r\n        if (height < this._contentOriginalHeight)\r\n        {\r\n            height = this._contentOriginalHeight;\r\n        }\r\n        return height;\r\n    }\r\n\r\n    /**\r\n     * 是否在顶端\r\n     * @returns {Boolean}\r\n     */\r\n    public isTop(): boolean {\r\n        return this.getScrollOffsetY() <= 0;\r\n    }\r\n\r\n    /**\r\n     * 滚动到顶部\r\n     */\r\n    public scrollToTop() {\r\n        this.scrollToFixedPosition(0, .2);\r\n    }\r\n\r\n    /**\r\n     * 滚动到固定位置\r\n     * @param {Number} itemIndex item index\r\n     * @param {Number} sec 滚动时间\r\n     */\r\n    public scrollToFixedPosition(itemIndex: number, sec: number) {\r\n        this.stopAutoScroll();\r\n\r\n        let itemHeight = 1;\r\n        if (this.itemPrefab != null && this.itemPrefab.data != null) {\r\n            itemHeight = (this.itemPrefab.data as Node).getComponent(UITransform).height;\r\n        }\r\n\r\n        const columnNum = this.columnNum;\r\n        const col = itemIndex % columnNum;\r\n        const row = Math.floor(itemIndex / columnNum);\r\n        const y = -itemHeight * (0.5 + row) - this.spacingY * (row) - this.paddingTop;\r\n        const pos = math.v2(0, y);\r\n        if (this._scrollView) {\r\n            this._scrollView.scrollToOffset(pos, sec || 0);\r\n        }\r\n\r\n        if (this.useVirtualLayout) {\r\n            if (this._content) {\r\n                this._content.destroyAllChildren();\r\n            }\r\n            let startIndex = itemIndex - col;\r\n            this._createFixedIncrementItems(startIndex);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止自动滚动\r\n     */\r\n    public stopAutoScroll() {\r\n        if (this._scrollView == null) {\r\n            return;\r\n        }\r\n\r\n        if (!this._scrollView.isAutoScrolling()) return;\r\n\r\n        this._scrollView.stopAutoScroll();\r\n    }\r\n\r\n    /**\r\n     * 获取item在scrView上的位置\r\n     * @param {Node} item 显示单元\r\n     * @returns {math.Vec2 | math.Vec3} 显示单元位置\r\n     */\r\n    public getPositionInView(item: Node): math.Vec2 | math.Vec3 {\r\n        const worldPos = item.parent.getComponent(UITransform).convertToWorldSpaceAR(item.position);\r\n        return this._scrollView.node.getComponent(UITransform).convertToNodeSpaceAR(worldPos);\r\n    }\r\n\r\n    /**\r\n     * 获取当前Y轴偏移量整数\r\n     * @returns {Number}\r\n     */\r\n    public getScrollOffsetY(): number {\r\n        return Math.floor(this._scrollView.getScrollOffset().y);\r\n    }\r\n\r\n    /**\r\n     * 清空列表\r\n     */\r\n    public clearList() {\r\n        this._dataList = null;\r\n        this._disposeItems();\r\n        this.createItemsDisplayList();\r\n    }\r\n\r\n    /**\r\n     * 清理回收所有显示单元\r\n     */\r\n    protected _disposeItems() {\r\n        isValid(this._content) && this._scrollView.content.destroyAllChildren();\r\n        this._items = null;\r\n    }\r\n\r\n    protected _onScrolling() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 回收\r\n     */\r\n    protected onDestroy() {\r\n        if (this.useVirtualLayout) {\r\n            this.node.off('scrolling', this._onScrolling, this);\r\n        }\r\n\r\n        this._scrollToBottomHandler = null;\r\n        this._scrollToBottomThisObj = null;\r\n\r\n        this._selectOneItemHandler = null;\r\n        this._selectOneItemThisObj = null;\r\n\r\n        this._disposeItems();\r\n        this._dataList = null;\r\n\r\n        this._imageCache.clear();\r\n    }\r\n}\r\n"]}