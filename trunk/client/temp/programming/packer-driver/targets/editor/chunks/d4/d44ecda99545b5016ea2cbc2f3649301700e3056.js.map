{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/assets/scripts/tongame/feed/FeedManager.ts"],"names":["FeedManager","oops","JsonUtil","GameEvent","UIID","TableIngredients","TableRestaurantlevel","HeChengComponent","BoardMgr","ProtocolMgr","TonGameMgr","UtilMgr","FeedMain","tablerecord","NextFreeDishTime","FreeDishId","HechengMaxLevel","ExtDishPrice","UpdateExtDishPrice","configId","init","FeedMgr","costup","UpdateHechengMaxLevel","sucaiid","type","level","updateFreeDishId","GetFreeDishId","HechengGUI","gui","get","MainUI","HechengCom","getComponent","RefreshFeedRed","RefreshData","usetime","randomlist","tablerest","jsonIngredients","TableName","CanTingLevel","configid","Ingredients","foodlevel","Number","id","push","length","getRandomNumber","UpdateNextFreeDishTime","SendBuyDish","confId","count","completeCBuyDish","ret","console","log","res","isSucc","addGrid","updateCarrotCoin","CarrotCoin","message","dispatchEvent","UpdateBaseData","UpdateBoardGrid","Save","FeedGUI","FeedCom","updategridList","toast","data","toString","userID","UserId","token","param","JSON","stringify","sendcbuydish"],"mappings":"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","sourcesContent":["import { oops } from \"../../../../extensions/oops-plugin-framework/assets/core/Oops\";\r\nimport { JsonUtil } from \"../../../../extensions/oops-plugin-framework/assets/core/utils/JsonUtil\";\r\nimport { HttpReturn } from \"../../../../extensions/oops-plugin-framework/assets/libs/network/HttpRequest\";\r\nimport { GameEvent } from \"../../framework/common/config/GameEvent\";\r\nimport { UIID } from \"../../framework/common/config/GameUIConfig\";\r\nimport { TableIngredients } from \"../../framework/common/table/TableIngredients\";\r\nimport { TableRestaurantlevel } from \"../../framework/common/table/TableRestaurantlevel\";\r\nimport { HeChengComponent } from \"../hecheng/HeChengComponent\";\r\nimport { BoardMgr } from \"../manager/BoardManager\";\r\nimport { ProtocolMgr } from \"../manager/ProtocolManager\";\r\nimport { TonGameMgr } from \"../manager/TonGameManager\";\r\nimport { UtilMgr } from \"../manager/UtilManager\";\r\nimport { FeedMain } from \"./FeedMain\";\r\n\r\nexport class FeedManager {\r\n    private tablerecord = new TableIngredients();\r\n    public NextFreeDishTime = 0;    // 距离下一次领取免费菜品的剩余时间\r\n    public FreeDishId = 0;      // 免费菜品id\r\n    public HechengMaxLevel: any[] = [];     // 合成菜品的最大等级\r\n    public ExtDishPrice: any[] = [];     // 记录菜品的价格涨幅\r\n\r\n    public UpdateExtDishPrice(configId:number)\r\n    {\r\n        this.tablerecord.init(configId);\r\n        if (FeedMgr.ExtDishPrice[configId]) {\r\n            FeedMgr.ExtDishPrice[configId] = FeedMgr.ExtDishPrice[configId] + this.tablerecord.costup;\r\n        }\r\n        else {\r\n            FeedMgr.ExtDishPrice[configId] = this.tablerecord.costup;\r\n        }\r\n    }\r\n\r\n    // 更新合成菜品的最大等级\r\n    public UpdateHechengMaxLevel(sucaiid : number) {\r\n        let tablerecord = new TableIngredients();\r\n        tablerecord.init(sucaiid);\r\n        if (FeedMgr.HechengMaxLevel[tablerecord.type]) {\r\n            if (tablerecord.level > FeedMgr.HechengMaxLevel[tablerecord.type]) {\r\n                FeedMgr.HechengMaxLevel[tablerecord.type] = tablerecord.level;\r\n            }\r\n        }\r\n        else {\r\n            FeedMgr.HechengMaxLevel[tablerecord.type] = tablerecord.level;\r\n        }\r\n    }\r\n\r\n    public updateFreeDishId() {\r\n        if (this.FreeDishId <= 0 && this.NextFreeDishTime <= 0) {\r\n            this.FreeDishId = this.GetFreeDishId();\r\n            const HechengGUI = oops.gui.get(UIID.MainUI);\r\n            if (HechengGUI) {\r\n                const HechengCom = HechengGUI.getComponent(HeChengComponent);\r\n                if (HechengCom) {\r\n                    HechengCom.RefreshFeedRed();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public RefreshData(usetime:number) {\r\n        if (this.FreeDishId <= 100) {\r\n            if (usetime >= this.NextFreeDishTime) {\r\n                this.NextFreeDishTime = 0;\r\n                this.FreeDishId = this.GetFreeDishId();\r\n            }\r\n        }\r\n    }\r\n\r\n    public GetFreeDishId() : number {\r\n        let randomlist : any[] = [];\r\n        let tablerecord = new TableIngredients();\r\n        let tablerest = new TableRestaurantlevel();\r\n        let jsonIngredients = JsonUtil.get(TableIngredients.TableName);\r\n        tablerest.init(TonGameMgr.CanTingLevel);\r\n        if (jsonIngredients) {\r\n            for (let configid  in jsonIngredients) {\r\n                let Ingredients = jsonIngredients[configid];\r\n                if (Ingredients.level == tablerest.foodlevel+2-5) {\r\n                    tablerecord.init(Number(configid));\r\n                    if (tablerecord && tablerecord.id && tablerecord.id > 0) {\r\n                        randomlist.push(tablerecord.id);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (randomlist.length > 0) {\r\n            return UtilMgr.getRandomNumber(randomlist);\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    public UpdateNextFreeDishTime() {\r\n        if (this.NextFreeDishTime > 0) {\r\n            this.NextFreeDishTime = this.NextFreeDishTime - 1;\r\n            if (this.NextFreeDishTime <= 0) {\r\n                this.NextFreeDishTime = 0;\r\n                this.FreeDishId = this.GetFreeDishId();\r\n                const HechengGUI = oops.gui.get(UIID.MainUI);\r\n                if (HechengGUI) {\r\n                    const HechengCom = HechengGUI.getComponent(HeChengComponent);\r\n                    if (HechengCom) {\r\n                        HechengCom.RefreshFeedRed();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public SendBuyDish(confId:number, count:number) {\r\n        var completeCBuyDish = (ret: HttpReturn) => {\r\n            console.log(ret.res);\r\n            if (ret.isSucc)\r\n            {\r\n                let tablerecord = new TableIngredients();\r\n                tablerecord.init(Number(ret.res.confId));\r\n                if (BoardMgr.addGrid(Number(ret.res.confId)))\r\n                {\r\n                    TonGameMgr.updateCarrotCoin(TonGameMgr.CarrotCoin-Number(ret.res.count));\r\n                    oops.message.dispatchEvent(GameEvent.UpdateBaseData);\r\n                    oops.message.dispatchEvent(GameEvent.UpdateBoardGrid);\r\n                    oops.message.dispatchEvent(GameEvent.Save);\r\n                }\r\n\r\n                const FeedGUI = oops.gui.get(UIID.FeedMain);\r\n                if (FeedGUI) {\r\n                    const FeedCom = FeedGUI.getComponent(FeedMain);\r\n                    if (FeedCom) {\r\n                        FeedCom.updategridList();\r\n                    }\r\n                }\r\n                oops.gui.toast(\"message_11\", true);     // 购买成功！\r\n                FeedMgr.UpdateExtDishPrice(Number(ret.res.confId));\r\n            }\r\n        }\r\n    \r\n        const data: { [key: string]: any } = {};\r\n        data.confId = confId.toString();\r\n        data.count = count.toString();\r\n        data.userID = TonGameMgr.UserId;\r\n        data.token = \"e10adc3949ba59abbe56e057f20f883e\";\r\n    \r\n        const param = JSON.stringify(data);\r\n        ProtocolMgr.sendcbuydish(completeCBuyDish, param);\r\n    }\r\n}\r\n\r\nexport var FeedMgr = new FeedManager();\r\n"]}