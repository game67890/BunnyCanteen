{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/assets/scripts/tongame/manager/UtilManager.ts"],"names":["UtilManager","resources","SpriteAtlas","assetManager","SpriteFrame","Sprite","Texture2D","UITransform","Animation","AnimationClip","oops","StringUtil","TonGameMgr","TelegramWebApp","TableSoundEffects","AcceleratedBuffMgr","TableRecord","SoundEffects","getRandomNumber","numbers","randomIndex","Math","floor","random","length","convertSeconds","seconds","days","hours","minutes","secs","result","language","getLangByID","trim","generateSignature","params","secret","filteredParams","Object","entries","filter","key","sortedParams","sort","keyA","keyB","localeCompare","paramString","map","value","join","stringToSign","encoder","TextEncoder","data","encode","hashBuffer","crypto","subtle","digest","hashArray","Array","from","Uint8Array","hashHex","b","toString","padStart","toUpperCase","SetImage","ImageWnd","ImageString","strarray","stringToArray4","load","err","atlas","console","error","spriteFrame","getSpriteFrame","isValid","sprite","getComponent","share","text","gameUrl","UserId","Instance","shareUrl","URLSearchParams","openTelegramLink","copyLinkToClipboard","link","navigator","clipboard","writeText","then","log","catch","warn","joinChannel","telegramChannelUrl","openBot","botUrl","PlayBgMusic","effectid","init","CurBGM","loop","audio","playMusicLoop","soundpath","volumeMusic","volume","playMusic","onAudioCompleteCallback","isAccelerating","UtilMgr","StopBgMusic","stopMusic","PlaySoundEffect","i","playEffectLoop","playEffect","StopSoundEffect","stopEffect","ShowUserHead","userId","headImage","url","http","server","loadRemote","imageAsset","texture","image","nodeWidth","node","width","nodeHeight","height","originalWidth","originalHeight","scaleX","scaleY","scale","min","parseMapString","mapString","slice","pairs","split","pair","parseInt","addNodeAnimation","path","onlyOne","isDefaultClip","callback","anim","addComponent","onCompleteCallback","clip","res","get","getState","name","isPlaying","stop","defaultClip","play","once","EventType","FINISHED","createState","loadDir","isHttps","parsedUrl","URL","protocol","formatNumber","units","alphabet","unitIndex","displayValue","valueLength","remainder","Number","firstIndex","secondIndex","keepScreenAwake","wakeLock","request","document","addEventListener","visibilityState"],"mappings":"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","sourcesContent":["import { oops } from \"../../../../extensions/oops-plugin-framework/assets/core/Oops\";\r\nimport { resources, SpriteAtlas, assetManager, SpriteFrame, Sprite, Texture2D, ImageAsset, UITransform } from 'cc';\r\nimport { StringUtil } from '../../../../extensions/oops-plugin-framework/assets/core/utils/StringUtil';\r\nimport { TonGameMgr } from \"./TonGameManager\";\r\nimport { TelegramWebApp } from '../../../cocos-telegram-miniapps/scripts/telegram-web';\r\nimport { TableSoundEffects } from \"../../framework/common/table/TableSoundEffects\";\r\nimport { AcceleratedBuffMgr } from \"../acceleratedbuff/AcceleratedBuffManager\";\r\nimport { Node } from \"cc\";\r\nimport { Animation } from \"cc\";\r\nimport { AnimationClip } from \"cc\";\r\n\r\n//import { createHash } from 'crypto';\r\ntype UserAvatarCallback = (avatarUrl:string) => void;\r\n\r\nexport class UtilManager {\r\n    private TableRecord = new TableSoundEffects();\r\n\r\n    //打开拔萝卜界面需要顶掉的音效\r\n    private SoundEffects : number[] = [3, 4, 5, 6, 7];\r\n\r\n    //随机获取数组中的一个数\r\n    public getRandomNumber(numbers: number[]): number {\r\n        const randomIndex = Math.floor(Math.random() * numbers.length);\r\n        return numbers[randomIndex];\r\n    }\r\n    //把秒数转换为xx天xx时xx分xx秒\r\n    public convertSeconds(seconds: number): string {\r\n        const days = Math.floor(seconds / (24 * 3600));\r\n        seconds %= (24 * 3600);\r\n        const hours = Math.floor(seconds / 3600);\r\n        seconds %= 3600;\r\n        const minutes = Math.floor(seconds / 60);\r\n        const secs = seconds % 60;\r\n    \r\n        let result = '';\r\n        if (days > 0) {\r\n            result += `${days}`;\r\n            result += oops.language.getLangByID(\"stringres_019\") + \" \";   //天\r\n        }\r\n        if (hours > 0 || days > 0) { // 如果有天数或者小时数大于0，则显示小时\r\n            result += `${hours}`;\r\n            result += oops.language.getLangByID(\"stringres_016\") + \" \";   //时\r\n        }\r\n        if (minutes > 0 || hours > 0 || days > 0)\r\n        {\r\n            result += `${minutes}`;\r\n            result += oops.language.getLangByID(\"stringres_017\") + \" \";   //分\r\n        }\r\n        result += `${secs}`;\r\n        result += oops.language.getLangByID(\"stringres_018\");   //秒\r\n    \r\n        return result.trim(); // 去掉末尾多余的空格\r\n    }\r\n\r\n    //生成签名\r\n    public async generateSignature(params: Record<string, any>, secret: string): Promise<string> {\r\n        // Step 1: Collect all parameters into an array excluding the 'sign' parameter\r\n        const filteredParams = Object.entries(params).filter(([key]) => key !== 'sign');\r\n    \r\n        // Step 2: Sort the array alphabetically by parameter names (keys) in ascending ASCII order\r\n        const sortedParams = filteredParams.sort(([keyA], [keyB]) => keyA.localeCompare(keyB));\r\n    \r\n        // Step 3: Concatenate parameters in the format parameter_name=parameter_value and join them with '&'\r\n        const paramString = sortedParams.map(([key, value]) => `${key}=${value}`).join('&');\r\n    \r\n        // Step 4: Append the secret key to the concatenated string\r\n        const stringToSign = `${paramString}&key=${secret}`;\r\n\r\n        // Step 5: Generate the SHA-512 hash of the string using Web Crypto API\r\n        const encoder = new TextEncoder();\r\n        const data = encoder.encode(stringToSign);\r\n        const hashBuffer = await crypto.subtle.digest('SHA-512', data);\r\n\r\n        // Step 6: Convert hash to hex string and uppercase it\r\n        const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n        const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('').toUpperCase();\r\n\r\n        return hashHex;\r\n    /*\r\n        // Step 5: Generate the SHA-512 hash of the string and convert it to uppercase\r\n        const hash = createHash('sha512').update(stringToSign).digest('hex').toUpperCase();\r\n    \r\n        return hash;\r\n        */\r\n    }\r\n\r\n    public SetImage(ImageWnd, ImageString) \r\n    {\r\n        let strarray = StringUtil.stringToArray4(ImageString);\r\n        resources.load(strarray[0], SpriteAtlas, (err, atlas) => {\r\n            if (err) {\r\n                console.error(\"加载 SpriteAtlas 失败：\", err);\r\n                return;\r\n            }\r\n\r\n            const spriteFrame = atlas?.getSpriteFrame(strarray[1]);\r\n            if (spriteFrame && ImageWnd && ImageWnd.isValid) {\r\n                const sprite = ImageWnd.getComponent(Sprite);\r\n                if (sprite) {\r\n                    sprite.spriteFrame = spriteFrame;\r\n                } \r\n            } else {\r\n                console.error(\"未找到对应的 SpriteFrame 或 Sprite 组件未绑定\");\r\n            }\r\n        });\r\n    }\r\n\r\n    //分享 text(文本消息)\r\n    public share(text?: string) {\r\n        const gameUrl = \"https://t.me/BunnyCanteenBot/BunnyCanteen?referrer=\" + TonGameMgr.UserId;\r\n        if (TelegramWebApp.Instance) {\r\n            const shareUrl = 'https://t.me/share/url?url=' + gameUrl + '&' + new URLSearchParams({ text: text || '' }).toString();\r\n            TelegramWebApp.Instance.openTelegramLink(shareUrl);\r\n        }\r\n    }\r\n\r\n    // 复制链接到剪贴板\r\n    public copyLinkToClipboard() {\r\n        let link = \"https://t.me/BunnyCanteenBot/BunnyCanteen?referrer=\" + TonGameMgr.UserId;\r\n        if (navigator.clipboard && navigator.clipboard.writeText) {\r\n            navigator.clipboard.writeText(link)\r\n                .then(() => {\r\n                    console.log(\"链接已复制到剪贴板: \" + link);\r\n                    // 这里可以添加一个提示，告诉用户链接已复制\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"复制链接时出错:\", error);\r\n                    // 可以显示一个错误提示\r\n                });\r\n        } else {\r\n            console.warn(\"当前环境不支持剪贴板操作\");\r\n            // 处理不支持剪贴板 API 的情况\r\n        }\r\n    }\r\n\r\n    //加入频道\r\n    public joinChannel() {\r\n        const telegramChannelUrl = \"https://t.me/BunnyCanteen\";\r\n        TelegramWebApp.Instance.openTelegramLink(telegramChannelUrl);\r\n    }\r\n\r\n    //打开官方Bot\r\n    public openBot() {\r\n        const botUrl = \"https://t.me/BunnyCanteenBot\"; // 应用内打开\r\n        TelegramWebApp.Instance.openTelegramLink(botUrl);\r\n    }\r\n\r\n    // 播放背景音乐\r\n    public PlayBgMusic(effectid:number) {\r\n        if (this.TableRecord) {\r\n            this.TableRecord.init(effectid);\r\n            if (this.TableRecord) {\r\n                TonGameMgr.CurBGM = effectid;\r\n                if (this.TableRecord.loop == 1) {\r\n                    oops.audio.playMusicLoop(this.TableRecord.soundpath);\r\n                    oops.audio.volumeMusic = this.TableRecord.volume;\r\n                } else {\r\n                    oops.audio.playMusic(this.TableRecord.soundpath);\r\n                    oops.audio.volumeMusic = this.TableRecord.volume;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /** 音频加载完成事件 */\r\n    public onAudioCompleteCallback() {\r\n        if (TonGameMgr.CurBGM == 0) {\r\n            if (AcceleratedBuffMgr.isAccelerating()) {\r\n                UtilMgr.PlayBgMusic(23);\r\n            } else {\r\n                UtilMgr.PlayBgMusic(22);\r\n            }\r\n        }\r\n    }\r\n\r\n    public StopBgMusic() {\r\n        oops.audio.stopMusic()\r\n    }\r\n\r\n    // 播放音效\r\n    public PlaySoundEffect(effectid:number) {\r\n        if (TonGameMgr.CurBGM == 24) {      // 拔萝卜界面打开时需要屏蔽播放一些音效\r\n            for (let i = 0; i < this.SoundEffects.length; i++) {\r\n                if (this.SoundEffects[i] == effectid) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        if (this.TableRecord) {\r\n            this.TableRecord.init(effectid);\r\n            if (this.TableRecord) {\r\n                if (this.TableRecord.loop == 1) {\r\n                    oops.audio.playEffectLoop(this.TableRecord.soundpath, this.TableRecord.volume);\r\n                    // oops.audio.volumeEffect = this.TableRecord.volume;\r\n                } else {\r\n                    oops.audio.playEffect(this.TableRecord.soundpath, this.TableRecord.volume);\r\n                    // oops.audio.volumeEffect = this.TableRecord.volume;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public StopSoundEffect() {\r\n        oops.audio.stopEffect()\r\n    }\r\n\r\n    public ShowUserHead(userId, headImage:Sprite){\r\n        let url = oops.http.server + \"getheadimg/\"+ userId + \".jpg\";\r\n        assetManager.loadRemote<ImageAsset>(url, (err, imageAsset) => {\r\n            if (err) {\r\n                console.log(\"loadRemote err\");\r\n                return;\r\n            }\r\n            console.log(\"loadRemote ok\");\r\n            const spriteFrame = new SpriteFrame();\r\n            const texture = new Texture2D();\r\n            texture.image = imageAsset;\r\n            spriteFrame.texture = texture;\r\n\r\n            const nodeWidth = headImage.node.getComponent(UITransform).width;  // 获取节点的宽度\r\n            const nodeHeight = headImage.node.getComponent(UITransform).height; // 获取节点的高度\r\n\r\n            headImage.spriteFrame = spriteFrame;\r\n\r\n            // 获取图片的原始宽高\r\n            const originalWidth = texture.width;\r\n            const originalHeight = texture.height;\r\n\r\n            // 计算缩放比例\r\n            const scaleX = nodeWidth / originalWidth;\r\n            const scaleY = nodeHeight / originalHeight;\r\n\r\n            // 统一缩放比例以保持纵横比\r\n            const scale = Math.min(scaleX, scaleY);\r\n\r\n            // 设置Sprite的缩放\r\n            //headImage.node.setScale(scale, scale);\r\n        });\r\n    }\r\n    public parseMapString(mapString: string): { [key: string]: number } {\r\n        // 检查是否为空的 Map 字符串\r\n        if (mapString.trim() === \"{}\") {\r\n            return {}; // 返回空对象\r\n        }\r\n\r\n        // 去掉大括号\r\n        mapString = mapString.slice(1, -1);\r\n        \r\n        // 按逗号分割字符串，得到键值对数组\r\n        const pairs = mapString.split(\", \");\r\n        \r\n        // 创建一个对象来存储解析后的键值对\r\n        const result: { [key: string]: number } = {};\r\n        \r\n        // 遍历每个键值对\r\n        for (const pair of pairs) {\r\n            // 按等号分割键值对\r\n            const [key, value] = pair.split(\"=\");\r\n            // 将键值对添加到结果对象中\r\n            result[key.trim()] = parseInt(value.trim(), 10); // 转换值为整数\r\n        } \r\n        return result;\r\n    }\r\n\r\n    /**\r\n    * 添加节点动画\r\n    * @param path              资源路径\r\n    * @param node              目标节点\r\n    * @param onlyOne           是否唯一\r\n    * @param isDefaultClip     是否播放默认动画剪辑\r\n    */\r\n    public addNodeAnimation(path: string, node: Node, onlyOne: boolean = true, isDefaultClip: boolean = false, callback?: Function) {\r\n        if (!node || !node.isValid) {\r\n            return;\r\n        }\r\n\r\n        let anim = node.getComponent(Animation);\r\n        if (anim == null) {\r\n            anim = node.addComponent(Animation);\r\n        }\r\n        \r\n        var onCompleteCallback = () => {\r\n            if (!node || !node.isValid) {\r\n                return;\r\n            }\r\n            const clip: AnimationClip = oops.res.get(path, AnimationClip)!;\r\n            if (!clip) {\r\n                return;\r\n            }\r\n\r\n            if (onlyOne && anim.getState(clip.name) && anim.getState(clip.name).isPlaying) {\r\n                return;\r\n            }\r\n\r\n            anim.stop();\r\n\r\n            if (isDefaultClip) {\r\n                anim.defaultClip = clip;\r\n                anim.play();\r\n                return;\r\n            }\r\n\r\n            // 播放完成后恢复播放默认动画\r\n            anim.once(Animation.EventType.FINISHED, () => {\r\n                if (callback)\r\n                {\r\n                    callback()\r\n                }\r\n                if (isDefaultClip) {\r\n                    if (anim!.defaultClip) {\r\n                        anim!.play();\r\n                    }\r\n                }  \r\n            }, this);\r\n\r\n            if (anim.getState(clip.name)) {\r\n                anim.play(clip.name);\r\n                return\r\n            }\r\n            anim.createState(clip, clip!.name);\r\n            anim.play(clip!.name);\r\n        }\r\n\r\n        oops.res.loadDir(path, onCompleteCallback);   \r\n    }\r\n\r\n\r\n    // 判断给定 URL 是否是 HTTPS\r\n    public isHttps(url: string): boolean {\r\n        try {\r\n            const parsedUrl = new URL(url); // 使用 URL 对象解析 URL\r\n            return parsedUrl.protocol === 'https:'; // 检查协议\r\n        } catch (error) {\r\n            return false; // 如果 URL 无效，返回 false\r\n        }\r\n    }\r\n\r\n    public formatNumber(value: bigint): string {\r\n        const units = [\"\", \"K\", \"M\", \"B\", \"T\", \"Q\", \"aa\"];\r\n        const alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\n    \r\n        // 若数字小于等于 6 位，直接返回原数字\r\n        if (value < 1000000n) {\r\n            return value.toString();\r\n        }\r\n    \r\n        let unitIndex = 0;\r\n        let displayValue = value;\r\n    \r\n        // 每增加 10^3，切换一个单位\r\n        while (displayValue >= 1000n && unitIndex < units.length - 1) {\r\n            displayValue /= 1000n;\r\n            unitIndex++;\r\n        }\r\n    \r\n        // 处理大于等于 10^18 的情况，开始使用两位字母组合\r\n        if (displayValue >= 1000n) {\r\n            let valueLength = displayValue.toString().length;\r\n            let remainder = Math.floor((Number(valueLength)) / 3);\r\n            let firstIndex = Math.floor(remainder / 26);\r\n            let secondIndex = remainder % 26;\r\n\r\n            while (displayValue >= 1000n) {\r\n                displayValue /= 1000n;\r\n            }\r\n    \r\n            displayValue = displayValue * 1000n;\r\n            if (secondIndex == 0)\r\n            {\r\n                secondIndex = 25;\r\n                firstIndex -= 1;\r\n            }\r\n            else\r\n            {\r\n                secondIndex -= 1;\r\n            }\r\n            return `${displayValue}${alphabet[firstIndex]}${alphabet[secondIndex]}`;\r\n        }\r\n    \r\n        displayValue = displayValue * 1000n;\r\n        return `${displayValue}${units[unitIndex-1]}`;\r\n    }\r\n\r\n    public async keepScreenAwake() {\r\n        try {\r\n            // 检查是否支持 wakeLock API\r\n            if (\"wakeLock\" in navigator) {\r\n                const wakeLock = await navigator.wakeLock.request(\"screen\");\r\n                console.log(\"屏幕常亮模式已激活\");\r\n                //oops.gui.toast(\"屏幕常亮模式已激活\", true);\r\n    \r\n                // 监听设备的可见性变化（处理页面被切出或返回时的 wakeLock 释放问题）\r\n                document.addEventListener(\"visibilitychange\", async () => {\r\n                    if (document.visibilityState === \"visible\") {\r\n                        await navigator.wakeLock.request(\"screen\");\r\n                    }\r\n                });\r\n            } else {\r\n                console.warn(\"当前环境不支持 wakeLock API\");\r\n                //oops.gui.toast(\"当前环境不支持 wakeLock API\", true);\r\n            }\r\n        } catch (err) {\r\n            console.error(\"保持屏幕常亮失败:\", err);\r\n            //oops.gui.toast(\"保持屏幕常亮失败\", true);\r\n        }\r\n    }\r\n}\r\n\r\nexport var UtilMgr = new UtilManager();"]}