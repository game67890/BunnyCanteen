{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/extensions/oops-plugin-framework/assets/core/utils/StringUtil.ts"],"names":["StringUtil","guid","i","n","Math","floor","random","toString","numberTotPermil","value","toLocaleString","numberToThousand","fixed","k","sizes","log","r","pow","toFixed","numberToTenThousand","stringToArray1","str","split","stringToArray2","stringToArray3","stringToArray4","sub","showdot","replace","length","m","substr","stringLen","realLength","len","charCode","charCodeAt","IsEmpty","undefined","substitute","rest","args","Array","RegExp","substitute_1"],"mappings":"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","sourcesContent":["/** 字符串工具 */\r\nexport class StringUtil {\r\n    /** 获取一个唯一标识的字符串 */\r\n    static guid() {\r\n        let guid: string = \"\";\r\n        for (let i = 1; i <= 32; i++) {\r\n            let n = Math.floor(Math.random() * 16.0).toString(16);\r\n            guid += n;\r\n            if ((i == 8) || (i == 12) || (i == 16) || (i == 20))\r\n                guid += \"-\";\r\n        }\r\n        return guid;\r\n    }\r\n\r\n    /**\r\n     * 转美式计数字符串\r\n     * @param value 数字\r\n     * @example\r\n     * 123456789 = 123,456,789\r\n     */\r\n    static numberTotPermil(value: number): string {\r\n        return value.toLocaleString();\r\n    }\r\n\r\n    /**\r\n     * 转英文单位计数\r\n     * @param value 数字\r\n     * @param fixed 保留小数位数\r\n     * @example\r\n     * 12345 = 12.35K\r\n     */\r\n    static numberToThousand(value: number, fixed: number = 2): string {\r\n        const k = 1000;\r\n        const sizes = ['', 'K', 'M', 'G'];\r\n        if (value < k) {\r\n            return value.toString();\r\n        }\r\n        else {\r\n            const i = Math.floor(Math.log(value) / Math.log(k));\r\n            const r = ((value / Math.pow(k, i)));\r\n            return r.toFixed(fixed) + sizes[i];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 转中文单位计数\r\n     * @param value 数字\r\n     * @param fixed 保留小数位数\r\n     * @example\r\n     * 12345 = 1.23万\r\n     */\r\n    static numberToTenThousand(value: number, fixed: number = 2): string {\r\n        const k = 10000;\r\n        const sizes = ['', '万', '亿', '万亿'];\r\n        if (value < k) {\r\n            return value.toString();\r\n        }\r\n        else {\r\n            const i = Math.floor(Math.log(value) / Math.log(k));\r\n            return ((value / Math.pow(k, i))).toFixed(fixed) + sizes[i];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \",\" 分割字符串成数组\r\n     * @param str 字符串\r\n     */\r\n    static stringToArray1(str: string) {\r\n        if (str == \"\") {\r\n            return [];\r\n        }\r\n        return str.split(\",\");\r\n    }\r\n\r\n    /**\r\n     * \"|\" 分割字符串成数组\r\n     * @param str 字符串\r\n     */\r\n    static stringToArray2(str: string) {\r\n        if (str == \"\") {\r\n            return [];\r\n        }\r\n        return str.split(\"|\");\r\n    }\r\n\r\n    /**\r\n     * \":\" 分割字符串成数组\r\n     * @param str 字符串\r\n     */\r\n    static stringToArray3(str: string) {\r\n        if (str == \"\") {\r\n            return [];\r\n        }\r\n        return str.split(\":\");\r\n    }\r\n\r\n    /**\r\n     * \";\" 分割字符串成数组\r\n     * @param str 字符串\r\n     */\r\n    static stringToArray4(str: string) {\r\n        if (str == \"\") {\r\n            return [];\r\n        }\r\n        return str.split(\";\");\r\n    }\r\n\r\n    /**\r\n     * 字符串截取\r\n     * @param str     字符串\r\n     * @param n       截取长度\r\n     * @param showdot 是否把截取的部分用省略号代替\r\n     */\r\n    static sub(str: string, n: number, showdot: boolean = false) {\r\n        const r = /[^\\x00-\\xff]/g;\r\n        if (str.replace(r, \"mm\").length <= n) { return str; }\r\n        const m = Math.floor(n / 2);\r\n        for (let i = m; i < str.length; i++) {\r\n            if (str.substr(0, i).replace(r, \"mm\").length >= n) {\r\n                if (showdot) {\r\n                    return str.substr(0, i) + \"...\";\r\n                }\r\n                else {\r\n                    return str.substr(0, i);\r\n                }\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * 计算字符串长度，中文算两个字节\r\n     * @param str 字符串\r\n     */\r\n    static stringLen(str: string) {\r\n        let realLength = 0, len = str.length, charCode = -1;\r\n        for (let i = 0; i < len; i++) {\r\n            charCode = str.charCodeAt(i);\r\n            if (charCode >= 0 && charCode <= 128)\r\n                realLength += 1;\r\n            else\r\n                realLength += 2;\r\n        }\r\n        return realLength;\r\n    }\r\n\r\n    /**\r\n     * 是否为空\r\n     * @param str\r\n     */\r\n    public static IsEmpty(str: string): boolean {\r\n        return str == null || str == undefined || str.length == 0;\r\n    }\r\n\r\n    /**\r\n     * 参数替换\r\n     * @param  str\r\n     * @param  rest\r\n     *\r\n     * @example\r\n     *\r\n     * var str:string = \"here is some info '{0}' and {1}\";\r\n     * StringUtil.substitute(str, 15.4, true);\r\n     *\r\n     * \"here is some info '15.4' and true\"\r\n     */\r\n    public static substitute(str: string, ...rest: any[]): string {\r\n        if (str == null) return '';\r\n\r\n        let len: number = rest.length;\r\n        let args: any[];\r\n        if (len == 1 && rest[0] instanceof Array) {\r\n            args = rest[0];\r\n            len = args.length;\r\n        }\r\n        else {\r\n            args = rest;\r\n        }\r\n\r\n        for (let i: number = 0; i < len; i++) {\r\n            str = str.replace(new RegExp(\"\\\\{\" + i + \"\\\\}\", \"g\"), args[i]);\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n    // 新增参数替换\r\n    public static substitute_1(str: string, ...rest: any[]): string {\r\n        if (str == null) return '';\r\n\r\n        let len: number = rest.length;\r\n        let args: any[];\r\n        if (len == 1 && rest[0] instanceof Array) {\r\n            args = rest[0];\r\n            len = args.length;\r\n        }\r\n        else {\r\n            args = rest;\r\n        }\r\n\r\n        for (let i: number = 0; i < len; i++) {\r\n            str = str.replace(\"$parameter\" + (i+1) + \"$\", args[i]);\r\n        }\r\n\r\n        return str;\r\n    }\r\n}\r\n"]}