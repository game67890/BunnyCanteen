{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/assets/scripts/tongame/task/AchievementItemListItem.ts"],"names":["_decorator","Label","Sprite","IVirtualGridListItem","oops","UIID","UtilMgr","ProtocolMgr","TaskMgr","ccclass","property","AchievementItemListItem","onDataChanged","data","jiangli","string","num","toString","miaoshu","language","getLangByID","tips","isFinished","iconBack","grayscale","icon","geted","node","active","redPoint","canGetAchievementReward","id","SetImage","onSelect","PlaySoundEffect","achievementID","param","JSON","stringify","completeAchievement","ret","isSucc","res","result","modifyAchievementData","params","gui","open","TaskTips","sendFinishAchievement","onDestroy"],"mappings":"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","sourcesContent":["import {_decorator, Label, Sprite, math, SpriteFrame, Node} from 'cc';\r\nimport {IVirtualGridListItem} from \"../../../resources/libs/virtual_grid_list/interface\";\r\nimport { oops } from \"../../../../extensions/oops-plugin-framework/assets/core/Oops\";\r\nimport { UIID } from \"../../framework/common/config/GameUIConfig\";\r\nimport { UtilMgr } from \"../manager/UtilManager\";\r\nimport { ProtocolMgr } from \"../manager/ProtocolManager\";\r\nimport { TaskMgr } from \"../task/TaskManager\";\r\nimport { HttpReturn } from \"../../../../extensions/oops-plugin-framework/assets/libs/network/HttpRequest\";\r\n\r\nconst {ccclass, property} = _decorator;\r\n\r\n@ccclass('AchievementItemListItem')\r\nexport class AchievementItemListItem extends IVirtualGridListItem {\r\n    @property(Label)\r\n    jiangli: Label = null;\r\n\r\n    @property(Label)\r\n    miaoshu: Label = null;\r\n\r\n    @property(Sprite)\r\n    iconBack: Sprite = null;\r\n    @property(Sprite)\r\n    icon: Sprite = null;\r\n    @property(Sprite)\r\n    geted: Sprite = null;\r\n\r\n    @property(Sprite)\r\n    redPoint: Sprite = null;\r\n\r\n    onDataChanged() {\r\n        const data = this.data;\r\n        this.jiangli.string = data.num.toString();\r\n        this.miaoshu.string = oops.language.getLangByID(data.tips);\r\n\r\n        if (data.isFinished)\r\n        {\r\n            this.iconBack.grayscale = true;\r\n            this.icon.grayscale = true;\r\n            this.geted.node.active = true;\r\n            this.redPoint.node.active = false;\r\n        }\r\n        else\r\n        {\r\n            this.iconBack.grayscale = false;\r\n            this.icon.grayscale = false;\r\n            this.geted.node.active = false;\r\n            if (TaskMgr.canGetAchievementReward(data.id))\r\n            {\r\n                this.redPoint.node.active = true;\r\n            }\r\n            else\r\n            {\r\n                this.redPoint.node.active = false;\r\n            }\r\n        }\r\n        UtilMgr.SetImage(this.icon, data.icon);\r\n    }\r\n\r\n    onSelect() {\r\n        UtilMgr.PlaySoundEffect(18);\r\n        if (!this.data.isFinished)\r\n        {\r\n            const data: { [key: string]: any } = {};\r\n            data.achievementID = this.data.id;\r\n            const param = JSON.stringify(data);\r\n            var completeAchievement = (ret: HttpReturn) => {\r\n                if (ret.isSucc && ret.res.result)\r\n                {\r\n                    this.iconBack.grayscale = true;\r\n                    this.icon.grayscale = true;\r\n                    this.geted.node.active = true;\r\n                    this.redPoint.node.active = false;\r\n                    TaskMgr.modifyAchievementData(this.data.id, true);\r\n\r\n                    let params: any = {};\r\n                    params.id = this.data.id;\r\n                    oops.gui.open(UIID.TaskTips, params);\r\n                }\r\n            }\r\n            ProtocolMgr.sendFinishAchievement(completeAchievement, param);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        super.onDestroy();\r\n    }\r\n}\r\n"]}