{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/extensions/oops-plugin-framework/assets/core/common/audio/AudioMusic.ts"],"names":["AudioClip","AudioSource","_decorator","resources","oops","TonGameMgr","ccclass","menu","AudioMusic","musics","Map","onComplete","_progress","_isLoading","_bundleName","_url","_bundleName_next","_url_next","progress","duration","currentTime","value","load","url","callback","bundleName","res","defaultBundleName","data","loadAsync","release","playPrepare","load_1","isLoop","key","call","clip","stop","loop","IsMute","play","has","set","get","err","console","error","playing","log","enabled","update","dt"],"mappings":"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","sourcesContent":["/*\r\n * @Author: dgflash\r\n * @Date: 2022-06-21 12:05:13\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2023-05-16 09:11:30\r\n */\r\nimport { AudioClip, AudioSource, _decorator } from 'cc';\r\nimport { oops } from '../../Oops';\r\nimport { error } from 'console';\r\nimport { resources } from 'cc';\r\nimport { TonGameMgr } from '../../../../../../assets/scripts/tongame/manager/TonGameManager';\r\n\r\nconst { ccclass, menu } = _decorator;\r\n\r\n/** \r\n * 背景音乐 \r\n * 1、播放一个新背景音乐时，先加载音乐资源，然后停止正在播放的背景资源同时施放当前背景音乐资源，最后播放新的背景音乐\r\n */\r\n@ccclass('AudioMusic')\r\nexport class AudioMusic extends AudioSource {\r\n\r\n    private musics: Map<string, AudioClip> = new Map<string, AudioClip>();\r\n    /** 背景音乐播放完成回调 */\r\n    onComplete: Function | null = null;\r\n\r\n    private _progress: number = 0;\r\n    private _isLoading: boolean = false;\r\n    private _bundleName: string = null!;        // 当前音乐资源包\r\n    private _url: string = null!;               // 当前播放音乐\r\n    private _bundleName_next: string = null!;   // 下一个音乐资源包\r\n    private _url_next: string = null!;          // 下一个播放音乐\r\n\r\n    /** 获取音乐播放进度 */\r\n    get progress(): number {\r\n        if (this.duration > 0)\r\n            this._progress = this.currentTime / this.duration;\r\n        return this._progress;\r\n    }\r\n    /**\r\n     * 设置音乐当前播放进度\r\n     * @param value     进度百分比0到1之间\r\n     */\r\n    set progress(value: number) {\r\n        this._progress = value;\r\n        this.currentTime = value * this.duration;\r\n    }\r\n\r\n    /**\r\n     * 加载音乐并播放\r\n     * @param url          音乐资源地址\r\n     * @param callback     加载完成回调\r\n     * @param bundleName   资源包名\r\n     */\r\n    async load(url: string, callback?: Function, bundleName?: string) {\r\n        if (bundleName == null) bundleName = oops.res.defaultBundleName;\r\n\r\n        // 下一个加载的背景音乐资源\r\n        if (this._isLoading) {\r\n            this._bundleName_next = bundleName;\r\n            this._url_next = url;\r\n            return;\r\n        }\r\n\r\n        this._isLoading = true;\r\n        var data: AudioClip = await oops.res.loadAsync(bundleName, url, AudioClip);\r\n        if (data) {\r\n            this._isLoading = false;\r\n\r\n            // 处理等待加载的背景音乐\r\n            if (this._url_next != null) {\r\n                // 删除之前加载的音乐资源\r\n                this.release();\r\n\r\n                // 加载等待播放的背景音乐\r\n                this.load(this._url_next, callback, this._bundleName_next);\r\n                this._bundleName_next = this._url_next = null!;\r\n            }\r\n            else {\r\n                callback && callback();\r\n                this.playPrepare(bundleName, url, data);\r\n            }\r\n        }\r\n    }\r\n\r\n    async load_1(url: string, isLoop: boolean = true) {\r\n        let bundleName = oops.res.defaultBundleName;\r\n        const key = `${bundleName}:${url}`;\r\n        \r\n        let call = (clip) => {\r\n            this.stop();\r\n            this.clip = null\r\n            this.clip = clip\r\n            this.loop = isLoop\r\n            if (TonGameMgr.IsMute == false) {\r\n                this.play()\r\n                if (!this.musics.has(key)) {\r\n                    this.musics.set(key, clip);\r\n                }\r\n            }\r\n        }\r\n\r\n        \r\n        //查找到对应音频则直接获取\r\n        if (this.musics.has(key)) {\r\n            const clip = this.musics.get(key)!;\r\n            call(clip);\r\n        } else {\r\n            //查找不到则加载资源\r\n\r\n            resources.load(url,AudioClip,(err: any, clip: AudioClip)=>{\r\n                if (err) {\r\n                    console.error(\"loadAudioClip\" + err);\r\n                }else{\r\n                    call(clip)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private playPrepare(bundleName: string, url: string, data: AudioClip) {\r\n        // 正在播放的时候先关闭\r\n        if (this.playing) {\r\n            this.stop();\r\n            console.log(\"stopmusic : \");\r\n        }\r\n\r\n        // 删除当前正在播放的音乐\r\n        this.release();\r\n\r\n        // 播放背景音乐\r\n        this.enabled = true;\r\n        this.clip = data;\r\n        this.play();\r\n        console.log(\"playmusic : \", url);\r\n\r\n        // 记录新的资源包与资源名数据\r\n        this._bundleName = bundleName;\r\n        this._url = url;\r\n    }\r\n\r\n    /** cc.Component 生命周期方法，验证背景音乐播放完成逻辑，建议不要主动调用 */\r\n    update(dt: number) {\r\n        // 背景资源播放完成事件\r\n        if (this.playing == false && this.progress == 0) {\r\n            this.enabled = false;\r\n            this.clip = null;\r\n            this._bundleName = this._url = null!;\r\n            this.onComplete && this.onComplete();\r\n        }\r\n    }\r\n\r\n    /** 释放当前背景音乐资源 */\r\n    release() {\r\n        if (this._url) {\r\n            this.stop();\r\n            this.clip = null;\r\n            oops.res.release(this._url, this._bundleName);\r\n        }\r\n\r\n        this._bundleName = this._url = null!;\r\n    }\r\n}"]}