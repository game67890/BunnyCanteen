{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/extensions/oops-plugin-framework/assets/module/common/GameComponent.ts"],"names":["Button","Component","EventHandler","Input","Node","Prefab","_decorator","input","instantiate","oops","EventDispatcher","EventMessage","ViewUtil","ccclass","ResType","GameComponent","_event","nodes","resPaths","event","on","listener","object","off","dispatchEvent","args","getNode","name","get","undefined","nodeTreeInfoLite","Map","node","createPrefabNode","path","p","res","n","createPrefabNodeAsync","bundleName","defaultBundleName","Promise","resolve","reject","load","err","content","console","error","getRes","type","addPathToRecord","paths","rps","set","Array","realBundle","index","length","realPath","key","has","bundle","loadAsync","Load","onProgress","onComplete","loadDir","dir","realDir","LoadDir","release","forEach","value","clear","releaseDir","releaseAudioEffect","Audio","audio","releaseEffect","playMusic","url","callback","playMusicLoop","stopMusic","playEffect","setButton","EventType","TOUCH_END","self","func","target","call","regex","buttons","getComponentsInChildren","b","handler","component","match","clickEvents","push","setEvent","setKeyboard","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","KEY_PRESSING","onKeyPressing","setGameShow","GAME_SHOW","onGameShow","setGameHide","GAME_HIDE","onGameHide","setGameResize","GAME_RESIZE","onGameResize","setGameFullScreen","GAME_FULL_SCREEN","onGameFullScreen","setGameOrientation","GAME_ORIENTATION","onGameOrientation","onDestroy","destroy"],"mappings":"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","sourcesContent":["/*\r\n * @Author: dgflash\r\n * @Date: 2022-04-14 17:08:01\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2022-12-13 11:36:00\r\n */\r\nimport { Asset, Button, Component, EventHandler, EventKeyboard, EventTouch, Input, Node, Prefab, __private, _decorator, input, instantiate } from \"cc\";\r\nimport { oops } from \"../../core/Oops\";\r\nimport { EventDispatcher } from \"../../core/common/event/EventDispatcher\";\r\nimport { EventMessage, ListenerFunc } from \"../../core/common/event/EventMessage\";\r\nimport { AssetType, CompleteCallback, ProgressCallback } from \"../../core/common/loader/ResLoader\";\r\nimport { ViewUtil } from \"../../core/utils/ViewUtil\";\r\nimport { ButtonTouchLong } from \"../../libs/gui/button/ButtonTouchLong\";\r\n\r\nconst { ccclass } = _decorator;\r\n\r\n/** 加载资源类型 */\r\nenum ResType {\r\n    Load,\r\n    LoadDir,\r\n    Audio\r\n}\r\n\r\n/** 资源加载记录 */\r\ninterface ResRecord {\r\n    bundle: string,\r\n    path: string\r\n}\r\n\r\n/** \r\n * 游戏显示对象组件模板\r\n * 1、当前对象加载的资源，会在对象释放时，自动释放引用的资源\r\n * 2、当前对象支持启动游戏引擎提供的各种常用逻辑事件\r\n */\r\n@ccclass(\"GameComponent\")\r\nexport class GameComponent extends Component {\r\n    //#region 全局事件管理\r\n    private _event: EventDispatcher | null = null;\r\n    /** 全局事件管理器 */\r\n    private get event(): EventDispatcher {\r\n        if (this._event == null) this._event = new EventDispatcher();\r\n        return this._event;\r\n    }\r\n\r\n    /**\r\n     * 注册全局事件\r\n     * @param event       事件名\r\n     * @param listener    处理事件的侦听器函数\r\n     * @param object      侦听函数绑定的this对象\r\n     */\r\n    on(event: string, listener: ListenerFunc, object: any) {\r\n        this.event.on(event, listener, object);\r\n    }\r\n\r\n    /**\r\n     * 移除全局事件\r\n     * @param event      事件名\r\n     */\r\n    off(event: string) {\r\n        this.event.off(event);\r\n    }\r\n\r\n    /** \r\n     * 触发全局事件 \r\n     * @param event      事件名\r\n     * @param args       事件参数\r\n     */\r\n    dispatchEvent(event: string, ...args: any) {\r\n        this.event.dispatchEvent(event, ...args);\r\n    }\r\n    //#endregion\r\n\r\n    //#region 预制节点管理\r\n\r\n    /** 摊平的节点集合（所有节点不能重名） */\r\n    private nodes: Map<string, Node> = null!;\r\n\r\n    /** 通过节点名获取预制上的节点，整个预制不能有重名节点 */\r\n    getNode(name: string): Node | undefined {\r\n        if (this.nodes) {\r\n            return this.nodes.get(name);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /** 平摊所有节点存到Map<string, Node>中通过get(name: string)方法获取 */\r\n    nodeTreeInfoLite() {\r\n        this.nodes = new Map();\r\n        ViewUtil.nodeTreeInfoLite(this.node, this.nodes);\r\n    }\r\n\r\n    /**\r\n     * 从资源缓存中找到预制资源名并创建一个显示对象\r\n     * @param path 资源路径\r\n     */\r\n    createPrefabNode(path: string): Node {\r\n        var p: Prefab = oops.res.get(path, Prefab)!;\r\n        var n = instantiate(p);\r\n        return n;\r\n    }\r\n\r\n    /**\r\n     * 加载预制并创建预制节点\r\n     * @param path       资源路径\r\n     * @param bundleName 资源包名\r\n     */\r\n    createPrefabNodeAsync(path: string, bundleName: string = oops.res.defaultBundleName): Promise<Node> {\r\n        return new Promise((resolve, reject) => {\r\n            this.load(bundleName, path, Prefab, (err: Error | null, content: Prefab) => {\r\n                if (err) {\r\n                    console.error(`名为【${path}】的资源加载失败`);\r\n                    resolve(null!);\r\n                }\r\n                else {\r\n                    var node = instantiate(content);\r\n                    resolve(node);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    //#endregion\r\n\r\n    //#region 资源加载管理\r\n    /** 资源路径 */\r\n    private resPaths: Map<ResType, Map<string, ResRecord>> = null!;             // 资源使用记录\r\n\r\n    /**\r\n     * 获取资源\r\n     * @param path          资源路径\r\n     * @param type          资源类型\r\n     * @param bundleName    远程资源包名\r\n     */\r\n    getRes<T extends Asset>(path: string, type?: __private.__types_globals__Constructor<T> | null, bundleName?: string): T | null {\r\n        return oops.res.get(path, type, bundleName);\r\n    }\r\n\r\n    /**\r\n     * 添加资源使用记录\r\n     * @param type          资源类型\r\n     * @param bundleName    资源包名\r\n     * @param paths         资源路径\r\n     */\r\n    private addPathToRecord<T>(type: ResType, bundleName: string, paths?: string | string[] | AssetType<T> | ProgressCallback | CompleteCallback | null) {\r\n        if (this.resPaths == null) this.resPaths = new Map();\r\n\r\n        var rps = this.resPaths.get(type);\r\n        if (rps == null) {\r\n            rps = new Map();\r\n            this.resPaths.set(type, rps);\r\n        }\r\n\r\n        if (paths instanceof Array) {\r\n            let realBundle = bundleName;\r\n            for (let index = 0; index < paths.length; index++) {\r\n                let realPath = paths[index];\r\n                let key = `${realBundle}:${realPath}`;\r\n                if (!rps.has(key)) {\r\n                    rps.set(key, { path: realPath, bundle: realBundle })\r\n                }\r\n            }\r\n        }\r\n        else if (typeof paths === \"string\") {\r\n            let realBundle = bundleName;\r\n            let realPath = paths;\r\n            let key = `${realBundle}:${realPath}`;\r\n            if (!rps.has(key)) {\r\n                rps.set(key, { path: realPath, bundle: realBundle })\r\n            }\r\n        }\r\n        else {\r\n            let realBundle = oops.res.defaultBundleName;\r\n            let realPath = bundleName;\r\n            let key = `${realBundle}:${realPath}`;\r\n            if (!rps.has(key)) {\r\n                rps.set(key, { path: realPath, bundle: realBundle })\r\n            }\r\n        }\r\n    }\r\n\r\n    /** 异步加载资源 */\r\n    loadAsync<T extends Asset>(bundleName: string, paths: string | string[], type: AssetType<T> | null): Promise<T>;\r\n    loadAsync<T extends Asset>(bundleName: string, paths: string | string[]): Promise<T>;\r\n    loadAsync<T extends Asset>(bundleName: string, paths: string | string[]): Promise<T>;\r\n    loadAsync<T extends Asset>(bundleName: string, paths: string | string[], type: AssetType<T> | null): Promise<T>;\r\n    loadAsync<T extends Asset>(paths: string | string[], type: AssetType<T> | null): Promise<T>;\r\n    loadAsync<T extends Asset>(paths: string | string[]): Promise<T>;\r\n    loadAsync<T extends Asset>(paths: string | string[]): Promise<T>;\r\n    loadAsync<T extends Asset>(paths: string | string[], type: AssetType<T> | null): Promise<T>;\r\n    loadAsync<T extends Asset>(bundleName: string, paths?: string | string[] | AssetType<T> | ProgressCallback | CompleteCallback | null, type?: AssetType<T> | ProgressCallback | CompleteCallback | null): Promise<T> {\r\n        this.addPathToRecord(ResType.Load, bundleName, paths);\r\n        return oops.res.loadAsync(bundleName, paths, type);\r\n    }\r\n\r\n    /** 加载资源 */\r\n    load<T extends Asset>(bundleName: string, paths: string | string[], type: AssetType<T> | null, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T> | null): void;\r\n    load<T extends Asset>(bundleName: string, paths: string | string[], onProgress: ProgressCallback | null, onComplete: CompleteCallback<T> | null): void;\r\n    load<T extends Asset>(bundleName: string, paths: string | string[], onComplete?: CompleteCallback<T> | null): void;\r\n    load<T extends Asset>(bundleName: string, paths: string | string[], type: AssetType<T> | null, onComplete?: CompleteCallback<T> | null): void;\r\n    load<T extends Asset>(paths: string | string[], type: AssetType<T> | null, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T> | null): void;\r\n    load<T extends Asset>(paths: string | string[], onProgress: ProgressCallback | null, onComplete: CompleteCallback<T> | null): void;\r\n    load<T extends Asset>(paths: string | string[], onComplete?: CompleteCallback<T> | null): void;\r\n    load<T extends Asset>(paths: string | string[], type: AssetType<T> | null, onComplete?: CompleteCallback<T> | null): void;\r\n    load<T extends Asset>(\r\n        bundleName: string,\r\n        paths?: string | string[] | AssetType<T> | ProgressCallback | CompleteCallback | null,\r\n        type?: AssetType<T> | ProgressCallback | CompleteCallback | null,\r\n        onProgress?: ProgressCallback | CompleteCallback | null,\r\n        onComplete?: CompleteCallback | null,\r\n    ) {\r\n        this.addPathToRecord(ResType.Load, bundleName, paths);\r\n        oops.res.load(bundleName, paths, type, onProgress, onComplete);\r\n    }\r\n\r\n    /** 加载文件名中资源 */\r\n    loadDir<T extends Asset>(bundleName: string, dir: string, type: AssetType<T> | null, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T[]> | null): void;\r\n    loadDir<T extends Asset>(bundleName: string, dir: string, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T[]> | null): void;\r\n    loadDir<T extends Asset>(bundleName: string, dir: string, onComplete?: CompleteCallback<T[]> | null): void;\r\n    loadDir<T extends Asset>(bundleName: string, dir: string, type: AssetType<T> | null, onComplete?: CompleteCallback<T[]> | null): void;\r\n    loadDir<T extends Asset>(dir: string, type: AssetType<T> | null, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T[]> | null): void;\r\n    loadDir<T extends Asset>(dir: string, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T[]> | null): void;\r\n    loadDir<T extends Asset>(dir: string, onComplete?: CompleteCallback<T[]> | null): void;\r\n    loadDir<T extends Asset>(dir: string, type: AssetType<T> | null, onComplete?: CompleteCallback<T[]> | null): void;\r\n    loadDir<T extends Asset>(\r\n        bundleName: string,\r\n        dir?: string | AssetType<T> | ProgressCallback | CompleteCallback | null,\r\n        type?: AssetType<T> | ProgressCallback | CompleteCallback | null,\r\n        onProgress?: ProgressCallback | CompleteCallback | null,\r\n        onComplete?: CompleteCallback | null,\r\n    ) {\r\n        let realDir: string;\r\n        let realBundle: string;\r\n        if (typeof dir === \"string\") {\r\n            realDir = dir;\r\n            realBundle = bundleName;\r\n        }\r\n        else {\r\n            realDir = bundleName;\r\n            realBundle = oops.res.defaultBundleName;\r\n        }\r\n\r\n        this.addPathToRecord(ResType.LoadDir, realBundle, realDir);\r\n        oops.res.loadDir(bundleName, dir, type, onProgress, onComplete);\r\n    }\r\n\r\n    /** 释放一个资源 */\r\n    release() {\r\n        if (this.resPaths) {\r\n            const rps = this.resPaths.get(ResType.Load);\r\n            if (rps) {\r\n                rps.forEach((value: ResRecord) => {\r\n                    oops.res.release(value.path, value.bundle);\r\n                });\r\n                rps.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    /** 释放一个文件夹的资源 */\r\n    releaseDir() {\r\n        if (this.resPaths) {\r\n            const rps = this.resPaths.get(ResType.LoadDir);\r\n            if (rps) {\r\n                rps.forEach((value: ResRecord) => {\r\n                    oops.res.releaseDir(value.path, value.bundle);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /** 释放音效资源 */\r\n    releaseAudioEffect() {\r\n        if (this.resPaths) {\r\n            const rps = this.resPaths.get(ResType.Audio);\r\n            if (rps) {\r\n                rps.forEach((value: ResRecord) => {\r\n                    oops.audio.releaseEffect(value.path, value.bundle);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    //#region 音频播放管理\r\n    /**\r\n     * 播放背景音乐（不受自动释放资源管理）\r\n     * @param url           资源地址\r\n     * @param callback      资源加载完成回调\r\n     * @param bundleName    资源包名\r\n     */\r\n    playMusic(url: string, callback?: Function, bundleName?: string) {\r\n        oops.audio.playMusic(url, callback, bundleName);\r\n    }\r\n\r\n    /**\r\n     * 循环播放背景音乐（不受自动释放资源管理）\r\n     * @param url           资源地址\r\n     * @param bundleName    资源包名\r\n     */\r\n    playMusicLoop(url: string, bundleName?: string) {\r\n        oops.audio.stopMusic();\r\n        oops.audio.playMusicLoop(url, bundleName);\r\n    }\r\n\r\n    /**\r\n     * 播放音效\r\n     * @param url           资源地址\r\n     * @param callback      资源加载完成回调\r\n     * @param bundleName    资源包名\r\n     */\r\n    playEffect(url: string, callback?: Function, bundleName?: string) {\r\n        if (bundleName == null) bundleName = oops.res.defaultBundleName;\r\n        this.addPathToRecord(ResType.Audio, bundleName, url);\r\n        oops.audio.playEffect(url, callback, bundleName);\r\n    }\r\n    //#endregion\r\n\r\n    //#region 游戏逻辑事件\r\n    /** \r\n     * 批量设置当前界面按钮事件\r\n     * @example\r\n     * 注：按钮节点Label1、Label2必须绑定UIButton等类型的按钮组件才会生效，方法名必须与节点名一致\r\n     * this.setButton();\r\n     * \r\n     * Label1(event: EventTouch) { console.log(event.target.name); }\r\n     * Label2(event: EventTouch) { console.log(event.target.name); }\r\n     */\r\n    protected setButton() {\r\n        // 自定义按钮批量绑定触摸事件\r\n        this.node.on(Node.EventType.TOUCH_END, (event: EventTouch) => {\r\n            const self: any = this;\r\n            const func = self[event.target.name];\r\n            if (func) {\r\n                func.call(this, event);\r\n            }\r\n            // 不触发界面根节点触摸事件、不触发长按钮组件的触摸事件\r\n            // else if (event.target != this.node && event.target.getComponent(ButtonTouchLong) == null) {\r\n            //     console.warn(`名为【${event.target.name}】的按钮事件方法不存在`);\r\n            // }\r\n        }, this);\r\n\r\n        // Cocos Creator Button组件批量绑定触摸事件（使用UIButton支持放连点功能）\r\n        const regex = /<([^>]+)>/;\r\n        const buttons = this.node.getComponentsInChildren<Button>(Button);\r\n        buttons.forEach((b: Button) => {\r\n            const node = b.node;\r\n            const self: any = this;\r\n            const func = self[node.name];\r\n            if (func) {\r\n                const event = new EventHandler();\r\n                event.target = this.node;\r\n                event.handler = b.node.name;\r\n                event.component = this.name.match(regex)![1];\r\n                b.clickEvents.push(event);\r\n            }\r\n            // else {\r\n            //     console.warn(`名为【${node.name}】的按钮事件方法不存在`);\r\n            // }\r\n        });\r\n    }\r\n\r\n    /** \r\n     * 批量设置全局事件 \r\n     * @example\r\n     *  this.setEvent(\"onGlobal\");\r\n     *  this.dispatchEvent(\"onGlobal\", \"全局事件\");\r\n     * \r\n     *  onGlobal(event: string, args: any) { console.log(args) };\r\n     */\r\n    protected setEvent(...args: string[]) {\r\n        const self: any = this;\r\n        for (const name of args) {\r\n            const func = self[name];\r\n            if (func)\r\n                this.on(name, func, this);\r\n            else\r\n                console.error(`名为【${name}】的全局事方法不存在`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 键盘事件开关\r\n     * @param on 打开键盘事件为true\r\n     */\r\n    setKeyboard(on: boolean) {\r\n        if (on) {\r\n            input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n            input.on(Input.EventType.KEY_UP, this.onKeyUp, this);\r\n            input.on(Input.EventType.KEY_PRESSING, this.onKeyPressing, this);\r\n        }\r\n        else {\r\n            input.off(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n            input.off(Input.EventType.KEY_UP, this.onKeyUp, this);\r\n            input.off(Input.EventType.KEY_PRESSING, this.onKeyPressing, this);\r\n        }\r\n    }\r\n\r\n    /** 键按下 */\r\n    protected onKeyDown(event: EventKeyboard) { }\r\n\r\n    /** 键放开 */\r\n    protected onKeyUp(event: EventKeyboard) { }\r\n\r\n    /** 键长按 */\r\n    protected onKeyPressing(event: EventKeyboard) { }\r\n\r\n    /** 监听游戏从后台进入事件 */\r\n    protected setGameShow() {\r\n        this.on(EventMessage.GAME_SHOW, this.onGameShow, this);\r\n    }\r\n\r\n    /** 监听游戏切到后台事件 */\r\n    protected setGameHide() {\r\n        this.on(EventMessage.GAME_HIDE, this.onGameHide, this);\r\n    }\r\n\r\n    /** 监听游戏画笔尺寸变化事件 */\r\n    protected setGameResize() {\r\n        this.on(EventMessage.GAME_RESIZE, this.onGameResize, this);\r\n    }\r\n\r\n    /** 监听游戏全屏事件 */\r\n    protected setGameFullScreen() {\r\n        this.on(EventMessage.GAME_FULL_SCREEN, this.onGameFullScreen, this);\r\n    }\r\n\r\n    /** 监听游戏旋转屏幕事件 */\r\n    protected setGameOrientation() {\r\n        this.on(EventMessage.GAME_ORIENTATION, this.onGameOrientation, this);\r\n    }\r\n\r\n    /** 游戏从后台进入事件回调 */\r\n    protected onGameShow(): void { }\r\n\r\n    /** 游戏切到后台事件回调 */\r\n    protected onGameHide(): void { }\r\n\r\n    /** 游戏画笔尺寸变化事件回调 */\r\n    protected onGameResize(): void { }\r\n\r\n    /** 游戏全屏事件回调 */\r\n    protected onGameFullScreen(): void { }\r\n\r\n    /** 游戏旋转屏幕事件回调 */\r\n    protected onGameOrientation(): void { }\r\n    //#endregion\r\n\r\n    protected onDestroy() {\r\n        // 释放消息对象\r\n        if (this._event) {\r\n            this._event.destroy();\r\n            this._event = null;\r\n        }\r\n\r\n        // 节点引用数据清除\r\n        if (this.nodes) {\r\n            this.nodes.clear();\r\n            this.nodes = null!;\r\n        }\r\n\r\n        // 自动释放资源\r\n        if (this.resPaths) {\r\n            this.releaseAudioEffect();\r\n            this.release();\r\n            this.releaseDir();\r\n            this.resPaths.clear();\r\n            this.resPaths = null!;\r\n        }\r\n    }\r\n}"]}