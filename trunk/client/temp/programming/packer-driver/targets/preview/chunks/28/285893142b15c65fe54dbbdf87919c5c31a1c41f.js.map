{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/assets/scripts/tongame/payment/PaymentComponent.ts"],"names":["_decorator","Component","Label","oops","UIID","UtilMgr","TonGameMgr","GameEvent","VirtualGridList","TablePay","ProtocolMgr","PaymentMgr","ccclass","property","PaymentComponent","_dataList","_tsPay","onAdded","params","titleLabel","string","language","getLangByID","yueLabel","carrotCoinLabel","CarrotCoin","toString","shopItemList","showShopList","GetPaymentData","message","on","UpdateCarrotCoin","onUpdateData","onDestroy","off","event","args","updateCarrotCoin","key","hasOwnProperty","value","left","init","ID","item","price","carrotcoin","gift","strength","paytype","imageUrl","name","discountdesc1","discountdesc2","push","initGridList","gridList","clearList","paddingTop","paddingBottom","spacingX","spacingY","columnNum","useVirtualLayout","emptyTip","cacheImage","registerSelectOneItemEventHandler","_onSelectOneItem","appendItemsToDisplayList","data","console","log","completeBuy","ret","gui","waitClose","isSucc","res","result","Type","paramas","url","webUrl","open","PaymentWebview","modifyShopItem","GoodID","LeftChange","refreshGridList","getShopItem","PaymentTips","dataBuy","userID","UserId","goodID","param","JSON","stringify","sendChargeBuy","waitOpen","onClose","PlaySoundEffect","remove","PaymentUI"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Sprite, Label, ScrollView, instantiate, UITransform, Prefab, Vec3 } from 'cc';\r\nimport { oops } from \"../../../../extensions/oops-plugin-framework/assets/core/Oops\";\r\nimport { UIID } from \"../../framework/common/config/GameUIConfig\";\r\nimport { UtilMgr } from \"../manager/UtilManager\";\r\nimport { TonGameMgr } from \"../manager/TonGameManager\";\r\nimport { GameEvent } from \"../../framework/common/config/GameEvent\";\r\nimport { VirtualGridList } from \"../../../resources/libs/virtual_grid_list/virtual_grid_list\";\r\n\r\nimport { TablePay } from \"../../framework/common/table/TablePay\";\r\nimport { ProtocolMgr } from \"../manager/ProtocolManager\";\r\nimport { HttpReturn } from \"../../../../extensions/oops-plugin-framework/assets/libs/network/HttpRequest\";\r\n\r\nimport { PaymentMgr, DataItem } from \"./PaymentManager\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n\r\n@ccclass('PaymentComponent')\r\nexport class PaymentComponent extends Component {\r\n\r\n    @property(Label)\r\n    titleLabel: Label = null;\r\n\r\n    @property(Label)\r\n    yueLabel: Label = null;\r\n\r\n    @property(Label)\r\n    carrotCoinLabel: Label = null;\r\n\r\n    @property(VirtualGridList)\r\n    protected gridList: VirtualGridList = null;\r\n\r\n\r\n    private _dataList: any[] = [];\r\n    private _tsPay = new TablePay();\r\n\r\n    onAdded(params: any): boolean {\r\n        this.titleLabel.string = oops.language.getLangByID(\"stringres_105\");\r\n        this.yueLabel.string = oops.language.getLangByID(\"stringres_165\");\r\n        this.carrotCoinLabel.string = TonGameMgr.CarrotCoin.toString();\r\n\r\n        if (PaymentMgr.shopItemList)\r\n        {\r\n            this.showShopList();\r\n            PaymentMgr.GetPaymentData();\r\n        }\r\n        else\r\n        {\r\n            PaymentMgr.GetPaymentData(() => {\r\n                this.showShopList();\r\n            });\r\n        }\r\n        oops.message.on(GameEvent.UpdateCarrotCoin, this.onUpdateData, this);\r\n        return true;\r\n    }\r\n\r\n    onDestroy() {\r\n        oops.message.off(GameEvent.UpdateCarrotCoin, this.onUpdateData, this);\r\n    }\r\n\r\n    private onUpdateData(event: string, args: any) {\r\n        switch (event) {\r\n            case GameEvent.UpdateCarrotCoin:\r\n                this.updateCarrotCoin();\r\n                break;\r\n        }\r\n    }\r\n\r\n    private updateCarrotCoin()\r\n    {\r\n        this.carrotCoinLabel.string = TonGameMgr.CarrotCoin.toString();\r\n    }\r\n    \r\n    private showShopList()\r\n    {\r\n        this._dataList = [];\r\n        for (const key in PaymentMgr.shopItemList) {\r\n            if (PaymentMgr.shopItemList.hasOwnProperty(key)) {\r\n                let value = PaymentMgr.shopItemList[key];\r\n                if (value.left > 0)\r\n                {\r\n                    this._tsPay.init(value.ID);\r\n                    const item: DataItem = {\r\n                        price: value.price,\r\n                        carrotcoin: value.carrotcoin,\r\n                        gift: value.gift,\r\n                        strength : value.strength,\r\n                        paytype: value.paytype,\r\n                        left: value.left,\r\n                        imageUrl: value.imageUrl,\r\n                        ID: value.ID,\r\n                        name: this._tsPay.name,\r\n                        discountdesc1 : this._tsPay.discountdesc1,\r\n                        discountdesc2 : this._tsPay.discountdesc2\r\n                    }\r\n                    this._dataList.push(item);\r\n                }\r\n            }\r\n        }\r\n        this.initGridList();\r\n    }\r\n    initGridList() {\r\n        /*  paddingTop: 列表距离上边缘距离 默认为0\r\n        paddingBottom: 列表距离下边缘距离 默认为0\r\n        spacingX: 列间距 默认为3\r\n        spacingY: 行间距 默认为3\r\n        columnNum: 列数 默认为0，自动适配容器宽度\r\n        useVirtualLayout: 是否启用虚拟列表 默认为true\r\n        emptyTip: 没有数据显示提示\r\n        cacheImage: 是否缓存列表中加载过的图片，控件回收后，图片缓存将被全部释放。\r\n     */\r\n        if (this.gridList) {\r\n            this.gridList.clearList();\r\n            this.gridList.initGridList({\r\n                paddingTop: 10,\r\n                paddingBottom: 10,\r\n                spacingX: 10,\r\n                spacingY: 5,\r\n                columnNum: 2,\r\n                useVirtualLayout: true,\r\n                emptyTip: '',\r\n                cacheImage: true\r\n            });\r\n            this.gridList.registerSelectOneItemEventHandler(this._onSelectOneItem, this);\r\n\r\n            this.gridList.appendItemsToDisplayList(this._dataList);\r\n        }\r\n    }\r\n\r\n    _onSelectOneItem(data: any) {\r\n        console.log('_onSelectOneItem');\r\n        var completeBuy = (ret: HttpReturn) => {\r\n            oops.gui.waitClose();\r\n            if (ret.isSucc && ret.res.result)\r\n            {//下单成功\r\n                if (ret.res.Type == \"Need_To_Pay\")\r\n                {\r\n                    let paramas: any = {};\r\n                    paramas.url = ret.res.webUrl;\r\n                    oops.gui.open(UIID.PaymentWebview, paramas);\r\n                    //TelegramWebApp.Instance.openTelegramLink(ret.res.webUrl);\r\n                    /*\r\n                    if (!TelegramWebApp.Instance.openLink(ret.res.webUrl, { \"try_instant_view\": true }))\r\n                    {\r\n                        let paramas: any = {};\r\n                        paramas.url = ret.res.webUrl;\r\n                        oops.gui.open(UIID.PaymentWebview, paramas);\r\n                    }\r\n                        */\r\n                }\r\n                else if (ret.res.Type == \"Charge_Success\")\r\n                {\r\n                    if (PaymentMgr.modifyShopItem(ret.res.GoodID, ret.res.LeftChange))\r\n                    {\r\n                        this.refreshGridList();\r\n                    }\r\n                    let paramas: any = {};\r\n                    paramas.item = PaymentMgr.getShopItem(ret.res.GoodID);\r\n                    oops.gui.open(UIID.PaymentTips, paramas);\r\n                }\r\n            }\r\n        }\r\n\r\n        const dataBuy: { [key: string]: any } = {};\r\n        dataBuy.userID = TonGameMgr.UserId;\r\n        dataBuy.goodID = data.ID;\r\n\r\n        const param = JSON.stringify(dataBuy);\r\n        ProtocolMgr.sendChargeBuy(completeBuy, param);\r\n        oops.gui.waitOpen();\r\n    }\r\n    \r\n    public refreshGridList() {\r\n        this.gridList.clearList();\r\n        this.showShopList();\r\n    }\r\n\r\n    public onClose() {\r\n        UtilMgr.PlaySoundEffect(19);\r\n        oops.gui.remove(UIID.PaymentUI);\r\n    }\r\n}\r\n\r\n\r\n"]}