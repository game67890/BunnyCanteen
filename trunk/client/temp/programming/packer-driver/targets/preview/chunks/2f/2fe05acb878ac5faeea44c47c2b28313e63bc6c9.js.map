{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/extensions/oops-plugin-framework/assets/core/gui/layer/DelegateComponent.ts"],"names":["Component","_decorator","oops","ccclass","EventOnAdded","EventOnBeforeRemove","EventOnRemoved","DelegateComponent","vp","onCloseWindow","add","Promise","resolve","reject","i","node","components","length","component","func","call","params","callbacks","onAdded","remove","isDestroy","valid","applyComponentsFunction","onBeforeRemove","onBeforeRemoveNext","bind","removed","onRemoved","destroy","res","release","config","prefab","removeFromParent","onDestroy","funName"],"mappings":"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","sourcesContent":["/*\r\n * @Author: dgflash\r\n * @Date: 2022-09-01 18:00:28\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2023-01-09 11:55:03\r\n */\r\nimport { Component, Node, _decorator } from \"cc\";\r\nimport { oops } from \"../../Oops\";\r\nimport { ViewParams } from \"./Defines\";\r\n\r\nconst { ccclass } = _decorator;\r\n\r\nconst EventOnAdded: string = \"onAdded\";\r\nconst EventOnBeforeRemove: string = \"onBeforeRemove\";\r\nconst EventOnRemoved: string = \"onRemoved\";\r\n\r\n/** 窗口事件触发组件 */\r\n@ccclass('DelegateComponent')\r\nexport class DelegateComponent extends Component {\r\n    /** 视图参数 */\r\n    vp: ViewParams = null!;\r\n    /** 界面关闭回调 - 包括关闭动画播放完（辅助框架内存业务流程使用） */\r\n    onCloseWindow: Function = null!;\r\n\r\n    /** 窗口添加 */\r\n    add(): Promise<boolean> {\r\n        return new Promise(async (resolve, reject) => {\r\n            // 触发窗口组件上添加到父节点后的事件\r\n            for (let i = 0; i < this.node.components.length; i++) {\r\n                const component: any = this.node.components[i];\r\n                const func = component[EventOnAdded];\r\n                if (func) {\r\n                    if (await func.call(component, this.vp.params) == false) {\r\n                        resolve(false);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 触发外部窗口显示前的事件（辅助实现自定义动画逻辑）\r\n            if (typeof this.vp.callbacks.onAdded === \"function\") {\r\n                this.vp.callbacks.onAdded(this.node, this.vp.params);\r\n            }\r\n\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    /** 删除节点，该方法只能调用一次，将会触发onBeforeRemoved回调 */\r\n    remove(isDestroy?: boolean) {\r\n        if (this.vp.valid) {\r\n            // 触发窗口移除舞台之前事件\r\n            this.applyComponentsFunction(this.node, EventOnBeforeRemove, this.vp.params);\r\n\r\n            //  通知外部对象窗口组件上移除之前的事件（关闭窗口前的关闭动画处理）\r\n            if (typeof this.vp.callbacks.onBeforeRemove === \"function\") {\r\n                this.vp.callbacks.onBeforeRemove(\r\n                    this.node,\r\n                    this.onBeforeRemoveNext.bind(this, isDestroy));\r\n            }\r\n            else {\r\n                this.removed(this.vp, isDestroy);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** 窗口关闭前动画处理完后的回调方法，主要用于释放资源 */\r\n    private onBeforeRemoveNext(isDestroy?: boolean) {\r\n        this.removed(this.vp, isDestroy);\r\n    }\r\n\r\n    /** 窗口组件中触发移除事件与释放窗口对象 */\r\n    private removed(vp: ViewParams, isDestroy?: boolean) {\r\n        vp.valid = false;\r\n\r\n        if (vp.callbacks && typeof vp.callbacks.onRemoved === \"function\") {\r\n            vp.callbacks.onRemoved(this.node, vp.params);\r\n        }\r\n\r\n        // 界面移除舞台事件\r\n        this.onCloseWindow && this.onCloseWindow(vp);\r\n\r\n        if (isDestroy) {\r\n            // 释放界面显示对象\r\n            this.node.destroy();\r\n\r\n            // 释放界面相关资源\r\n            oops.res.release(vp.config.prefab);\r\n\r\n            // oops.log.logView(`【界面管理】释放【${vp.config.prefab}】界面资源`);\r\n        }\r\n        else {\r\n            this.node.removeFromParent();\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        // 触发窗口组件上窗口移除之后的事件\r\n        this.applyComponentsFunction(this.node, EventOnRemoved, this.vp.params);\r\n        this.vp = null!;\r\n    }\r\n\r\n    protected applyComponentsFunction(node: Node, funName: string, params: any) {\r\n        for (let i = 0; i < node.components.length; i++) {\r\n            const component: any = node.components[i];\r\n            const func = component[funName];\r\n            if (func) {\r\n                func.call(component, params);\r\n            }\r\n        }\r\n    }\r\n}"]}