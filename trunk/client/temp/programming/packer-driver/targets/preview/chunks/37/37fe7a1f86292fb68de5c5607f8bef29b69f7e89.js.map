{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/extensions/oops-plugin-framework/assets/core/common/audio/AudioEffect.ts"],"names":["AudioClip","AudioSource","_decorator","error","oops","ccclass","AudioEffect","effects","Map","_progress","progress","duration","currentTime","value","load","url","volume","callback","bundleName","res","defaultBundleName","set","uuid","source","ac","playOneShot","console","log","key","has","err","data","bundle","path","rr","get","releaseAll","release","clear","undefined","delete","decRef"],"mappings":"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","sourcesContent":["/*\r\n * @Author: dgflash\r\n * @Date: 2022-09-01 18:00:28\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2022-09-02 10:22:36\r\n */\r\nimport { AudioClip, AudioSource, _decorator, error } from 'cc';\r\nimport { oops } from '../../Oops';\r\nconst { ccclass } = _decorator;\r\n\r\n/**\r\n * 注：用playOneShot播放的音乐效果，在播放期间暂时没办法即时关闭音乐\r\n */\r\n\r\n/** 资源加载记录 */\r\ninterface ResRecord {\r\n    source: boolean;\r\n    ac: AudioClip,\r\n    bundle?: string,\r\n    path?: string\r\n}\r\n\r\n\r\n/** 游戏音效 */\r\n@ccclass('AudioEffect')\r\nexport class AudioEffect extends AudioSource {\r\n    private effects: Map<string, ResRecord> = new Map<string, ResRecord>();\r\n\r\n    private _progress: number = 0;\r\n    /** 获取音乐播放进度 */\r\n    get progress(): number {\r\n        if (this.duration > 0)\r\n            this._progress = this.currentTime / this.duration;\r\n        return this._progress;\r\n    }\r\n    /**\r\n     * 设置音乐当前播放进度\r\n     * @param value     进度百分比0到1之间\r\n     */\r\n    set progress(value: number) {\r\n        this._progress = value;\r\n        this.currentTime = value * this.duration;\r\n    }\r\n\r\n    /**\r\n     * 加载音效并播放\r\n     * @param url           音效资源地址\r\n     * @param callback      资源加载完成并开始播放回调\r\n     * @param bundleName    资源包名\r\n     */\r\n    load(url: string | AudioClip, volume:number, callback?: Function, bundleName?: string) {\r\n        if (bundleName == null) bundleName = oops.res.defaultBundleName;\r\n        this.volume = volume;\r\n\r\n        // 资源播放音乐对象\r\n        if (url instanceof AudioClip) {\r\n            this.effects.set(url.uuid, { source: true, ac: url });\r\n            this.playOneShot(url, this.volume);\r\n            console.log(\"playeffect : \", url, \" \", this.volume);\r\n            callback && callback();\r\n        }\r\n        else {\r\n            const key = `${bundleName}:${url}`;\r\n            // 地址加载音乐资源后播放\r\n            if (!this.effects.has(key)) {\r\n                oops.res.load(bundleName, url, AudioClip, (err: Error | null, data: AudioClip) => {\r\n                    if (err) {\r\n                        error(err);\r\n                        return;\r\n                    }\r\n\r\n                    this.effects.set(key, { source: false, bundle: bundleName, path: url, ac: data });\r\n                    this.playOneShot(data, this.volume);\r\n                    console.log(\"playeffect : \", url, \" \", this.volume);\r\n                    callback && callback();\r\n                });\r\n            }\r\n            // 播放缓存中音效\r\n            else {\r\n                const rr = this.effects.get(key)!;\r\n                this.playOneShot(rr.ac, this.volume);\r\n                console.log(\"playeffect : \", url, \" \", this.volume);\r\n                callback && callback();\r\n            }\r\n        }\r\n    }\r\n\r\n    /** 释放所有已使用过的音效资源 */\r\n    releaseAll() {\r\n        for (let key in this.effects) {\r\n            const rr = this.effects.get(key)!;\r\n            if (rr.source) {\r\n                this.release(rr.ac);\r\n            }\r\n            else {\r\n                this.release(rr.path!, rr.bundle!);\r\n            }\r\n        }\r\n        this.effects.clear();\r\n    }\r\n\r\n    /**\r\n     * 释放指定地址音效资源\r\n     * @param url           音效资源地址\r\n     * @param bundleName    资源所在包名\r\n     */\r\n    release(url: string | AudioClip, bundleName?: string) {\r\n        if (bundleName == null) bundleName = oops.res.defaultBundleName;\r\n\r\n        let ac: AudioClip | undefined = undefined;\r\n        if (url instanceof AudioClip) {\r\n            ac = url;\r\n            if (this.effects.has(ac.uuid)) {\r\n                this.effects.delete(ac.uuid);\r\n                ac.decRef();\r\n            }\r\n        }\r\n        else {\r\n            const key = `${bundleName}:${url}`;\r\n            const rr = this.effects.get(key);\r\n            if (rr) {\r\n                this.effects.delete(key);\r\n                oops.res.release(rr.path!, rr.bundle!);\r\n            }\r\n        }\r\n    }\r\n}"]}