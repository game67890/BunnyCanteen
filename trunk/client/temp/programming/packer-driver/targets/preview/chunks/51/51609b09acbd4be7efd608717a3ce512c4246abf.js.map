{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/extensions/oops-plugin-framework/assets/core/gui/GUI.ts"],"names":["Component","ResolutionPolicy","UITransform","_decorator","math","screen","view","oops","ccclass","GUI","portrait","portraitDrz","landscapeDrz","transform","onLoad","init","getComponent","getDesignResolutionSize","width","height","Size","resize","dr","s","windowSize","rw","rh","finalW","finalH","setDesignResolutionSize","EXACT_FIT","log","logView"],"mappings":"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","sourcesContent":["/*\r\n * @Author: dgflash\r\n * @Date: 2021-07-03 16:13:17\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2023-01-19 14:52:40\r\n */\r\nimport { Component, ResolutionPolicy, UITransform, _decorator, math, screen, view } from \"cc\";\r\nimport { oops } from \"../Oops\";\r\n\r\nconst { ccclass } = _decorator;\r\n\r\n/** 游戏界面屏幕自适应管理 */\r\n@ccclass('GUI')\r\nexport class GUI extends Component {\r\n    /** 是否为竖屏显示 */\r\n    portrait!: boolean;\r\n\r\n    /** 竖屏设计尺寸 */\r\n    private portraitDrz: math.Size = null!;\r\n    /** 横屏设计尺寸 */\r\n    private landscapeDrz: math.Size = null!;\r\n    /** 界面层矩形信息组件 */\r\n    private transform: UITransform = null!;\r\n\r\n    onLoad() {\r\n        this.init();\r\n    }\r\n\r\n    /** 初始化引擎 */\r\n    protected init() {\r\n        this.transform = this.getComponent(UITransform)!;\r\n\r\n        if (view.getDesignResolutionSize().width > view.getDesignResolutionSize().height) {\r\n            this.landscapeDrz = view.getDesignResolutionSize();\r\n            this.portraitDrz = new math.Size(this.landscapeDrz.height, this.landscapeDrz.width);\r\n        }\r\n        else {\r\n            this.portraitDrz = view.getDesignResolutionSize();\r\n            this.landscapeDrz = new math.Size(this.portraitDrz.height, this.portraitDrz.width);\r\n        }\r\n\r\n        this.resize();\r\n    }\r\n\r\n    /** 游戏画布尺寸变化 */\r\n    resize() {\r\n        let dr;\r\n        if (view.getDesignResolutionSize().width > view.getDesignResolutionSize().height) {\r\n            dr = this.landscapeDrz;\r\n        }\r\n        else {\r\n            dr = this.portraitDrz;\r\n        }\r\n\r\n        const s = screen.windowSize;\r\n        const rw = s.width;\r\n        const rh = s.height;\r\n        let finalW = rw;\r\n        let finalH = rh;\r\n\r\n        if ((rw / rh) > (dr.width / dr.height)) {\r\n            // 如果更长，则用定高\r\n            finalH = dr.height;\r\n            finalW = finalH * rw / rh;\r\n            this.portrait = false;\r\n        }\r\n        else {\r\n            // 如果更短，则用定宽\r\n            finalW = dr.width;\r\n            finalH = finalW * rh / rw;\r\n            this.portrait = true;\r\n        }\r\n\r\n        // 通过设置设计分辨率和匹配模式来进行游戏画面的屏幕适配\r\n        view.setDesignResolutionSize(finalW, finalH, ResolutionPolicy.EXACT_FIT);\r\n        this.transform.width = finalW;\r\n        this.transform.height = finalH;\r\n\r\n        oops.log.logView(dr, \"设计尺寸\");\r\n        oops.log.logView(s, \"屏幕尺寸\");\r\n    }\r\n}"]}