{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/assets/resources/libs/utils/binding/binding.ts"],"names":["Binding","log","native","Platform","AUTO_INCREASE_ID","ERROR_CODE_METHOD_NOT_DEFINED","ERROR_CODE_PARAMS_ERROR","ERROR_CODE_TIMEOUT","ERROR_CODE_UNKNOWN","DEFAULT_OPTIONS","timeout","hasCallback","onProgress","undefined","_options","Instance","instance","withOptions","options","callNativeMethod","methodName","args","oriProto","Object","getPrototypeOf","temp","assign","create","console","JSON","stringify","hasProgress","Promise","resolve","reject","cbName","timeoutId","cbProgressName","Date","getTime","setTimeout","window","clearCallback","code","msg","result","errCode","eCode","data","progressData","isNative","isAndroid","resultCode","reflection","callStaticMethod","isIOS","retId","clearTimeout"],"mappings":"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","sourcesContent":["import {log, native} from \"cc\";\nimport Platform from \"../platform\";\n\ninterface Options {\n    /**\n     * 接口调用超时时间,单位秒\n     */\n    timeout?: number;\n    hasCallback?: boolean;\n    onProgress?: Function;\n}\n\nlet AUTO_INCREASE_ID = 0;\n\nconst ERROR_CODE_METHOD_NOT_DEFINED = -1;\nconst ERROR_CODE_PARAMS_ERROR = -2;\nconst ERROR_CODE_TIMEOUT = -3;\nconst ERROR_CODE_UNKNOWN = -999;\n\nexport default class Binding {\n    private static instance: Binding;\n\n    public static get Instance() {\n        if (!this.instance) {\n            this.instance = new Binding();\n        }\n        return this.instance;\n    }\n\n    public static withOptions(options: Options): Binding {\n        return this.Instance.withOptions(options);\n    }\n\n    public static callNativeMethod(methodName: string, args?: Record<string, string | number | boolean>): Promise<any> {\n        return this.Instance.callNativeMethod(methodName, args);\n    }\n\n    private DEFAULT_OPTIONS: Options = {timeout: 60, hasCallback: true, onProgress: undefined};\n    private _options: Options = this.DEFAULT_OPTIONS;\n\n\n    /**\n     * 创建一个临时请求native方法的可选项，包含：\n     * 超时时间设置默认60秒，过程回调（若有)\n     * @param options Options,\n     */\n    public withOptions(options: Options): Binding {\n        const oriProto = Object.getPrototypeOf(this);\n        const temp = Object.assign(Object.create(oriProto), this);\n        temp._options = Object.assign({}, this.DEFAULT_OPTIONS, options);\n        return temp;\n    }\n\n    public callNativeMethod(methodName: string, args?: Record<string, string | number | boolean>): Promise<any> {\n        console.log(`options:${JSON.stringify(this._options)}, args:${args}`);\n        const hasCallback = this._options.hasCallback;\n        const hasProgress = this._options.onProgress;\n        return new Promise((resolve, reject) => {\n            let cbName = '';\n            let timeoutId: any;\n            let cbProgressName = '';\n            if (hasCallback || hasProgress) {\n                // eslint-disable-next-line no-plusplus\n                cbName = `_CB${new Date().getTime()}_${AUTO_INCREASE_ID++}`;\n                cbProgressName = `${cbName}_p`;\n                timeoutId = setTimeout(() => {\n                    if (window[cbName]) {\n                        this.clearCallback(cbName, -1, cbProgressName);\n                        reject({code: ERROR_CODE_TIMEOUT, msg: `delete cb name: ${cbName},because of timeout`});\n                    }\n                }, this._options.timeout * 1000);\n                window[cbName] = (result: any) => {\n                    console.log('result from native:', JSON.stringify(result));\n                    if (result) {\n                        const code = result.code;\n                        const msg = result.msg;\n                        const errCode = result.eCode;\n                        const data = result.data;\n                        if (code == 0) {\n                            resolve(data);\n                        } else {\n                            reject({code: errCode, msg: msg});\n                        }\n                    } else {\n                        reject({code: ERROR_CODE_UNKNOWN, msg: 'result is null'});\n                    }\n                    this.clearCallback(cbName, timeoutId, cbProgressName);\n                };\n\n                window[cbProgressName] = (progressData: any) => {\n                    log('invoke data', JSON.stringify(progressData));\n                    if (this._options.onProgress && progressData) {\n                        const code = progressData.code;\n                        const msg = progressData.msg;\n                        const errCode = progressData.eCode;\n                        const data = progressData.data;\n                        if (code == 0) {\n                            this._options.onProgress(data);\n                        } else {\n                            log(`progress error: ${code}, ${errCode},${msg}`);\n                        }\n                    }\n                };\n            }\n\n            if (Platform.isNative() && Platform.isAndroid()) {\n                const resultCode = native.reflection.callStaticMethod('utils/binding/Binding', 'execute', '(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I',\n                    methodName, typeof args === 'object' ? JSON.stringify(args) : '', cbName);\n                if (resultCode !== 0) {\n                    switch (resultCode) {\n                        case -1:\n                            reject({\n                                code: ERROR_CODE_METHOD_NOT_DEFINED,\n                                msg: `${methodName} not found on Android platform`\n                            });\n                            break;\n                        case -2:\n                            reject({code: ERROR_CODE_PARAMS_ERROR, msg: `error! invalid parameters`});\n                            break;\n                        default:\n                            reject({code: resultCode, msg: `error! result code=${resultCode}`});\n                            break;\n                    }\n                    if (hasCallback) {\n                        this.clearCallback(cbName, timeoutId, cbProgressName);\n                    }\n                }\n            } else if (Platform.isNative() && Platform.isIOS()) {\n                const retId = native.reflection.callStaticMethod('Binding', 'executeWithMethodName:args:callback:',\n                    methodName, typeof args === 'object' ? JSON.stringify(args) : '', cbName);\n            } else {\n                const msg = 'no implemented on this platform';\n                reject({code: ERROR_CODE_METHOD_NOT_DEFINED, msg: msg});\n                this.clearCallback(cbName, timeoutId, cbProgressName);\n            }\n        });\n    }\n\n    private clearCallback(cbName: string, timeoutId: number = -1, cbProgressName = '') {\n        if (cbProgressName && cbProgressName != '') {\n            console.log(`delete cbProgressName${cbName}`);\n            delete window[cbProgressName];\n        }\n        if (cbName && cbName != '') {\n            console.log(`delete cbName${cbName}`);\n            delete window[cbName];\n        }\n        if (timeoutId >= 0) {\n            console.log(`clearTimeout${cbName}`);\n            clearTimeout(timeoutId);\n        }\n    }\n}\n\n"]}