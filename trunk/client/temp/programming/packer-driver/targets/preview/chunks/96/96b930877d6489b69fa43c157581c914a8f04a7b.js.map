{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/assets/scripts/framework/common/ecs/position/MoveTo.ts"],"names":["MoveToSystem","Node","Vec3","Timer","Vec3Util","ecs","MoveToComp","register","Comp","node","velocity","zero","speed","target","ns","NodeSpace","LOCAL","offset","offsetVector","onComplete","onChange","reset","VariableMoveToComponent","timer","end","ComblockSystem","filter","allOf","entityEnter","e","add","entityRemove","remove","update","move","get","mtv","console","assert","WORLD","worldPosition","position","strictEquals","clone","start","sub","normalize","distance","call","exit","step","multiplyScalar","trans","mul","dt","translate"],"mappings":"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","sourcesContent":["/*\r\n * @Author: dgflash\r\n * @Date: 2021-08-11 16:41:12\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2023-01-19 15:27:24\r\n */\r\nimport { Node, Vec3 } from \"cc\";\r\nimport { Timer } from \"../../../../../../extensions/oops-plugin-framework/assets/core/common/timer/Timer\";\r\nimport { Vec3Util } from \"../../../../../../extensions/oops-plugin-framework/assets/core/utils/Vec3Util\";\r\nimport { ecs } from \"../../../../../../extensions/oops-plugin-framework/assets/libs/ecs/ECS\";\r\n\r\n/** 向目标移动，移动过程中目标位置变化会自动修正移动目标点，直到未修正前移动到目标点停止 */\r\n@ecs.register('MoveTo')\r\nexport class MoveToComp extends ecs.Comp {\r\n    /** 移动节点 */\r\n    node: Node = null!;\r\n    /** 移动方向 */\r\n    velocity: Vec3 = Vec3Util.zero;\r\n    /** 移动速度（每秒移动的像素距离） */\r\n    speed: number = 0;\r\n    /** 目标实体ECS编号、目标位置 */\r\n    target: Vec3 | Node | null = null;\r\n\r\n    /** 坐标标（默认本地坐标） */\r\n    ns: number = Node.NodeSpace.LOCAL;\r\n    /** 偏移距离 */\r\n    offset: number = 0;\r\n    /** 偏移向量 */\r\n    offsetVector: Vec3 | null = null;\r\n    /** 移动完成回调 */\r\n    onComplete: Function | null = null;\r\n    /** 距离变化时 */\r\n    onChange: Function | null = null;\r\n\r\n    reset() {\r\n        this.ns = Node.NodeSpace.LOCAL;\r\n        this.offset = 0;\r\n        this.target = null;\r\n        this.offsetVector = null;\r\n        this.onComplete = null;\r\n        this.onChange = null;\r\n    }\r\n}\r\n\r\n@ecs.register('VariableMoveTo')\r\nclass VariableMoveToComponent extends ecs.Comp {\r\n    /** 延时触发器 */\r\n    timer: Timer = new Timer();\r\n    /** 终点备份 */\r\n    end: Vec3 | null = null;\r\n    /** 目标位置 */\r\n    target!: Vec3;\r\n\r\n    reset() {\r\n        this.end = null;\r\n        this.timer.reset();\r\n    }\r\n}\r\n\r\n/** 跟踪移动到目标位置 */\r\nexport class MoveToSystem extends ecs.ComblockSystem<ecs.Entity> implements ecs.IEntityEnterSystem, ecs.IEntityRemoveSystem, ecs.ISystemUpdate {\r\n    filter(): ecs.IMatcher {\r\n        return ecs.allOf(MoveToComp);\r\n    }\r\n\r\n    entityEnter(e: ecs.Entity): void {\r\n        e.add(VariableMoveToComponent);\r\n    }\r\n\r\n    entityRemove(e: ecs.Entity): void {\r\n        e.remove(VariableMoveToComponent);\r\n    }\r\n\r\n    update(e: ecs.Entity) {\r\n        let move = e.get(MoveToComp);\r\n        let mtv = e.get(VariableMoveToComponent);\r\n        let end: Vec3;\r\n\r\n        console.assert(move.speed > 0, \"移动速度必须要大于零\");\r\n\r\n        if (move.target instanceof Node) {\r\n            end = move.ns == Node.NodeSpace.WORLD ? move.target.worldPosition : move.target.position;\r\n        }\r\n        else {\r\n            end = move.target as Vec3;\r\n        }\r\n\r\n        // 目标移动后，重计算移动方向与移动到目标点的速度\r\n        if (mtv.end == null || !mtv.end.strictEquals(end)) {\r\n            let target = end.clone();\r\n            if (move.offsetVector) {\r\n                target = target.add(move.offsetVector);           // 这里的问题\r\n            }\r\n\r\n            // 移动方向与移动数度\r\n            let start = move.ns == Node.NodeSpace.WORLD ? move.node.worldPosition : move.node.position;\r\n            move.velocity = Vec3Util.sub(target, start).normalize();\r\n\r\n            // 移动时间与目标偏位置计算\r\n            let distance = Vec3.distance(start, target) - move.offset;\r\n\r\n            move.onChange?.call(this);\r\n\r\n            if (distance - move.offset <= 0) {\r\n                this.exit(e);\r\n            }\r\n            else {\r\n                mtv.timer.step = distance / move.speed;\r\n                mtv.end = end.clone();\r\n                mtv.target = move.velocity.clone().multiplyScalar(distance).add(start);\r\n            }\r\n        }\r\n\r\n        if (move.speed > 0) {\r\n            let trans = Vec3Util.mul(move.velocity, move.speed * this.dt);\r\n            move.node.translate(trans, Node.NodeSpace.LOCAL);\r\n        }\r\n\r\n        // 移动完成事件\r\n        if (mtv.timer.update(this.dt)) {\r\n            if (move.ns == Node.NodeSpace.WORLD)\r\n                move.node.worldPosition = mtv.target;\r\n            else\r\n                move.node.position = mtv.target;\r\n\r\n            this.exit(e);\r\n        }\r\n    }\r\n\r\n    private exit(e: ecs.Entity) {\r\n        let move = e.get(MoveToComp);\r\n        move.onComplete?.call(this);\r\n        e.remove(VariableMoveToComponent);\r\n        e.remove(MoveToComp);\r\n    }\r\n}"]}