{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/extensions/oops-plugin-framework/assets/libs/gui/language/Language.ts"],"names":["LanguageManager","Logger","LanguageData","LanguagePack","_languages","_languagePack","_defaultLanguage","languages","default","lang","current","pack","isExist","indexOf","getNextLang","supportLangs","index","length","setLanguage","language","callback","toLowerCase","console","log","loadLanguageAssets","logConfig","oldLanguage","updateLanguage","releaseLanguageAssets","getLangByID","labId"],"mappings":"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","sourcesContent":["import {Logger} from \"../../../core/common/log/Logger\";\r\nimport {LanguageData} from \"./LanguageData\";\r\nimport {LanguagePack} from \"./LanguagePack\";\r\n\r\n/** 多语言管理器 */\r\nexport class LanguageManager {\r\n    private _languages: Array<string> = [\"zh\", \"en\", \"tr\"];      // 支持的语言\r\n    private _languagePack: LanguagePack = new LanguagePack();    // 语言包\r\n    private _defaultLanguage: string = \"zh\";                     // 默认语言\r\n\r\n    /** 支持的多种语言列表 */\r\n    get languages(): string[] {\r\n        return this._languages;\r\n    }\r\n    set languages(languages: Array<string>) {\r\n        this._languages = languages;\r\n    }\r\n\r\n    /** 设置的当前语言列表中没有配置时，使用默认语言 */\r\n    set default(lang: string) {\r\n        this._defaultLanguage = lang || \"zh\";\r\n    }\r\n\r\n    /** 获取当前语种 */\r\n    get current(): string {\r\n        return LanguageData.current;\r\n    }\r\n\r\n    /** 语言包 */\r\n    get pack(): LanguagePack {\r\n        return this._languagePack;\r\n    }\r\n\r\n    /**\r\n     * 是否存在指定语言\r\n     * @param lang  语言名\r\n     * @returns 存在返回true,则否false\r\n     */\r\n    isExist(lang: string): boolean {\r\n        return this.languages.indexOf(lang) > -1;\r\n    }\r\n\r\n    /** 获取下一个语种 */\r\n    getNextLang(): string {\r\n        let supportLangs = this.languages;\r\n        let index = supportLangs.indexOf(LanguageData.current);\r\n        return supportLangs[(index + 1) % supportLangs.length];\r\n    }\r\n\r\n    /**\r\n     * 改变语种，会自动下载对应的语种\r\n     * @param language 语言名\r\n     * @param callback 多语言资源数据加载完成回调\r\n     */\r\n    setLanguage(language: string, callback: (success: boolean) => void) {\r\n        if (language == null || language == \"\") {\r\n            language = this._defaultLanguage;\r\n        }\r\n        else {\r\n            language = language.toLowerCase();\r\n        }\r\n\r\n        let index = this.languages.indexOf(language);\r\n        if (index < 0) {\r\n            console.log(`当前不支持【${language}】语言，将自动切换到【${this._defaultLanguage}】语言`);\r\n            language = this._defaultLanguage;\r\n        }\r\n\r\n        if (language === LanguageData.current) {\r\n            callback(false);\r\n            return;\r\n        }\r\n\r\n        this.loadLanguageAssets(language, (lang: string) => {\r\n            Logger.logConfig(`当前语言为【${language}】`);\r\n            const oldLanguage = LanguageData.current;\r\n            LanguageData.current = language;\r\n            this._languagePack.updateLanguage(language);\r\n            this._languagePack.releaseLanguageAssets(oldLanguage);\r\n            callback(true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 根据data获取对应语种的字符\r\n     * @param labId \r\n     * @param arr \r\n     */\r\n    getLangByID(labId: string): string {\r\n        return LanguageData.getLangByID(labId);\r\n    }\r\n\r\n    /**\r\n     * 下载语言包素材资源\r\n     * 包括语言json配置和语言纹理包\r\n     * @param lang \r\n     * @param callback \r\n     */\r\n    loadLanguageAssets(lang: string, callback: Function) {\r\n        lang = lang.toLowerCase();\r\n        return this._languagePack.loadLanguageAssets(lang, callback);\r\n    }\r\n\r\n    /**\r\n     * 释放不需要的语言包资源\r\n     * @param lang \r\n     */\r\n    releaseLanguageAssets(lang: string) {\r\n        lang = lang.toLowerCase();\r\n        this._languagePack.releaseLanguageAssets(lang);\r\n    }\r\n}"]}