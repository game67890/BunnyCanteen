{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/extensions/oops-plugin-framework/assets/core/common/audio/AudioManager.ts"],"names":["AudioManager","Component","oops","AudioEffect","AudioMusic","LOCAL_STORE_KEY","music","effect","local_data","_volume_music","_volume_effect","_switch_music","_switch_effect","setMusicComplete","callback","onComplete","playMusic","url","bundleName","playOnAwake","load_1","then","playMusicLoop","stopMusic","playing","stop","console","log","progressMusic","progress","value","volumeMusic","volume","switchMusic","playEffect","load","playEffectLoop","loop","stopEffect","releaseEffect","release","volumeEffect","switchEffect","resumeAll","play","pauseAll","pause","stopAll","save","volume_music","volume_effect","switch_music","switch_effect","storage","set","getComponent","addComponent","getJson","setState","e","setStateDefault"],"mappings":"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","sourcesContent":["import {AudioClip, Component} from \"cc\";\r\nimport {oops} from \"../../Oops\";\r\nimport {AudioEffect} from \"./AudioEffect\";\r\nimport {AudioMusic} from \"./AudioMusic\";\r\n\r\nconst LOCAL_STORE_KEY = \"game_audio\";\r\n\r\n/**\r\n * 音频管理\r\n * @example\r\n // 模块功能通过 oops.audio 调用\r\n oops.audio.playMusic(\"audios/nocturne\");\r\n */\r\nexport class AudioManager extends Component {\r\n    /** 背景音乐管理对象 */\r\n    music: AudioMusic = null!;\r\n    /** 音效管理对象 */\r\n    effect: AudioEffect = null!;\r\n\r\n    /** 音乐管理状态数据 */\r\n    private local_data: any = {};\r\n    /** 背景音乐音量值 */\r\n    private _volume_music: number = 1;\r\n    /** 音效音量值 */\r\n    private _volume_effect: number = 1;\r\n    /** 背景音乐播放开关 */\r\n    private _switch_music: boolean = true;\r\n    /** 音效果播放开关 */\r\n    private _switch_effect: boolean = true;\r\n\r\n    /**\r\n     * 设置背景音乐播放完成回调\r\n     * @param callback 背景音乐播放完成回调\r\n     */\r\n    setMusicComplete(callback: Function | null = null) {\r\n        this.music.onComplete = callback;\r\n    }\r\n\r\n    /**\r\n     * 播放背景音乐\r\n     * @param url        资源地址\r\n     * @param callback   音乐播放完成事件\r\n     * @param bundleName 资源包名\r\n     */\r\n    playMusic(url: string, callback?: Function, bundleName?: string) {\r\n        if (this._switch_music) {\r\n            // this.music.loop = false;\r\n            this.music.playOnAwake = true;\r\n            // this.music.load(url, callback, bundleName).then();\r\n            this.music.load_1(url, false).then();\r\n        }\r\n    }\r\n\r\n    /** 循环播放背景音乐 */\r\n    playMusicLoop(url: string, bundleName?: string) {\r\n        if (this._switch_music) {\r\n            // this.music.loop = true;\r\n            this.music.playOnAwake = true;\r\n            // this.music.load(url, null!, bundleName).then();\r\n            this.music.load_1(url, true).then();\r\n        }\r\n    }\r\n\r\n    /** 停止背景音乐播放 */\r\n    stopMusic() {\r\n        if (this._switch_music && this.music.playing) {\r\n            this.music.stop();\r\n            console.log(\"stopmusic : \");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取背景音乐播放进度\r\n     */\r\n    get progressMusic(): number {\r\n        return this.music.progress;\r\n    }\r\n\r\n    /**\r\n     * 设置背景乐播放进度\r\n     * @param value     播放进度值\r\n     */\r\n    set progressMusic(value: number) {\r\n        this.music.progress = value;\r\n    }\r\n\r\n    /**\r\n     * 获取背景音乐音量\r\n     */\r\n    get volumeMusic(): number {\r\n        return this._volume_music;\r\n    }\r\n\r\n    /**\r\n     * 设置背景音乐音量\r\n     * @param value     音乐音量值\r\n     */\r\n    set volumeMusic(value: number) {\r\n        this._volume_music = value;\r\n        this.music.volume = value;\r\n    }\r\n\r\n    /**\r\n     * 获取背景音乐开关值\r\n     */\r\n    get switchMusic(): boolean {\r\n        return this._switch_music;\r\n    }\r\n\r\n    /**\r\n     * 设置背景音乐开关值\r\n     * @param value     开关值\r\n     */\r\n    set switchMusic(value: boolean) {\r\n        this._switch_music = value;\r\n\r\n        if (!value)\r\n            this.music.stop();\r\n    }\r\n\r\n    /**\r\n     * 播放音效\r\n     * @param url        资源地址\r\n     * @param callback   加载完成回调\r\n     * @param bundleName 资源包名\r\n     */\r\n    playEffect(url: string | AudioClip, volume:number, callback?: Function, bundleName?: string) {\r\n        if (this._switch_effect) {\r\n            this.effect.load(url, volume, callback, bundleName);\r\n        }\r\n    }\r\n\r\n    /** 循环播放音效 */\r\n    playEffectLoop(url: string | AudioClip, volume:number, bundleName?: string) {\r\n        if (this._switch_effect) {\r\n            this.effect.loop = true;\r\n            this.effect.load(url, volume, null!, bundleName);\r\n        }\r\n    }\r\n\r\n    /** 停止音效播放 */\r\n    stopEffect() {\r\n        if (this._switch_effect && this.effect.playing) {\r\n            this.effect.stop();\r\n            console.log(\"stopeffect : \");\r\n        }\r\n    }\r\n\r\n    /** 释放音效资源 */\r\n    releaseEffect(url: string | AudioClip, bundleName?: string) {\r\n        this.effect.release(url, bundleName);\r\n    }\r\n\r\n    /**\r\n     * 获取音效音量\r\n     */\r\n    get volumeEffect(): number {\r\n        return this._volume_effect;\r\n    }\r\n\r\n    /**\r\n     * 设置获取音效音量\r\n     * @param value     音效音量值\r\n     */\r\n    set volumeEffect(value: number) {\r\n        this._volume_effect = value;\r\n        this.effect.volume = value;\r\n    }\r\n\r\n    /**\r\n     * 获取音效开关值\r\n     */\r\n    get switchEffect(): boolean {\r\n        return this._switch_effect;\r\n    }\r\n\r\n    /**\r\n     * 设置音效开关值\r\n     * @param value     音效开关值\r\n     */\r\n    set switchEffect(value: boolean) {\r\n        this._switch_effect = value;\r\n        if (!value) this.effect.stop();\r\n    }\r\n\r\n    /** 恢复当前暂停的音乐与音效播放 */\r\n    resumeAll() {\r\n        if (this.music) {\r\n            if (!this.music.playing && this.music.progress > 0) this.music.play();\r\n            if (!this.effect.playing && this.effect.progress > 0) this.effect.play();\r\n        }\r\n    }\r\n\r\n    /** 暂停当前音乐与音效的播放 */\r\n    pauseAll() {\r\n        if (this.music) {\r\n            if (this.music.playing) this.music.pause();\r\n            if (this.effect.playing) this.effect.pause();\r\n        }\r\n    }\r\n\r\n    /** 停止当前音乐与音效的播放 */\r\n    stopAll() {\r\n        if (this.music) {\r\n            this.music.stop();\r\n            this.effect.stop();\r\n        }\r\n    }\r\n\r\n    /** 保存音乐音效的音量、开关配置数据到本地 */\r\n    save() {\r\n        this.local_data.volume_music = this._volume_music;\r\n        this.local_data.volume_effect = this._volume_effect;\r\n        this.local_data.switch_music = this._switch_music;\r\n        this.local_data.switch_effect = this._switch_effect;\r\n\r\n        oops.storage.set(LOCAL_STORE_KEY, this.local_data);\r\n    }\r\n\r\n\r\n    /** 本地加载音乐音效的音量、开关配置数据并设置到游戏中 */\r\n    load() {\r\n        this.music = this.getComponent(AudioMusic) || this.addComponent(AudioMusic)!;\r\n        this.effect = this.getComponent(AudioEffect) || this.addComponent(AudioEffect)!;\r\n\r\n        this.local_data = oops.storage.getJson(LOCAL_STORE_KEY);\r\n        if (this.local_data) {\r\n            try {\r\n                this.setState();\r\n            } catch (e) {\r\n                this.setStateDefault();\r\n            }\r\n        } else {\r\n            this.setStateDefault();\r\n        }\r\n\r\n        if (this.music) this.music.volume = this._volume_music;\r\n        if (this.effect) this.effect.volume = this._volume_effect;\r\n    }\r\n\r\n    private setState() {\r\n        this._volume_music = this.local_data.volume_music;\r\n        this._volume_effect = this.local_data.volume_effect;\r\n        this._switch_music = this.local_data.switch_music;\r\n        this._switch_effect = this.local_data.switch_effect;\r\n    }\r\n\r\n    private setStateDefault() {\r\n        this.local_data = {};\r\n        this._volume_music = 1;\r\n        this._volume_effect = 1;\r\n        this._switch_music = true;\r\n        this._switch_effect = true;\r\n    }\r\n}"]}