{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/extensions/oops-plugin-framework/assets/core/gui/layer/LayerUI.ts"],"names":["LayerUI","instantiate","Node","Prefab","Widget","oops","ViewParams","DelegateComponent","constructor","name","onOpenFailure","ui_nodes","Map","ui_cache","widget","addComponent","isAlignLeft","isAlignRight","isAlignTop","isAlignBottom","left","right","top","bottom","alignMode","enabled","add","config","params","callbacks","has","prefab","console","warn","vp","get","set","valid","load","bundle","timerId","setTimeout","onLoadingTimeoutGui","game","loadingTimeoutGui","node","showUi","res","defaultBundleName","loadAsync","ui","dc","onCloseWindow","bind","failure","gui","waitClose","clearTimeout","waitOpen","delete","comp","getComponent","r","parent","onLoadFailure","remove","prefabPath","isDestroy","release","undefined","destroy","childNode","removeCache","clear","forEach","value","key","hasUI","size"],"mappings":"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","sourcesContent":["import { instantiate, Node, Prefab, Widget } from \"cc\";\r\nimport { oops } from \"../../Oops\";\r\nimport { UICallbacks, ViewParams } from \"./Defines\";\r\nimport { DelegateComponent } from \"./DelegateComponent\";\r\nimport { UIConfig } from \"./LayerManager\";\r\n\r\n/** 界面层对象 */\r\nexport class LayerUI extends Node {\r\n    /** 全局窗口打开失败 */\r\n    onOpenFailure: Function = null!;\r\n    /** 显示界面节点集合 */\r\n    protected ui_nodes = new Map<string, ViewParams>();\r\n    /** 被移除的界面缓存数据 */\r\n    protected ui_cache = new Map<string, ViewParams>();\r\n\r\n    /**\r\n     * UI基础层，允许添加多个预制件节点\r\n     * @param name 该层名\r\n     */\r\n    constructor(name: string) {\r\n        super(name);\r\n\r\n        const widget: Widget = this.addComponent(Widget);\r\n        widget.isAlignLeft = widget.isAlignRight = widget.isAlignTop = widget.isAlignBottom = true;\r\n        widget.left = widget.right = widget.top = widget.bottom = 0;\r\n        widget.alignMode = 2;\r\n        widget.enabled = true;\r\n    }\r\n\r\n    /**\r\n     * 添加一个预制件节点到层容器中，该方法将返回一个唯一`uuid`来标识该操作节点\r\n     * @param config     界面配置数据\r\n     * @param params     自定义参数\r\n     * @param callbacks  回调函数对象，可选\r\n     * @returns ture为成功,false为失败\r\n     */\r\n    add(config: UIConfig, params?: any, callbacks?: UICallbacks) {\r\n        if (this.ui_nodes.has(config.prefab)) {\r\n            console.warn(`路径为【${config.prefab}】的预制重复加载`);\r\n            return;\r\n        }\r\n\r\n        // 检查缓存中是否存界面\r\n        let vp = this.ui_cache.get(config.prefab);\r\n        if (vp == null) {\r\n            vp = new ViewParams();\r\n            vp.config = config;\r\n        }\r\n        this.ui_nodes.set(config.prefab, vp);\r\n\r\n        vp.params = params ?? {};\r\n        vp.callbacks = callbacks ?? {};\r\n        vp.valid = true;\r\n\r\n        this.load(vp, config.bundle)\r\n    }\r\n\r\n    /**\r\n     * 加载界面资源\r\n     * @param vp         显示参数\r\n     * @param bundle     远程资源包名，如果为空就是默认本地资源包\r\n     */\r\n    protected async load(vp: ViewParams, bundle?: string) {\r\n        // 加载界面资源超时提示\r\n        const timerId = setTimeout(this.onLoadingTimeoutGui, oops.config.game.loadingTimeoutGui);\r\n\r\n        if (vp && vp.node) {\r\n            await this.showUi(vp);\r\n        }\r\n        else {\r\n            // 优先加载配置的指定资源包中资源，如果没配置则加载默认资源包资源\r\n            bundle = bundle || oops.res.defaultBundleName;\r\n            const res = await oops.res.loadAsync(bundle, vp.config.prefab, Prefab);\r\n            if (res) {\r\n                const ui = instantiate(res);\r\n                vp.node = ui;\r\n\r\n                // 窗口事件委托\r\n                const dc = ui.addComponent(DelegateComponent);\r\n                dc.vp = vp;\r\n                dc.onCloseWindow = this.onCloseWindow.bind(this);\r\n\r\n                // 显示界面\r\n                await this.showUi(vp);\r\n            }\r\n            else {\r\n                console.warn(`路径为【${vp.config.prefab}】的预制加载失败`);\r\n                this.failure(vp);\r\n            }\r\n        }\r\n\r\n        // 关闭界面资源超时提示\r\n        oops.gui.waitClose();\r\n        clearTimeout(timerId);\r\n    }\r\n\r\n    /** 加载超时事件*/\r\n    private onLoadingTimeoutGui() {\r\n        oops.gui.waitOpen();\r\n    }\r\n\r\n    /** 窗口关闭事件 */\r\n    protected onCloseWindow(vp: ViewParams) {\r\n        this.ui_nodes.delete(vp.config.prefab);\r\n    }\r\n\r\n    /**\r\n     * 创建界面节点\r\n     * @param vp  视图参数\r\n     */\r\n    protected async showUi(vp: ViewParams): Promise<boolean> {\r\n        // 触发窗口添加事件\r\n        const comp = vp.node.getComponent(DelegateComponent)!;\r\n        const r: boolean = await comp.add();\r\n        if (r) {\r\n            vp.node.parent = this;\r\n\r\n            // 标记界面为使用状态\r\n            vp.valid = true;\r\n        }\r\n        else {\r\n            console.warn(`路径为【${vp.config.prefab}】的自定义预处理逻辑异常.检查预制上绑定的组件中 onAdded 方法,返回true才能正确完成窗口显示流程`);\r\n            this.failure(vp);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    /** 打开窗口失败逻辑 */\r\n    protected failure(vp: ViewParams) {\r\n        this.onCloseWindow(vp);\r\n        vp.callbacks && vp.callbacks.onLoadFailure && vp.callbacks.onLoadFailure();\r\n        this.onOpenFailure && this.onOpenFailure();\r\n    }\r\n\r\n    /**\r\n     * 根据预制件路径删除，预制件如在队列中也会被删除，如果该预制件存在多个也会一起删除\r\n     * @param prefabPath   预制路径\r\n     * @param isDestroy    移除后是否释放\r\n     */\r\n    remove(prefabPath: string, isDestroy?: boolean): void {\r\n        let release = undefined;\r\n        if (isDestroy !== undefined) release = isDestroy;\r\n\r\n        // 界面移出舞台\r\n        const vp = this.ui_nodes.get(prefabPath);\r\n        if (vp) {\r\n            // 优先使用参数中控制的释放条件，如果未传递参数则用配置中的释放条件，默认不缓存关闭的界面\r\n            if (release === undefined) {\r\n                release = vp.config.destroy !== undefined ? vp.config.destroy : true;\r\n            }\r\n\r\n            // 不释放界面，缓存起来待下次使用\r\n            if (release === false) {\r\n                this.ui_cache.set(vp.config.prefab, vp);\r\n            }\r\n\r\n            const childNode = vp.node;\r\n            const comp = childNode.getComponent(DelegateComponent)!;\r\n            comp.remove(release);\r\n        }\r\n\r\n        // 验证是否删除后台缓存界面\r\n        if (release === true) this.removeCache(prefabPath);\r\n    }\r\n\r\n    /** 删除缓存的界面，当缓存界面被移除舞台时，可通过此方法删除缓存界面 */\r\n    private removeCache(prefabPath: string) {\r\n        let vp = this.ui_cache.get(prefabPath);\r\n        if (vp) {\r\n            this.onCloseWindow(vp);\r\n            this.ui_cache.delete(prefabPath);\r\n            const childNode = vp.node;\r\n            childNode.destroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据预制路径获取已打开界面的节点对象\r\n     * @param prefabPath  预制路径\r\n     */\r\n    get(prefabPath: string): Node {\r\n        const vp = this.ui_nodes.get(prefabPath);\r\n        if (vp)\r\n            return vp.node;\r\n        return null!;\r\n    }\r\n\r\n    /**\r\n     * 判断当前层是否包含 uuid或预制件路径对应的Node节点\r\n     * @param prefabPath 预制件路径或者UUID\r\n     */\r\n    has(prefabPath: string): boolean {\r\n        return this.ui_nodes.has(prefabPath);\r\n    }\r\n\r\n    /**\r\n     * 清除所有节点，队列当中的也删除\r\n     * @param isDestroy  移除后是否释放\r\n     */\r\n    clear(isDestroy: boolean): void {\r\n        // 清除所有显示的界面\r\n        this.ui_nodes.forEach((value: ViewParams, key: string) => {\r\n            this.remove(value.config.prefab, isDestroy);\r\n            value.valid = false;\r\n        });\r\n        this.ui_nodes.clear();\r\n\r\n        // 清除缓存中的界面\r\n        if (isDestroy) {\r\n            this.ui_cache.forEach((value: ViewParams, prefabPath: string) => {\r\n                this.removeCache(prefabPath);\r\n            });\r\n        }\r\n    }\r\n\r\n    hasUI() : boolean {\r\n        return this.ui_nodes.size > 0;\r\n    }\r\n}"]}