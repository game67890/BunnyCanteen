{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/extensions/oops-plugin-framework/assets/libs/extension/ArrayExt.ts"],"names":["Array","prototype","__cc_extended","Object","defineProperties","remove","value","filter","i","length","splice","removeOne","random","element","Math","floor","fastRemoveAt","index","res","fastRemove","indexOf","first","last","max","mapper","_max","a","b","temp","reduce","prev","cur","min","_min","distinct","v","arr","filterIndex","output","push","count","result","sum","average","orderBy","mappers","_i","arguments","slice","sort","va","vb","orderByDesc","binarySearch","keyMapper","low","high","mid","midValue","binaryInsert","item","unique","undefined","NaN","itemValue","binaryDistinct","findLast","predicate","findLastIndex","groupBy","grouper","group","next","groupKey","keys","map","key"],"mappings":"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","sourcesContent":["\r\ndeclare global {\r\n    interface Array<T> {\r\n        /** 删除指定条件的数据 */\r\n        remove(filter: (v: T, i: number, arr: Array<T>) => boolean): Array<T>;\r\n        remove(filter: T): Array<T>;\r\n\r\n        /** 找到第一个满足回调条件的元素并将其移除 */\r\n        removeOne(filter: (v: T, i: number, arr: Array<T>) => boolean): Array<T>;\r\n        removeOne(filter: T): Array<T>;\r\n\r\n        random(): T;\r\n\r\n        /** 获取数组中第一条数据 */\r\n        first(): T;\r\n        /** 获取数组中最后条数据 */\r\n        last(): T;\r\n\r\n        /** 获取数组中最大数据 */\r\n        max(): T;\r\n        max<P>(mapper: (v: T, i: number, arr: this) => P): P | null;\r\n\r\n        /** 获取数组中最小数据 */\r\n        min(): T;\r\n        min<P>(mapper: (v: T, i: number, arr: this) => P): P | null;\r\n\r\n        /** 返回没有重复数据的新数组 */\r\n        distinct(): Array<T>;\r\n        filterIndex(filter: (v: T, i: number, arr: this) => boolean): Array<number>;\r\n\r\n        /** 过滤出有效记录数量 */\r\n        count(filter: (v: T, i: number, arr: this) => boolean): number;\r\n        /** 数组求和 */\r\n        sum(mapper?: (v: T, i: number, arr: this) => number): number;\r\n        /** 数组平均值 */\r\n        average(mapper?: (v: T, i: number, arr: this) => number): number;\r\n\r\n        /** 移除指定位置的元素 返回移除的元素 */\r\n        fastRemoveAt(index: number): T;\r\n        /** 移除数组中指定数据 */\r\n        fastRemove(value: T): boolean;\r\n\r\n        /** 同find，但返回整个Array<T>中最后一个匹配元素 */\r\n        findLast(predicate: (value: T, index: number, obj: Array<T>) => boolean): T | undefined;\r\n        /** 同find，但返回整个Array<T>中最后一个匹配元素的index */\r\n        findLastIndex(predicate: (value: T, index: number, obj: Array<T>) => boolean): number;\r\n\r\n        /** 排序升序，返回新的数组 */\r\n        orderBy(...mappers: ((v: T) => any)[]): Array<T>;\r\n        /** 排序降序，返回新的数组  */\r\n        orderByDesc(...mappers: ((v: T) => any)[]): Array<T>;\r\n\r\n        /**\r\n         * 二分查找 前提是数组一定是有序的\r\n         * @param value 要查找的值\r\n         * @param keyMapper 要查找的值的mapper方法（默认为查找数组元素本身）\r\n         * @return 查找到的index，查不到返回-1\r\n         */\r\n        binarySearch(value: number | string, keyMapper?: (v: T) => (number | string)): number;\r\n        /**\r\n         * 二分插入 前提是数组一定是有序的\r\n         * @param item 要插入的值\r\n         * @param keyMapper 二分查找时要查找的值的mapper方法（默认为查找数组元素本身）\r\n         * @param unique 是否去重，如果为true，则如果数组内已经有值时不插入，返回已有值的number\r\n         * @return 返回插入的index位置\r\n         */\r\n        binaryInsert(item: T, unique?: boolean): number;\r\n        binaryInsert(item: T, keyMapper: (v: T) => (number | string), unique?: boolean): number;\r\n        /**\r\n         * 二分去重 前提是数组一定是有序的\r\n         * @param keyMapper 二分查找时要查找的值的mapper方法（默认为查找数组元素本身）\r\n         */\r\n        binaryDistinct(keyMapper?: (v: T) => (number | string)): Array<T>;\r\n        /** 指定字段分组 */\r\n        groupBy(grouper: (v: T) => any): (T[] & { key: any })[];\r\n    }\r\n}\r\n\r\n// @ts-ignore\r\n!Array.prototype.__cc_extended && Object.defineProperties(Array.prototype, {\r\n    remove: {\r\n        value: function (filter: any) {\r\n            if (typeof (filter) == 'function') {\r\n                for (let i = this.length - 1; i > -1; --i) {\r\n                    filter(this[i], i, this) && this.splice(i, 1);\r\n                }\r\n            }\r\n            else {\r\n                for (let i = this.length - 1; i > -1; --i) {\r\n                    this[i] === filter && this.splice(i, 1);\r\n                }\r\n            }\r\n            return this;\r\n        }\r\n    },\r\n    removeOne: {\r\n        value: function (filter: any) {\r\n            if (typeof (filter) == 'function') {\r\n                for (let i = 0; i < this.length; ++i) {\r\n                    if (filter(this[i], i, this)) {\r\n                        this.splice(i, 1);\r\n                        return this;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 0; i < this.length; ++i) {\r\n                    if (this[i] === filter) {\r\n                        this.splice(i, 1);\r\n                        return this;\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        }\r\n    },\r\n    random: {\r\n        value: function () {\r\n            let element = this[Math.floor(Math.random() * this.length)];\r\n            return element;\r\n        }\r\n    },\r\n    fastRemoveAt: {\r\n        value: function (index: number) {\r\n            const length = this.length;\r\n            if (index < 0 || index >= length) {\r\n                return null;\r\n            }\r\n            let res = this[index];\r\n            this[index] = this[length - 1];\r\n            this.length = length - 1;\r\n            return res;\r\n        }\r\n    },\r\n    fastRemove: {\r\n        value: function (value: any) {\r\n            const index = this.indexOf(value);\r\n            if (index >= 0) {\r\n                this[index] = this[this.length - 1];\r\n                --this.length;\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    first: {\r\n        value: function () {\r\n            return this.length ? this[0] : null;\r\n        }\r\n    },\r\n    last: {\r\n        value: function () {\r\n            return this.length ? this[this.length - 1] : null;\r\n        }\r\n    },\r\n    max: {\r\n        value: function (mapper: any) {\r\n            if (!this.length) {\r\n                return null;\r\n            }\r\n            function _max(a: number, b: number) {\r\n                return a > b ? a : b;\r\n            }\r\n            if (typeof (mapper) == 'function') {\r\n                let max = mapper(this[0], 0, this);\r\n                for (let i = 1; i < this.length; ++i) {\r\n                    let temp = mapper(this[i], i, this);\r\n                    max = temp > max ? temp : max;\r\n                }\r\n                return max;\r\n            }\r\n            else {\r\n                return this.reduce(function (prev: any, cur: any) { return _max(prev, cur); });\r\n            }\r\n        }\r\n    },\r\n    min: {\r\n        value: function (mapper: any) {\r\n            if (!this.length) {\r\n                return null;\r\n            }\r\n            function _min(a: number, b: number) {\r\n                return a < b ? a : b;\r\n            }\r\n            if (typeof (mapper) == 'function') {\r\n                let min = mapper(this[0], 0, this);\r\n                for (let i = 1; i < this.length; ++i) {\r\n                    let temp = mapper(this[i], i, this);\r\n                    min = temp < min ? temp : min;\r\n                }\r\n                return min;\r\n            }\r\n            else {\r\n                return this.reduce(function (prev: any, cur: any) { return _min(prev, cur); });\r\n            }\r\n        }\r\n    },\r\n    distinct: {\r\n        value: function () {\r\n            return this.filter(function (v: any, i: number, arr: any[]) { return arr.indexOf(v) === i; });\r\n        }\r\n    },\r\n    filterIndex: {\r\n        value: function (filter: any) {\r\n            let output = [];\r\n            for (let i = 0; i < this.length; ++i) {\r\n                if (filter(this[i], i, this)) {\r\n                    output.push(i);\r\n                }\r\n            }\r\n            return output;\r\n        }\r\n    },\r\n    count: {\r\n        value: function (filter: any) {\r\n            let result = 0;\r\n            for (let i = 0; i < this.length; ++i) {\r\n                if (filter(this[i], i, this)) {\r\n                    ++result;\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    },\r\n    sum: {\r\n        value: function (mapper: any) {\r\n            let result = 0;\r\n            for (let i = 0; i < this.length; ++i) {\r\n                result += mapper ? mapper(this[i], i, this) : this[i];\r\n            }\r\n            return result;\r\n        }\r\n    },\r\n    average: {\r\n        value: function (mapper: any) {\r\n            return this.sum(mapper) / this.length;\r\n        }\r\n    },\r\n    orderBy: {\r\n        value: function () {\r\n            let mappers = [];\r\n            for (let _i = 0; _i < arguments.length; _i++) {\r\n                mappers[_i] = arguments[_i];\r\n            }\r\n            return this.slice().sort(function (a: any, b: any) {\r\n                for (let i = 0; i < mappers.length; ++i) {\r\n                    let va = mappers[i](a);\r\n                    let vb = mappers[i](b);\r\n                    if (va > vb) {\r\n                        return 1;\r\n                    }\r\n                    else if (va < vb) {\r\n                        return -1;\r\n                    }\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n    },\r\n    orderByDesc: {\r\n        value: function () {\r\n            let mappers = [];\r\n            for (let _i = 0; _i < arguments.length; _i++) {\r\n                mappers[_i] = arguments[_i];\r\n            }\r\n            return this.slice().sort(function (a: any, b: any) {\r\n                for (let i = 0; i < mappers.length; ++i) {\r\n                    let va = mappers[i](a);\r\n                    let vb = mappers[i](b);\r\n                    if (va > vb) {\r\n                        return -1;\r\n                    }\r\n                    else if (va < vb) {\r\n                        return 1;\r\n                    }\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n    },\r\n    binarySearch: {\r\n        value: function (value: any, keyMapper: any) {\r\n            let low = 0, high = this.length - 1;\r\n            while (low <= high) {\r\n                let mid = ((high + low) / 2) | 0;\r\n                let midValue = keyMapper ? keyMapper(this[mid]) : this[mid];\r\n                if (value === midValue) {\r\n                    return mid;\r\n                }\r\n                else if (value > midValue) {\r\n                    low = mid + 1;\r\n                }\r\n                else if (value < midValue) {\r\n                    high = mid - 1;\r\n                }\r\n            }\r\n            return -1;\r\n        }\r\n    },\r\n    binaryInsert: {\r\n        value: function (item: any, keyMapper: any, unique: any) {\r\n            if (typeof (keyMapper) == 'boolean') {\r\n                unique = keyMapper;\r\n                keyMapper = undefined;\r\n            }\r\n            let low = 0, high = this.length - 1;\r\n            let mid = NaN;\r\n            let itemValue = keyMapper ? keyMapper(item) : item;\r\n            while (low <= high) {\r\n                mid = ((high + low) / 2) | 0;\r\n                let midValue = keyMapper ? keyMapper(this[mid]) : this[mid];\r\n                if (itemValue === midValue) {\r\n                    if (unique) {\r\n                        return mid;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n                else if (itemValue > midValue) {\r\n                    low = mid + 1;\r\n                }\r\n                else if (itemValue < midValue) {\r\n                    high = mid - 1;\r\n                }\r\n            }\r\n            let index = low > mid ? mid + 1 : mid;\r\n            this.splice(index, 0, item);\r\n            return index;\r\n        }\r\n    },\r\n    binaryDistinct: {\r\n        value: function (keyMapper: any) {\r\n            return this.filter(function (v: any, i: number, arr: any[]) { return arr.binarySearch(v, keyMapper) === i; });\r\n        }\r\n    },\r\n    findLast: {\r\n        value: function (predicate: any) {\r\n            for (let i = this.length - 1; i > -1; --i) {\r\n                if (predicate(this[i], i, this)) {\r\n                    return this[i];\r\n                }\r\n            }\r\n            return undefined;\r\n        }\r\n    },\r\n    findLastIndex: {\r\n        value: function (predicate: any) {\r\n            for (let i = this.length - 1; i > -1; --i) {\r\n                if (predicate(this[i], i, this)) {\r\n                    return i;\r\n                }\r\n            }\r\n            return -1;\r\n        }\r\n    },\r\n    groupBy: {\r\n        value: function (grouper: any) {\r\n            let group = this.reduce(function (prev: any, next: any) {\r\n                let groupKey = grouper(next);\r\n                if (!prev[groupKey]) {\r\n                    prev[groupKey] = [];\r\n                }\r\n                prev[groupKey].push(next);\r\n                return prev;\r\n            }, {});\r\n            return Object.keys(group).map(function (key) {\r\n                let arr = group[key];\r\n                arr.key = key;\r\n                return arr;\r\n            });\r\n        }\r\n    },\r\n    __cc_extended: {\r\n        value: true\r\n    }\r\n});\r\n\r\nexport { };\r\n\r\n"]}