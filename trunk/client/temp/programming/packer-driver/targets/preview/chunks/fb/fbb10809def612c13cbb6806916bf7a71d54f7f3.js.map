{"version":3,"sources":["file:///F:/TON-Game/src/trunk/client/assets/resources/libs/utils/object_pool.ts"],"names":["ObjectPool","error","isValid","actives","_activeList","activeCount","length","reservedCount","_reserveList","creator","_creator","constructor","reserve","Array","initializeReserve","then","i","gameObject","create","push","getObject","obj","pop","returnObject","index","indexOf","splice","destroy","returnAllObject","destroyAllObject"],"mappings":"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","sourcesContent":["import {error, isValid} from \"cc\";\r\n\r\n/**\r\n * 对象创建器\r\n */\r\nexport interface IObjectCreator<T> {\r\n    /**\r\n     * 创建对象\r\n     */\r\n    create(...params: any[]): Promise<T>\r\n\r\n    /**\r\n     * 销毁对象\r\n     */\r\n    destroy(obj: T): void\r\n}\r\n\r\n/**\r\n * 对象池\r\n */\r\nexport default class ObjectPool<T> {\r\n    private _activeList: Array<T>; // 已取对象列表\r\n    private _reserveList: Array<T>; // 以分配未使用对象列表\r\n\r\n    private _creator: IObjectCreator<T>; // 对象创建器\r\n\r\n    public get actives() {\r\n        return this._activeList;\r\n    }\r\n\r\n    /**\r\n     * 获取活跃对象数\r\n     */\r\n    public get activeCount(): number {\r\n        return this._activeList.length;\r\n    }\r\n\r\n    /**\r\n     * 获取待机对象数\r\n     */\r\n    public get reservedCount(): number {\r\n        return this._reserveList.length;\r\n    }\r\n\r\n    /**\r\n     * 获取创建器\r\n     */\r\n    public get creator(): IObjectCreator<T> {\r\n        return this._creator;\r\n    }\r\n\r\n    /**\r\n     * 注册创建器\r\n     */\r\n    protected set creator(creator: IObjectCreator<T>) {\r\n        this._creator = creator;\r\n    }\r\n\r\n    protected constructor(reserve: number = 0) {\r\n        this._activeList = new Array<T>();\r\n        this._reserveList = new Array<T>();\r\n        this.initializeReserve(reserve).then();\r\n    }\r\n\r\n    /**\r\n     * 初始化对象池\r\n     */\r\n    private async initializeReserve(reserve: number) {\r\n        for (let i = 0; i < reserve; i++) {\r\n            const gameObject = await this._creator.create();\r\n            this._reserveList.push(gameObject);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取获取池中的对象\r\n     */\r\n    public async getObject(...params: any): Promise<T> {\r\n        let obj: T;\r\n\r\n        if (this.reservedCount == 0) {\r\n            obj = await this._creator.create(...params);\r\n        } else {\r\n            obj = this._reserveList.pop();\r\n        }\r\n\r\n        this._activeList.push(obj);\r\n\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * 归还对象\r\n     */\r\n    public returnObject(obj: T) {\r\n        const index: number = this._activeList.indexOf(obj);\r\n        if (index < 0) {\r\n            error('return object failed:', obj, index);\r\n            return;\r\n        }\r\n\r\n        this._activeList.splice(index, 1);\r\n\r\n        this._creator.destroy(obj);\r\n        if (isValid(obj)) {\r\n            this._reserveList.push(obj);\r\n        }\r\n    }\r\n\r\n    // 归还所有的对象\r\n    public returnAllObject() {\r\n        for (const obj of this._activeList) {\r\n            this._creator.destroy(obj);\r\n            if (isValid(obj)) {\r\n                this._reserveList.push(obj);\r\n            }\r\n        }\r\n        this._activeList = [];\r\n    }\r\n\r\n    // 销毁掉所有的对象\r\n    public destroyAllObject() {\r\n        for (const obj of this._activeList) {\r\n            this._creator.destroy(obj);\r\n        }\r\n        for (const obj of this._reserveList) {\r\n            this._creator.destroy(obj);\r\n        }\r\n        this._reserveList = [];\r\n        this._activeList = [];\r\n    }\r\n}\r\n"]}